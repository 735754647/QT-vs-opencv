/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 12.0
 * Usage: Interface to C
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#if defined(__cplusplus)
extern "C" {
#endif

/* HALCON/C operators */
LIntExport Herror T_union_cotangential_contours_xld(const Hobject Contours, Hobject *UnionContours, const Htuple FitClippingLength, const Htuple FitLength, const Htuple MaxTangAngle, const Htuple MaxDist, const Htuple MaxDistPerp, const Htuple MaxOverlap, const Htuple Mode);
LIntExport Herror union_cotangential_contours_xld(const Hobject Contours, Hobject *UnionContours, double FitClippingLength, double FitLength, double MaxTangAngle, double MaxDist, double MaxDistPerp, double MaxOverlap, const char *Mode);
LIntExport Herror T_polar_trans_contour_xld_inv(const Hobject PolarContour, Hobject *XYTransContour, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple WidthIn, const Htuple HeightIn, const Htuple Width, const Htuple Height);
LIntExport Herror polar_trans_contour_xld_inv(const Hobject PolarContour, Hobject *XYTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong WidthIn, Hlong HeightIn, Hlong Width, Hlong Height);
LIntExport Herror T_polar_trans_contour_xld(const Hobject Contour, Hobject *PolarTransContour, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple Width, const Htuple Height);
LIntExport Herror polar_trans_contour_xld(const Hobject Contour, Hobject *PolarTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height);
LIntExport Herror T_gen_nurbs_interp(const Htuple Rows, const Htuple Cols, const Htuple Tangents, const Htuple Degree, Htuple *CtrlRows, Htuple *CtrlCols, Htuple *Knots);
LIntExport Herror T_gen_contour_nurbs_xld(Hobject *Contour, const Htuple Rows, const Htuple Cols, const Htuple Knots, const Htuple Weights, const Htuple Degree, const Htuple MaxError, const Htuple MaxDistance);
LIntExport Herror T_union2_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsUnion);
LIntExport Herror union2_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsUnion);
LIntExport Herror T_union2_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursUnion);
LIntExport Herror union2_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursUnion);
LIntExport Herror T_symm_difference_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsDifference);
LIntExport Herror symm_difference_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsDifference);
LIntExport Herror T_symm_difference_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursDifference);
LIntExport Herror symm_difference_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursDifference);
LIntExport Herror T_difference_closed_polygons_xld(const Hobject Polygons, const Hobject Sub, Hobject *PolygonsDifference);
LIntExport Herror difference_closed_polygons_xld(const Hobject Polygons, const Hobject Sub, Hobject *PolygonsDifference);
LIntExport Herror T_difference_closed_contours_xld(const Hobject Contours, const Hobject Sub, Hobject *ContoursDifference);
LIntExport Herror difference_closed_contours_xld(const Hobject Contours, const Hobject Sub, Hobject *ContoursDifference);
LIntExport Herror T_intersection_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsIntersection);
LIntExport Herror intersection_closed_polygons_xld(const Hobject Polygons1, const Hobject Polygons2, Hobject *PolygonsIntersection);
LIntExport Herror T_intersection_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursIntersection);
LIntExport Herror intersection_closed_contours_xld(const Hobject Contours1, const Hobject Contours2, Hobject *ContoursIntersection);
LIntExport Herror T_union_cocircular_contours_xld(const Hobject Contours, Hobject *UnionContours, const Htuple MaxArcAngleDiff, const Htuple MaxArcOverlap, const Htuple MaxTangentAngle, const Htuple MaxDist, const Htuple MaxRadiusDiff, const Htuple MaxCenterDist, const Htuple MergeSmallContours, const Htuple Iterations);
LIntExport Herror union_cocircular_contours_xld(const Hobject Contours, Hobject *UnionContours, double MaxArcAngleDiff, double MaxArcOverlap, double MaxTangentAngle, double MaxDist, double MaxRadiusDiff, double MaxCenterDist, const char *MergeSmallContours, Hlong Iterations);
LIntExport Herror T_crop_contours_xld(const Hobject Contours, Hobject *CroppedContours, const Htuple Row1, const Htuple Col1, const Htuple Row2, const Htuple Col2, const Htuple CloseContours);
LIntExport Herror crop_contours_xld(const Hobject Contours, Hobject *CroppedContours, double Row1, double Col1, double Row2, double Col2, const char *CloseContours);
LIntExport Herror T_gen_cross_contour_xld(Hobject *Cross, const Htuple Row, const Htuple Col, const Htuple Size, const Htuple Angle);
LIntExport Herror gen_cross_contour_xld(Hobject *Cross, double Row, double Col, double Size, double Angle);
LIntExport Herror T_sort_contours_xld(const Hobject Contours, Hobject *SortedContours, const Htuple SortMode, const Htuple Order, const Htuple RowOrCol);
LIntExport Herror sort_contours_xld(const Hobject Contours, Hobject *SortedContours, const char *SortMode, const char *Order, const char *RowOrCol);
LIntExport Herror T_merge_cont_line_scan_xld(const Hobject CurrConts, const Hobject PrevConts, Hobject *CurrMergedConts, Hobject *PrevMergedConts, const Htuple ImageHeight, const Htuple Margin, const Htuple MergeBorder, const Htuple MaxImagesCont);
LIntExport Herror merge_cont_line_scan_xld(const Hobject CurrConts, const Hobject PrevConts, Hobject *CurrMergedConts, Hobject *PrevMergedConts, Hlong ImageHeight, double Margin, const char *MergeBorder, Hlong MaxImagesCont);
LIntExport Herror T_read_polygon_xld_arc_info(Hobject *Polygons, const Htuple FileName);
LIntExport Herror read_polygon_xld_arc_info(Hobject *Polygons, const char *FileName);
LIntExport Herror T_write_polygon_xld_arc_info(const Hobject Polygons, const Htuple FileName);
LIntExport Herror write_polygon_xld_arc_info(const Hobject Polygons, const char *FileName);
LIntExport Herror T_read_contour_xld_arc_info(Hobject *Contours, const Htuple FileName);
LIntExport Herror read_contour_xld_arc_info(Hobject *Contours, const char *FileName);
LIntExport Herror T_write_contour_xld_arc_info(const Hobject Contours, const Htuple FileName);
LIntExport Herror write_contour_xld_arc_info(const Hobject Contours, const char *FileName);
LIntExport Herror T_read_world_file(const Htuple FileName, Htuple *WorldTransformation);
LIntExport Herror T_gen_parallel_contour_xld(const Hobject Contours, Hobject *ParallelContours, const Htuple Mode, const Htuple Distance);
LIntExport Herror gen_parallel_contour_xld(const Hobject Contours, Hobject *ParallelContours, const char *Mode, double Distance);
LIntExport Herror T_gen_rectangle2_contour_xld(Hobject *Rectangle, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2);
LIntExport Herror gen_rectangle2_contour_xld(Hobject *Rectangle, double Row, double Column, double Phi, double Length1, double Length2);
LIntExport Herror T_dist_rectangle2_contour_points_xld(const Hobject Contour, const Htuple ClippingEndPoints, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2, Htuple *Distances);
LIntExport Herror T_fit_rectangle2_contour_xld(const Hobject Contours, const Htuple Algorithm, const Htuple MaxNumPoints, const Htuple MaxClosureDist, const Htuple ClippingEndPoints, const Htuple Iterations, const Htuple ClippingFactor, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2, Htuple *PointOrder);
LIntExport Herror fit_rectangle2_contour_xld(const Hobject Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Phi, double *Length1, double *Length2, char *PointOrder);
LIntExport Herror T_segment_contour_attrib_xld(const Hobject Contour, Hobject *ContourPart, const Htuple Attribute, const Htuple Operation, const Htuple Min, const Htuple Max);
LIntExport Herror segment_contour_attrib_xld(const Hobject Contour, Hobject *ContourPart, const char *Attribute, const char *Operation, double Min, double Max);
LIntExport Herror T_segment_contours_xld(const Hobject Contours, Hobject *ContoursSplit, const Htuple Mode, const Htuple SmoothCont, const Htuple MaxLineDist1, const Htuple MaxLineDist2);
LIntExport Herror segment_contours_xld(const Hobject Contours, Hobject *ContoursSplit, const char *Mode, Hlong SmoothCont, double MaxLineDist1, double MaxLineDist2);
LIntExport Herror T_fit_circle_contour_xld(const Hobject Contours, const Htuple Algorithm, const Htuple MaxNumPoints, const Htuple MaxClosureDist, const Htuple ClippingEndPoints, const Htuple Iterations, const Htuple ClippingFactor, Htuple *Row, Htuple *Column, Htuple *Radius, Htuple *StartPhi, Htuple *EndPhi, Htuple *PointOrder);
LIntExport Herror fit_circle_contour_xld(const Hobject Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Radius, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror T_fit_line_contour_xld(const Hobject Contours, const Htuple Algorithm, const Htuple MaxNumPoints, const Htuple ClippingEndPoints, const Htuple Iterations, const Htuple ClippingFactor, Htuple *RowBegin, Htuple *ColBegin, Htuple *RowEnd, Htuple *ColEnd, Htuple *Nr, Htuple *Nc, Htuple *Dist);
LIntExport Herror fit_line_contour_xld(const Hobject Contours, const char *Algorithm, Hlong MaxNumPoints, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *RowBegin, double *ColBegin, double *RowEnd, double *ColEnd, double *Nr, double *Nc, double *Dist);
LIntExport Herror T_dist_ellipse_contour_points_xld(const Hobject Contour, const Htuple DistanceMode, const Htuple ClippingEndPoints, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, Htuple *Distances);
LIntExport Herror T_dist_ellipse_contour_xld(const Hobject Contours, const Htuple Mode, const Htuple MaxNumPoints, const Htuple ClippingEndPoints, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, Htuple *MinDist, Htuple *MaxDist, Htuple *AvgDist, Htuple *SigmaDist);
LIntExport Herror dist_ellipse_contour_xld(const Hobject Contours, const char *Mode, Hlong MaxNumPoints, Hlong ClippingEndPoints, double Row, double Column, double Phi, double Radius1, double Radius2, double *MinDist, double *MaxDist, double *AvgDist, double *SigmaDist);
LIntExport Herror T_fit_ellipse_contour_xld(const Hobject Contours, const Htuple Algorithm, const Htuple MaxNumPoints, const Htuple MaxClosureDist, const Htuple ClippingEndPoints, const Htuple VossTabSize, const Htuple Iterations, const Htuple ClippingFactor, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Radius1, Htuple *Radius2, Htuple *StartPhi, Htuple *EndPhi, Htuple *PointOrder);
LIntExport Herror fit_ellipse_contour_xld(const Hobject Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong VossTabSize, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror T_gen_circle_contour_xld(Hobject *ContCircle, const Htuple Row, const Htuple Column, const Htuple Radius, const Htuple StartPhi, const Htuple EndPhi, const Htuple PointOrder, const Htuple Resolution);
LIntExport Herror gen_circle_contour_xld(Hobject *ContCircle, double Row, double Column, double Radius, double StartPhi, double EndPhi, const char *PointOrder, double Resolution);
LIntExport Herror T_gen_ellipse_contour_xld(Hobject *ContEllipse, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, const Htuple StartPhi, const Htuple EndPhi, const Htuple PointOrder, const Htuple Resolution);
LIntExport Herror gen_ellipse_contour_xld(Hobject *ContEllipse, double Row, double Column, double Phi, double Radius1, double Radius2, double StartPhi, double EndPhi, const char *PointOrder, double Resolution);
LIntExport Herror T_add_noise_white_contour_xld(const Hobject Contours, Hobject *NoisyContours, const Htuple NumRegrPoints, const Htuple Amp);
LIntExport Herror add_noise_white_contour_xld(const Hobject Contours, Hobject *NoisyContours, Hlong NumRegrPoints, double Amp);
LIntExport Herror T_combine_roads_xld(const Hobject EdgePolygons, const Hobject ModParallels, const Hobject ExtParallels, const Hobject CenterLines, Hobject *RoadSides, const Htuple MaxAngleParallel, const Htuple MaxAngleColinear, const Htuple MaxDistanceParallel, const Htuple MaxDistanceColinear);
LIntExport Herror combine_roads_xld(const Hobject EdgePolygons, const Hobject ModParallels, const Hobject ExtParallels, const Hobject CenterLines, Hobject *RoadSides, double MaxAngleParallel, double MaxAngleColinear, double MaxDistanceParallel, double MaxDistanceColinear);
LIntExport Herror T_max_parallels_xld(const Hobject ExtParallels, Hobject *MaxPolygons);
LIntExport Herror max_parallels_xld(const Hobject ExtParallels, Hobject *MaxPolygons);
LIntExport Herror T_mod_parallels_xld(const Hobject Parallels, const Hobject Image, Hobject *ModParallels, Hobject *ExtParallels, const Htuple Quality, const Htuple MinGray, const Htuple MaxGray, const Htuple MaxStandard);
LIntExport Herror mod_parallels_xld(const Hobject Parallels, const Hobject Image, Hobject *ModParallels, Hobject *ExtParallels, double Quality, Hlong MinGray, Hlong MaxGray, double MaxStandard);
LIntExport Herror T_info_parallels_xld(const Hobject Parallels, const Hobject Image, Htuple *QualityMin, Htuple *QualityMax, Htuple *GrayMin, Htuple *GrayMax, Htuple *StandardMin, Htuple *StandardMax);
LIntExport Herror info_parallels_xld(const Hobject Parallels, const Hobject Image, double *QualityMin, double *QualityMax, Hlong *GrayMin, Hlong *GrayMax, double *StandardMin, double *StandardMax);
LIntExport Herror T_get_parallels_xld(const Hobject Parallels, Htuple *Row1, Htuple *Col1, Htuple *Length1, Htuple *Phi1, Htuple *Row2, Htuple *Col2, Htuple *Length2, Htuple *Phi2);
LIntExport Herror T_gen_parallels_xld(const Hobject Polygons, Hobject *Parallels, const Htuple Len, const Htuple Dist, const Htuple Alpha, const Htuple Merge);
LIntExport Herror gen_parallels_xld(const Hobject Polygons, Hobject *Parallels, double Len, double Dist, double Alpha, const char *Merge);
LIntExport Herror T_get_lines_xld(const Hobject Polygon, Htuple *BeginRow, Htuple *BeginCol, Htuple *EndRow, Htuple *EndCol, Htuple *Length, Htuple *Phi);
LIntExport Herror T_get_polygon_xld(const Hobject Polygon, Htuple *Row, Htuple *Col, Htuple *Length, Htuple *Phi);
LIntExport Herror T_gen_polygons_xld(const Hobject Contours, Hobject *Polygons, const Htuple Type, const Htuple Alpha);
LIntExport Herror gen_polygons_xld(const Hobject Contours, Hobject *Polygons, const char *Type, double Alpha);
LIntExport Herror T_split_contours_xld(const Hobject Polygons, Hobject *Contours, const Htuple Mode, const Htuple Weight, const Htuple Smooth);
LIntExport Herror split_contours_xld(const Hobject Polygons, Hobject *Contours, const char *Mode, Hlong Weight, Hlong Smooth);
LIntExport Herror T_projective_trans_contour_xld(const Hobject Contours, Hobject *ContoursProjTrans, const Htuple HomMat2D);
LIntExport Herror T_affine_trans_polygon_xld(const Hobject Polygons, Hobject *PolygonsAffinTrans, const Htuple HomMat2D);
LIntExport Herror T_affine_trans_contour_xld(const Hobject Contours, Hobject *ContoursAffinTrans, const Htuple HomMat2D);
LIntExport Herror T_close_contours_xld(const Hobject Contours, Hobject *ClosedContours);
LIntExport Herror close_contours_xld(const Hobject Contours, Hobject *ClosedContours);
LIntExport Herror T_clip_end_points_contours_xld(const Hobject Contours, Hobject *ClippedContours, const Htuple Mode, const Htuple Length);
LIntExport Herror clip_end_points_contours_xld(const Hobject Contours, Hobject *ClippedContours, const char *Mode, double Length);
LIntExport Herror T_clip_contours_xld(const Hobject Contours, Hobject *ClippedContours, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror clip_contours_xld(const Hobject Contours, Hobject *ClippedContours, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_local_max_contours_xld(const Hobject Contours, const Hobject Image, Hobject *LocalMaxContours, const Htuple MinPercent, const Htuple MinDiff, const Htuple Distance);
LIntExport Herror local_max_contours_xld(const Hobject Contours, const Hobject Image, Hobject *LocalMaxContours, Hlong MinPercent, Hlong MinDiff, Hlong Distance);
LIntExport Herror T_union_straight_contours_histo_xld(const Hobject Contours, Hobject *UnionContours, Hobject *SelectedContours, const Htuple RefLineStartRow, const Htuple RefLineStartColumn, const Htuple RefLineEndRow, const Htuple RefLineEndColumn, const Htuple Width, const Htuple MaxWidth, const Htuple FilterSize, Htuple *HistoValues);
LIntExport Herror T_union_straight_contours_xld(const Hobject Contours, Hobject *UnionContours, const Htuple MaxDist, const Htuple MaxDiff, const Htuple Percent, const Htuple Mode, const Htuple Iterations);
LIntExport Herror union_straight_contours_xld(const Hobject Contours, Hobject *UnionContours, double MaxDist, double MaxDiff, double Percent, const char *Mode, const char *Iterations);
LIntExport Herror T_union_collinear_contours_ext_xld(const Hobject Contours, Hobject *UnionContours, const Htuple MaxDistAbs, const Htuple MaxDistRel, const Htuple MaxShift, const Htuple MaxAngle, const Htuple MaxOverlap, const Htuple MaxRegrError, const Htuple MaxCosts, const Htuple WeightDist, const Htuple WeightShift, const Htuple WeightAngle, const Htuple WeightLink, const Htuple WeightRegr, const Htuple Mode);
LIntExport Herror union_collinear_contours_ext_xld(const Hobject Contours, Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, double MaxOverlap, double MaxRegrError, double MaxCosts, double WeightDist, double WeightShift, double WeightAngle, double WeightLink, double WeightRegr, const char *Mode);
LIntExport Herror T_union_collinear_contours_xld(const Hobject Contours, Hobject *UnionContours, const Htuple MaxDistAbs, const Htuple MaxDistRel, const Htuple MaxShift, const Htuple MaxAngle, const Htuple Mode);
LIntExport Herror union_collinear_contours_xld(const Hobject Contours, Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, const char *Mode);
LIntExport Herror T_union_adjacent_contours_xld(const Hobject Contours, Hobject *UnionContours, const Htuple MaxDistAbs, const Htuple MaxDistRel, const Htuple Mode);
LIntExport Herror union_adjacent_contours_xld(const Hobject Contours, Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, const char *Mode);
LIntExport Herror T_select_contours_xld(const Hobject Contours, Hobject *SelectedContours, const Htuple Feature, const Htuple Min1, const Htuple Max1, const Htuple Min2, const Htuple Max2);
LIntExport Herror select_contours_xld(const Hobject Contours, Hobject *SelectedContours, const char *Feature, double Min1, double Max1, double Min2, double Max2);
LIntExport Herror T_get_regress_params_xld(const Hobject Contours, Htuple *Length, Htuple *Nx, Htuple *Ny, Htuple *Dist, Htuple *Fpx, Htuple *Fpy, Htuple *Lpx, Htuple *Lpy, Htuple *Mean, Htuple *Deviation);
LIntExport Herror T_regress_contours_xld(const Hobject Contours, Hobject *RegressContours, const Htuple Mode, const Htuple Iterations);
LIntExport Herror regress_contours_xld(const Hobject Contours, Hobject *RegressContours, const char *Mode, Hlong Iterations);
LIntExport Herror T_get_contour_angle_xld(const Hobject Contour, const Htuple AngleMode, const Htuple CalcMode, const Htuple Lookaround, Htuple *Angles);
LIntExport Herror T_smooth_contours_xld(const Hobject Contours, Hobject *SmoothedContours, const Htuple NumRegrPoints);
LIntExport Herror smooth_contours_xld(const Hobject Contours, Hobject *SmoothedContours, Hlong NumRegrPoints);
LIntExport Herror T_contour_point_num_xld(const Hobject Contour, Htuple *Length);
LIntExport Herror contour_point_num_xld(const Hobject Contour, Hlong *Length);
LIntExport Herror T_query_contour_global_attribs_xld(const Hobject Contour, Htuple *Attribs);
LIntExport Herror T_get_contour_global_attrib_xld(const Hobject Contour, const Htuple Name, Htuple *Attrib);
LIntExport Herror T_query_contour_attribs_xld(const Hobject Contour, Htuple *Attribs);
LIntExport Herror T_get_contour_attrib_xld(const Hobject Contour, const Htuple Name, Htuple *Attrib);
LIntExport Herror T_get_contour_xld(const Hobject Contour, Htuple *Row, Htuple *Col);
LIntExport Herror T_gen_contour_region_xld(const Hobject Regions, Hobject *Contours, const Htuple Mode);
LIntExport Herror gen_contour_region_xld(const Hobject Regions, Hobject *Contours, const char *Mode);
LIntExport Herror T_gen_contour_polygon_rounded_xld(Hobject *Contour, const Htuple Row, const Htuple Col, const Htuple Radius, const Htuple SamplingInterval);
LIntExport Herror T_gen_contour_polygon_xld(Hobject *Contour, const Htuple Row, const Htuple Col);
LIntExport Herror T_gen_contours_skeleton_xld(const Hobject Skeleton, Hobject *Contours, const Htuple Length, const Htuple Mode);
LIntExport Herror gen_contours_skeleton_xld(const Hobject Skeleton, Hobject *Contours, Hlong Length, const char *Mode);
LIntExport Herror T_disp_xld(const Hobject XLDObject, const Htuple WindowHandle);
LIntExport Herror disp_xld(const Hobject XLDObject, Hlong WindowHandle);
LIntExport Herror T_wiener_filter_ni(const Hobject Image, const Hobject Psf, const Hobject NoiseRegion, Hobject *RestoredImage, const Htuple MaskWidth, const Htuple MaskHeight);
LIntExport Herror wiener_filter_ni(const Hobject Image, const Hobject Psf, const Hobject NoiseRegion, Hobject *RestoredImage, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror T_wiener_filter(const Hobject Image, const Hobject Psf, const Hobject FilteredImage, Hobject *RestoredImage);
LIntExport Herror wiener_filter(const Hobject Image, const Hobject Psf, const Hobject FilteredImage, Hobject *RestoredImage);
LIntExport Herror T_gen_psf_motion(Hobject *Psf, const Htuple PSFwidth, const Htuple PSFheight, const Htuple Blurring, const Htuple Angle, const Htuple Type);
LIntExport Herror gen_psf_motion(Hobject *Psf, Hlong PSFwidth, Hlong PSFheight, double Blurring, Hlong Angle, Hlong Type);
LIntExport Herror T_simulate_motion(const Hobject Image, Hobject *MovedImage, const Htuple Blurring, const Htuple Angle, const Htuple Type);
LIntExport Herror simulate_motion(const Hobject Image, Hobject *MovedImage, double Blurring, Hlong Angle, Hlong Type);
LIntExport Herror T_gen_psf_defocus(Hobject *Psf, const Htuple PSFwidth, const Htuple PSFheight, const Htuple Blurring);
LIntExport Herror gen_psf_defocus(Hobject *Psf, Hlong PSFwidth, Hlong PSFheight, double Blurring);
LIntExport Herror T_simulate_defocus(const Hobject Image, Hobject *DefocusedImage, const Htuple Blurring);
LIntExport Herror simulate_defocus(const Hobject Image, Hobject *DefocusedImage, double Blurring);
LIntExport Herror T_deserialize_variation_model(const Htuple SerializedItemHandle, Htuple *ModelID);
LIntExport Herror deserialize_variation_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror T_serialize_variation_model(const Htuple ModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_variation_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_variation_model(const Htuple FileName, Htuple *ModelID);
LIntExport Herror read_variation_model(const char *FileName, Hlong *ModelID);
LIntExport Herror T_write_variation_model(const Htuple ModelID, const Htuple FileName);
LIntExport Herror write_variation_model(Hlong ModelID, const char *FileName);
LIntExport Herror T_get_thresh_images_variation_model(Hobject *MinImage, Hobject *MaxImage, const Htuple ModelID);
LIntExport Herror get_thresh_images_variation_model(Hobject *MinImage, Hobject *MaxImage, Hlong ModelID);
LIntExport Herror T_get_variation_model(Hobject *Image, Hobject *VarImage, const Htuple ModelID);
LIntExport Herror get_variation_model(Hobject *Image, Hobject *VarImage, Hlong ModelID);
LIntExport Herror T_compare_ext_variation_model(const Hobject Image, Hobject *Region, const Htuple ModelID, const Htuple Mode);
LIntExport Herror compare_ext_variation_model(const Hobject Image, Hobject *Region, Hlong ModelID, const char *Mode);
LIntExport Herror T_compare_variation_model(const Hobject Image, Hobject *Region, const Htuple ModelID);
LIntExport Herror compare_variation_model(const Hobject Image, Hobject *Region, Hlong ModelID);
LIntExport Herror T_prepare_direct_variation_model(const Hobject RefImage, const Hobject VarImage, const Htuple ModelID, const Htuple AbsThreshold, const Htuple VarThreshold);
LIntExport Herror prepare_direct_variation_model(const Hobject RefImage, const Hobject VarImage, Hlong ModelID, double AbsThreshold, double VarThreshold);
LIntExport Herror T_prepare_variation_model(const Htuple ModelID, const Htuple AbsThreshold, const Htuple VarThreshold);
LIntExport Herror prepare_variation_model(Hlong ModelID, double AbsThreshold, double VarThreshold);
LIntExport Herror T_train_variation_model(const Hobject Images, const Htuple ModelID);
LIntExport Herror train_variation_model(const Hobject Images, Hlong ModelID);
LIntExport Herror T_clear_all_variation_models(void);
LIntExport Herror clear_all_variation_models(void);
LIntExport Herror T_clear_variation_model(const Htuple ModelID);
LIntExport Herror clear_variation_model(Hlong ModelID);
LIntExport Herror T_clear_train_data_variation_model(const Htuple ModelID);
LIntExport Herror clear_train_data_variation_model(Hlong ModelID);
LIntExport Herror T_create_variation_model(const Htuple Width, const Htuple Height, const Htuple Type, const Htuple Mode, Htuple *ModelID);
LIntExport Herror create_variation_model(Hlong Width, Hlong Height, const char *Type, const char *Mode, Hlong *ModelID);
LIntExport Herror T_tuple_union(const Htuple Set1, const Htuple Set2, Htuple *Union);
LIntExport Herror tuple_union(Hlong Set1, Hlong Set2, Hlong *Union);
LIntExport Herror T_tuple_intersection(const Htuple Set1, const Htuple Set2, Htuple *Intersection);
LIntExport Herror tuple_intersection(Hlong Set1, Hlong Set2, Hlong *Intersection);
LIntExport Herror T_tuple_difference(const Htuple Set1, const Htuple Set2, Htuple *Difference);
LIntExport Herror tuple_difference(Hlong Set1, Hlong Set2, Hlong *Difference);
LIntExport Herror T_tuple_symmdiff(const Htuple Set1, const Htuple Set2, Htuple *SymmDiff);
LIntExport Herror tuple_symmdiff(Hlong Set1, Hlong Set2, Hlong *SymmDiff);
LIntExport Herror T_tuple_is_string_elem(const Htuple T, Htuple *IsString);
LIntExport Herror tuple_is_string_elem(const char *T, Hlong *IsString);
LIntExport Herror T_tuple_is_real_elem(const Htuple T, Htuple *IsReal);
LIntExport Herror tuple_is_real_elem(double T, Hlong *IsReal);
LIntExport Herror T_tuple_is_int_elem(const Htuple T, Htuple *IsInt);
LIntExport Herror tuple_is_int_elem(Hlong T, Hlong *IsInt);
LIntExport Herror T_tuple_type_elem(const Htuple T, Htuple *Types);
LIntExport Herror tuple_type_elem(double T, Hlong *Types);
LIntExport Herror T_tuple_is_mixed(const Htuple T, Htuple *IsMixed);
LIntExport Herror tuple_is_mixed(const char *T, Hlong *IsMixed);
LIntExport Herror T_tuple_is_string(const Htuple T, Htuple *IsString);
LIntExport Herror tuple_is_string(const char *T, Hlong *IsString);
LIntExport Herror T_tuple_is_real(const Htuple T, Htuple *IsReal);
LIntExport Herror tuple_is_real(double T, Hlong *IsReal);
LIntExport Herror T_tuple_is_int(const Htuple T, Htuple *IsInt);
LIntExport Herror tuple_is_int(Hlong T, Hlong *IsInt);
LIntExport Herror T_tuple_type(const Htuple T, Htuple *Type);
LIntExport Herror tuple_type(double T, Hlong *Type);
LIntExport Herror T_tuple_histo_range(const Htuple Tuple, const Htuple Min, const Htuple Max, const Htuple NumBins, Htuple *Histo, Htuple *BinSize);
LIntExport Herror T_tuple_regexp_select(const Htuple Data, const Htuple Expression, Htuple *Selection);
LIntExport Herror tuple_regexp_select(const char *Data, const char *Expression, char *Selection);
LIntExport Herror T_tuple_regexp_test(const Htuple Data, const Htuple Expression, Htuple *NumMatches);
LIntExport Herror tuple_regexp_test(const char *Data, const char *Expression, Hlong *NumMatches);
LIntExport Herror T_tuple_regexp_replace(const Htuple Data, const Htuple Expression, const Htuple Replace, Htuple *Result);
LIntExport Herror tuple_regexp_replace(const char *Data, const char *Expression, const char *Replace, char *Result);
LIntExport Herror T_tuple_regexp_match(const Htuple Data, const Htuple Expression, Htuple *Matches);
LIntExport Herror tuple_regexp_match(const char *Data, const char *Expression, char *Matches);
LIntExport Herror T_tuple_rand(const Htuple Length, Htuple *Rand);
LIntExport Herror tuple_rand(Hlong Length, double *Rand);
LIntExport Herror T_tuple_length(const Htuple Tuple, Htuple *Length);
LIntExport Herror tuple_length(Hlong Tuple, Hlong *Length);
LIntExport Herror T_tuple_sgn(const Htuple T, Htuple *Sgn);
LIntExport Herror tuple_sgn(double T, Hlong *Sgn);
LIntExport Herror T_tuple_max2(const Htuple T1, const Htuple T2, Htuple *Max2);
LIntExport Herror tuple_max2(double T1, double T2, double *Max2);
LIntExport Herror T_tuple_min2(const Htuple T1, const Htuple T2, Htuple *Min2);
LIntExport Herror tuple_min2(double T1, double T2, double *Min2);
LIntExport Herror T_tuple_max(const Htuple Tuple, Htuple *Max);
LIntExport Herror tuple_max(Hlong Tuple, double *Max);
LIntExport Herror T_tuple_min(const Htuple Tuple, Htuple *Min);
LIntExport Herror tuple_min(Hlong Tuple, double *Min);
LIntExport Herror T_tuple_cumul(const Htuple Tuple, Htuple *Cumul);
LIntExport Herror tuple_cumul(Hlong Tuple, double *Cumul);
LIntExport Herror T_tuple_select_rank(const Htuple Tuple, const Htuple RankIndex, Htuple *Selected);
LIntExport Herror tuple_select_rank(Hlong Tuple, Hlong RankIndex, Hlong *Selected);
LIntExport Herror T_tuple_median(const Htuple Tuple, Htuple *Median);
LIntExport Herror tuple_median(Hlong Tuple, Hlong *Median);
LIntExport Herror T_tuple_sum(const Htuple Tuple, Htuple *Sum);
LIntExport Herror tuple_sum(Hlong Tuple, double *Sum);
LIntExport Herror T_tuple_mean(const Htuple Tuple, Htuple *Mean);
LIntExport Herror tuple_mean(Hlong Tuple, double *Mean);
LIntExport Herror T_tuple_deviation(const Htuple Tuple, Htuple *Deviation);
LIntExport Herror tuple_deviation(Hlong Tuple, double *Deviation);
LIntExport Herror T_tuple_uniq(const Htuple Tuple, Htuple *Uniq);
LIntExport Herror tuple_uniq(Hlong Tuple, Hlong *Uniq);
LIntExport Herror T_tuple_find_last(const Htuple Tuple, const Htuple ToFind, Htuple *Index);
LIntExport Herror tuple_find_last(Hlong Tuple, Hlong ToFind, Hlong *Index);
LIntExport Herror T_tuple_find_first(const Htuple Tuple, const Htuple ToFind, Htuple *Index);
LIntExport Herror tuple_find_first(Hlong Tuple, Hlong ToFind, Hlong *Index);
LIntExport Herror T_tuple_find(const Htuple Tuple, const Htuple ToFind, Htuple *Indices);
LIntExport Herror tuple_find(Hlong Tuple, Hlong ToFind, Hlong *Indices);
LIntExport Herror T_tuple_sort_index(const Htuple Tuple, Htuple *Indices);
LIntExport Herror tuple_sort_index(Hlong Tuple, Hlong *Indices);
LIntExport Herror T_tuple_sort(const Htuple Tuple, Htuple *Sorted);
LIntExport Herror tuple_sort(Hlong Tuple, Hlong *Sorted);
LIntExport Herror T_tuple_inverse(const Htuple Tuple, Htuple *Inverted);
LIntExport Herror tuple_inverse(Hlong Tuple, Hlong *Inverted);
LIntExport Herror T_tuple_concat(const Htuple T1, const Htuple T2, Htuple *Concat);
LIntExport Herror tuple_concat(Hlong T1, Hlong T2, Hlong *Concat);
LIntExport Herror T_tuple_select_range(const Htuple Tuple, const Htuple Leftindex, const Htuple Rightindex, Htuple *Selected);
LIntExport Herror tuple_select_range(Hlong Tuple, Hlong Leftindex, Hlong Rightindex, Hlong *Selected);
LIntExport Herror T_tuple_last_n(const Htuple Tuple, const Htuple Index, Htuple *Selected);
LIntExport Herror tuple_last_n(Hlong Tuple, Hlong Index, Hlong *Selected);
LIntExport Herror T_tuple_first_n(const Htuple Tuple, const Htuple Index, Htuple *Selected);
LIntExport Herror tuple_first_n(Hlong Tuple, Hlong Index, Hlong *Selected);
LIntExport Herror T_tuple_insert(const Htuple Tuple, const Htuple Index, const Htuple InsertTuple, Htuple *Extended);
LIntExport Herror T_tuple_replace(const Htuple Tuple, const Htuple Index, const Htuple ReplaceTuple, Htuple *Replaced);
LIntExport Herror T_tuple_remove(const Htuple Tuple, const Htuple Index, Htuple *Reduced);
LIntExport Herror tuple_remove(Hlong Tuple, Hlong Index, Hlong *Reduced);
LIntExport Herror T_tuple_select_mask(const Htuple Tuple, const Htuple Mask, Htuple *Selected);
LIntExport Herror tuple_select_mask(Hlong Tuple, Hlong Mask, Hlong *Selected);
LIntExport Herror T_tuple_select(const Htuple Tuple, const Htuple Index, Htuple *Selected);
LIntExport Herror tuple_select(Hlong Tuple, Hlong Index, Hlong *Selected);
LIntExport Herror T_tuple_str_bit_select(const Htuple Tuple, const Htuple Index, Htuple *Selected);
LIntExport Herror tuple_str_bit_select(const char *Tuple, Hlong Index, char *Selected);
LIntExport Herror T_tuple_gen_sequence(const Htuple Start, const Htuple End, const Htuple Step, Htuple *Sequence);
LIntExport Herror tuple_gen_sequence(Hlong Start, Hlong End, Hlong Step, Hlong *Sequence);
LIntExport Herror T_tuple_gen_const(const Htuple Length, const Htuple Const, Htuple *Newtuple);
LIntExport Herror tuple_gen_const(Hlong Length, Hlong Const, Hlong *Newtuple);
LIntExport Herror T_tuple_environment(const Htuple Names, Htuple *Values);
LIntExport Herror tuple_environment(const char *Names, char *Values);
LIntExport Herror T_tuple_split(const Htuple String, const Htuple Separator, Htuple *Substrings);
LIntExport Herror tuple_split(const char *String, const char *Separator, char *Substrings);
LIntExport Herror T_tuple_substr(const Htuple String, const Htuple Position1, const Htuple Position2, Htuple *Substring);
LIntExport Herror tuple_substr(const char *String, Hlong Position1, Hlong Position2, char *Substring);
LIntExport Herror T_tuple_str_last_n(const Htuple String, const Htuple Position, Htuple *Substring);
LIntExport Herror tuple_str_last_n(const char *String, Hlong Position, char *Substring);
LIntExport Herror T_tuple_str_first_n(const Htuple String, const Htuple Position, Htuple *Substring);
LIntExport Herror tuple_str_first_n(const char *String, Hlong Position, char *Substring);
LIntExport Herror T_tuple_strrchr(const Htuple String, const Htuple ToFind, Htuple *Position);
LIntExport Herror tuple_strrchr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror T_tuple_strchr(const Htuple String, const Htuple ToFind, Htuple *Position);
LIntExport Herror tuple_strchr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror T_tuple_strrstr(const Htuple String, const Htuple ToFind, Htuple *Position);
LIntExport Herror tuple_strrstr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror T_tuple_strstr(const Htuple String, const Htuple ToFind, Htuple *Position);
LIntExport Herror tuple_strstr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror T_tuple_strlen(const Htuple T1, Htuple *Length);
LIntExport Herror tuple_strlen(const char *T1, Hlong *Length);
LIntExport Herror T_tuple_less_equal_elem(const Htuple T1, const Htuple T2, Htuple *Lesseq);
LIntExport Herror tuple_less_equal_elem(Hlong T1, Hlong T2, Hlong *Lesseq);
LIntExport Herror T_tuple_less_elem(const Htuple T1, const Htuple T2, Htuple *Less);
LIntExport Herror tuple_less_elem(Hlong T1, Hlong T2, Hlong *Less);
LIntExport Herror T_tuple_greater_equal_elem(const Htuple T1, const Htuple T2, Htuple *Greatereq);
LIntExport Herror tuple_greater_equal_elem(Hlong T1, Hlong T2, Hlong *Greatereq);
LIntExport Herror T_tuple_greater_elem(const Htuple T1, const Htuple T2, Htuple *Greater);
LIntExport Herror tuple_greater_elem(Hlong T1, Hlong T2, Hlong *Greater);
LIntExport Herror T_tuple_not_equal_elem(const Htuple T1, const Htuple T2, Htuple *Nequal);
LIntExport Herror tuple_not_equal_elem(Hlong T1, Hlong T2, Hlong *Nequal);
LIntExport Herror T_tuple_equal_elem(const Htuple T1, const Htuple T2, Htuple *Equal);
LIntExport Herror tuple_equal_elem(Hlong T1, Hlong T2, Hlong *Equal);
LIntExport Herror T_tuple_less_equal(const Htuple T1, const Htuple T2, Htuple *Lesseq);
LIntExport Herror tuple_less_equal(Hlong T1, Hlong T2, Hlong *Lesseq);
LIntExport Herror T_tuple_less(const Htuple T1, const Htuple T2, Htuple *Less);
LIntExport Herror tuple_less(Hlong T1, Hlong T2, Hlong *Less);
LIntExport Herror T_tuple_greater_equal(const Htuple T1, const Htuple T2, Htuple *Greatereq);
LIntExport Herror tuple_greater_equal(Hlong T1, Hlong T2, Hlong *Greatereq);
LIntExport Herror T_tuple_greater(const Htuple T1, const Htuple T2, Htuple *Greater);
LIntExport Herror tuple_greater(Hlong T1, Hlong T2, Hlong *Greater);
LIntExport Herror T_tuple_not_equal(const Htuple T1, const Htuple T2, Htuple *Nequal);
LIntExport Herror tuple_not_equal(Hlong T1, Hlong T2, Hlong *Nequal);
LIntExport Herror T_tuple_equal(const Htuple T1, const Htuple T2, Htuple *Equal);
LIntExport Herror tuple_equal(Hlong T1, Hlong T2, Hlong *Equal);
LIntExport Herror T_tuple_not(const Htuple T, Htuple *Not);
LIntExport Herror tuple_not(Hlong T, Hlong *Not);
LIntExport Herror T_tuple_xor(const Htuple T1, const Htuple T2, Htuple *Xor);
LIntExport Herror tuple_xor(Hlong T1, Hlong T2, Hlong *Xor);
LIntExport Herror T_tuple_or(const Htuple T1, const Htuple T2, Htuple *Or);
LIntExport Herror tuple_or(Hlong T1, Hlong T2, Hlong *Or);
LIntExport Herror T_tuple_and(const Htuple T1, const Htuple T2, Htuple *And);
LIntExport Herror tuple_and(Hlong T1, Hlong T2, Hlong *And);
LIntExport Herror T_tuple_bnot(const Htuple T, Htuple *BNot);
LIntExport Herror tuple_bnot(Hlong T, Hlong *BNot);
LIntExport Herror T_tuple_bxor(const Htuple T1, const Htuple T2, Htuple *BXor);
LIntExport Herror tuple_bxor(Hlong T1, Hlong T2, Hlong *BXor);
LIntExport Herror T_tuple_bor(const Htuple T1, const Htuple T2, Htuple *BOr);
LIntExport Herror tuple_bor(Hlong T1, Hlong T2, Hlong *BOr);
LIntExport Herror T_tuple_band(const Htuple T1, const Htuple T2, Htuple *BAnd);
LIntExport Herror tuple_band(Hlong T1, Hlong T2, Hlong *BAnd);
LIntExport Herror T_tuple_rsh(const Htuple T, const Htuple Shift, Htuple *Rsh);
LIntExport Herror tuple_rsh(Hlong T, Hlong Shift, Hlong *Rsh);
LIntExport Herror T_tuple_lsh(const Htuple T, const Htuple Shift, Htuple *Lsh);
LIntExport Herror tuple_lsh(Hlong T, Hlong Shift, Hlong *Lsh);
LIntExport Herror T_tuple_chrt(const Htuple T, Htuple *Chrt);
LIntExport Herror tuple_chrt(Hlong T, char *Chrt);
LIntExport Herror T_tuple_ords(const Htuple T, Htuple *Ords);
LIntExport Herror tuple_ords(const char *T, Hlong *Ords);
LIntExport Herror T_tuple_chr(const Htuple T, Htuple *Chr);
LIntExport Herror tuple_chr(Hlong T, char *Chr);
LIntExport Herror T_tuple_ord(const Htuple T, Htuple *Ord);
LIntExport Herror tuple_ord(const char *T, Hlong *Ord);
LIntExport Herror T_tuple_string(const Htuple T, const Htuple Format, Htuple *String);
LIntExport Herror tuple_string(double T, const char *Format, char *String);
LIntExport Herror T_tuple_is_number(const Htuple T, Htuple *IsNumber);
LIntExport Herror tuple_is_number(double T, Hlong *IsNumber);
LIntExport Herror T_tuple_number(const Htuple T, Htuple *Number);
LIntExport Herror tuple_number(const char *T, double *Number);
LIntExport Herror T_tuple_round(const Htuple T, Htuple *Round);
LIntExport Herror tuple_round(double T, Hlong *Round);
LIntExport Herror T_tuple_int(const Htuple T, Htuple *Int);
LIntExport Herror tuple_int(double T, Hlong *Int);
LIntExport Herror T_tuple_real(const Htuple T, Htuple *Real);
LIntExport Herror tuple_real(double T, double *Real);
LIntExport Herror T_tuple_ldexp(const Htuple T1, const Htuple T2, Htuple *Ldexp);
LIntExport Herror tuple_ldexp(double T1, double T2, double *Ldexp);
LIntExport Herror T_tuple_fmod(const Htuple T1, const Htuple T2, Htuple *Fmod);
LIntExport Herror tuple_fmod(double T1, double T2, double *Fmod);
LIntExport Herror T_tuple_mod(const Htuple T1, const Htuple T2, Htuple *Mod);
LIntExport Herror tuple_mod(Hlong T1, Hlong T2, Hlong *Mod);
LIntExport Herror T_tuple_ceil(const Htuple T, Htuple *Ceil);
LIntExport Herror tuple_ceil(double T, double *Ceil);
LIntExport Herror T_tuple_floor(const Htuple T, Htuple *Floor);
LIntExport Herror tuple_floor(double T, double *Floor);
LIntExport Herror T_tuple_pow(const Htuple T1, const Htuple T2, Htuple *Pow);
LIntExport Herror tuple_pow(double T1, double T2, double *Pow);
LIntExport Herror T_tuple_log10(const Htuple T, Htuple *Log);
LIntExport Herror tuple_log10(double T, double *Log);
LIntExport Herror T_tuple_log(const Htuple T, Htuple *Log);
LIntExport Herror tuple_log(double T, double *Log);
LIntExport Herror T_tuple_exp(const Htuple T, Htuple *Exp);
LIntExport Herror tuple_exp(double T, double *Exp);
LIntExport Herror T_tuple_tanh(const Htuple T, Htuple *Tanh);
LIntExport Herror tuple_tanh(double T, double *Tanh);
LIntExport Herror T_tuple_cosh(const Htuple T, Htuple *Cosh);
LIntExport Herror tuple_cosh(double T, double *Cosh);
LIntExport Herror T_tuple_sinh(const Htuple T, Htuple *Sinh);
LIntExport Herror tuple_sinh(double T, double *Sinh);
LIntExport Herror T_tuple_rad(const Htuple Deg, Htuple *Rad);
LIntExport Herror tuple_rad(double Deg, double *Rad);
LIntExport Herror T_tuple_deg(const Htuple Rad, Htuple *Deg);
LIntExport Herror tuple_deg(double Rad, double *Deg);
LIntExport Herror T_tuple_atan2(const Htuple Y, const Htuple X, Htuple *ATan);
LIntExport Herror tuple_atan2(double Y, double X, double *ATan);
LIntExport Herror T_tuple_atan(const Htuple T, Htuple *ATan);
LIntExport Herror tuple_atan(double T, double *ATan);
LIntExport Herror T_tuple_acos(const Htuple T, Htuple *ACos);
LIntExport Herror tuple_acos(double T, double *ACos);
LIntExport Herror T_tuple_asin(const Htuple T, Htuple *ASin);
LIntExport Herror tuple_asin(double T, double *ASin);
LIntExport Herror T_tuple_tan(const Htuple T, Htuple *Tan);
LIntExport Herror tuple_tan(double T, double *Tan);
LIntExport Herror T_tuple_cos(const Htuple T, Htuple *Cos);
LIntExport Herror tuple_cos(double T, double *Cos);
LIntExport Herror T_tuple_sin(const Htuple T, Htuple *Sin);
LIntExport Herror tuple_sin(double T, double *Sin);
LIntExport Herror T_tuple_fabs(const Htuple T, Htuple *Abs);
LIntExport Herror tuple_fabs(double T, double *Abs);
LIntExport Herror T_tuple_sqrt(const Htuple T, Htuple *Sqrt);
LIntExport Herror tuple_sqrt(double T, double *Sqrt);
LIntExport Herror T_tuple_abs(const Htuple T, Htuple *Abs);
LIntExport Herror tuple_abs(double T, double *Abs);
LIntExport Herror T_tuple_neg(const Htuple T, Htuple *Neg);
LIntExport Herror tuple_neg(double T, double *Neg);
LIntExport Herror T_tuple_div(const Htuple Q1, const Htuple Q2, Htuple *Quot);
LIntExport Herror tuple_div(double Q1, double Q2, double *Quot);
LIntExport Herror T_tuple_mult(const Htuple P1, const Htuple P2, Htuple *Prod);
LIntExport Herror tuple_mult(double P1, double P2, double *Prod);
LIntExport Herror T_tuple_sub(const Htuple D1, const Htuple D2, Htuple *Diff);
LIntExport Herror tuple_sub(double D1, double D2, double *Diff);
LIntExport Herror T_tuple_add(const Htuple S1, const Htuple S2, Htuple *Sum);
LIntExport Herror tuple_add(double S1, double S2, double *Sum);
LIntExport Herror T_deserialize_tuple(const Htuple SerializedItemHandle, Htuple *Tuple);
LIntExport Herror deserialize_tuple(Hlong SerializedItemHandle, double *Tuple);
LIntExport Herror T_serialize_tuple(const Htuple Tuple, Htuple *SerializedItemHandle);
LIntExport Herror serialize_tuple(double Tuple, Hlong *SerializedItemHandle);
LIntExport Herror T_write_tuple(const Htuple Tuple, const Htuple FileName);
LIntExport Herror write_tuple(double Tuple, const char *FileName);
LIntExport Herror T_read_tuple(const Htuple FileName, Htuple *Tuple);
LIntExport Herror read_tuple(const char *FileName, double *Tuple);
LIntExport Herror T_pose_average(const Htuple Poses, const Htuple Weights, const Htuple Mode, const Htuple SigmaT, const Htuple SigmaR, Htuple *AveragePose, Htuple *Quality);
LIntExport Herror T_quat_rotate_point_3d(const Htuple Quaternion, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *Qx, Htuple *Qy, Htuple *Qz);
LIntExport Herror T_quat_conjugate(const Htuple Quaternion, Htuple *ConjugatedQuaternion);
LIntExport Herror T_quat_normalize(const Htuple Quaternion, Htuple *NormalizedQuaternion);
LIntExport Herror T_axis_angle_to_quat(const Htuple AxisX, const Htuple AxisY, const Htuple AxisZ, const Htuple Angle, Htuple *Quaternion);
LIntExport Herror T_quat_to_pose(const Htuple Quaternion, Htuple *Pose);
LIntExport Herror T_pose_invert(const Htuple Pose, Htuple *PoseInvert);
LIntExport Herror T_pose_compose(const Htuple PoseLeft, const Htuple PoseRight, Htuple *PoseCompose);
LIntExport Herror T_quat_to_hom_mat3d(const Htuple Quaternion, Htuple *RotationMatrix);
LIntExport Herror T_pose_to_quat(const Htuple Pose, Htuple *Quaternion);
LIntExport Herror T_quat_interpolate(const Htuple QuaternionStart, const Htuple QuaternionEnd, const Htuple InterpPos, Htuple *QuaternionInterpolated);
LIntExport Herror T_quat_compose(const Htuple QuaternionLeft, const Htuple QuaternionRight, Htuple *QuaternionComposed);
LIntExport Herror T_deserialize_hom_mat3d(const Htuple SerializedItemHandle, Htuple *HomMat3D);
LIntExport Herror T_serialize_hom_mat3d(const Htuple HomMat3D, Htuple *SerializedItemHandle);
LIntExport Herror T_deserialize_hom_mat2d(const Htuple SerializedItemHandle, Htuple *HomMat2D);
LIntExport Herror T_serialize_hom_mat2d(const Htuple HomMat2D, Htuple *SerializedItemHandle);
LIntExport Herror T_deserialize_quat(const Htuple SerializedItemHandle, Htuple *Quaternion);
LIntExport Herror T_serialize_quat(const Htuple Quaternion, Htuple *SerializedItemHandle);
LIntExport Herror T_projective_trans_hom_point_3d(const Htuple HomMat3D, const Htuple Px, const Htuple Py, const Htuple Pz, const Htuple Pw, Htuple *Qx, Htuple *Qy, Htuple *Qz, Htuple *Qw);
LIntExport Herror T_projective_trans_point_3d(const Htuple HomMat3D, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *Qx, Htuple *Qy, Htuple *Qz);
LIntExport Herror T_affine_trans_point_3d(const Htuple HomMat3D, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *Qx, Htuple *Qy, Htuple *Qz);
LIntExport Herror T_vector_to_hom_mat3d(const Htuple TransformationType, const Htuple Px, const Htuple Py, const Htuple Pz, const Htuple Qx, const Htuple Qy, const Htuple Qz, Htuple *HomMat3D);
LIntExport Herror T_hom_mat3d_determinant(const Htuple HomMat3D, Htuple *Determinant);
LIntExport Herror T_hom_mat3d_transpose(const Htuple HomMat3D, Htuple *HomMat3DTranspose);
LIntExport Herror T_hom_mat3d_invert(const Htuple HomMat3D, Htuple *HomMat3DInvert);
LIntExport Herror T_hom_mat3d_compose(const Htuple HomMat3DLeft, const Htuple HomMat3DRight, Htuple *HomMat3DCompose);
LIntExport Herror T_hom_mat3d_rotate_local(const Htuple HomMat3D, const Htuple Phi, const Htuple Axis, Htuple *HomMat3DRotate);
LIntExport Herror T_hom_mat3d_rotate(const Htuple HomMat3D, const Htuple Phi, const Htuple Axis, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *HomMat3DRotate);
LIntExport Herror T_hom_mat3d_scale_local(const Htuple HomMat3D, const Htuple Sx, const Htuple Sy, const Htuple Sz, Htuple *HomMat3DScale);
LIntExport Herror T_hom_mat3d_scale(const Htuple HomMat3D, const Htuple Sx, const Htuple Sy, const Htuple Sz, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *HomMat3DScale);
LIntExport Herror T_hom_mat3d_translate_local(const Htuple HomMat3D, const Htuple Tx, const Htuple Ty, const Htuple Tz, Htuple *HomMat3DTranslate);
LIntExport Herror T_hom_mat3d_translate(const Htuple HomMat3D, const Htuple Tx, const Htuple Ty, const Htuple Tz, Htuple *HomMat3DTranslate);
LIntExport Herror T_hom_mat3d_identity(Htuple *HomMat3DIdentity);
LIntExport Herror T_hom_mat3d_project(const Htuple HomMat3D, const Htuple PrincipalPointRow, const Htuple PrincipalPointCol, const Htuple Focus, Htuple *HomMat2D);
LIntExport Herror T_bundle_adjust_mosaic(const Htuple NumImages, const Htuple ReferenceImage, const Htuple MappingSource, const Htuple MappingDest, const Htuple HomMatrices2D, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple NumCorrespondences, const Htuple Transformation, Htuple *MosaicMatrices2D, Htuple *Rows, Htuple *Cols, Htuple *Error);
LIntExport Herror T_proj_match_points_distortion_ransac_guided(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple HomMat2DGuide, const Htuple KappaGuide, const Htuple DistanceTolerance, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *HomMat2D, Htuple *Kappa, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_proj_match_points_distortion_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *HomMat2D, Htuple *Kappa, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_proj_match_points_ransac_guided(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple HomMat2DGuide, const Htuple DistanceTolerance, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *HomMat2D, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_proj_match_points_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *HomMat2D, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_vector_to_proj_hom_mat2d_distortion(const Htuple Points1Row, const Htuple Points1Col, const Htuple Points2Row, const Htuple Points2Col, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple Method, Htuple *HomMat2D, Htuple *Kappa, Htuple *Error);
LIntExport Herror T_hom_vector_to_proj_hom_mat2d(const Htuple Px, const Htuple Py, const Htuple Pw, const Htuple Qx, const Htuple Qy, const Htuple Qw, const Htuple Method, Htuple *HomMat2D);
LIntExport Herror T_vector_to_proj_hom_mat2d(const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, const Htuple Method, const Htuple CovXX1, const Htuple CovYY1, const Htuple CovXY1, const Htuple CovXX2, const Htuple CovYY2, const Htuple CovXY2, Htuple *HomMat2D, Htuple *Covariance);
LIntExport Herror T_hom_mat2d_to_affine_par(const Htuple HomMat2D, Htuple *Sx, Htuple *Sy, Htuple *Phi, Htuple *Theta, Htuple *Tx, Htuple *Ty);
LIntExport Herror T_vector_angle_to_rigid(const Htuple Row1, const Htuple Column1, const Htuple Angle1, const Htuple Row2, const Htuple Column2, const Htuple Angle2, Htuple *HomMat2D);
LIntExport Herror T_point_line_to_hom_mat2d(const Htuple TransformationType, const Htuple Px, const Htuple Py, const Htuple L1x, const Htuple L1y, const Htuple L2x, const Htuple L2y, Htuple *HomMat2D);
LIntExport Herror T_vector_to_rigid(const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, Htuple *HomMat2D);
LIntExport Herror T_vector_to_similarity(const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, Htuple *HomMat2D);
LIntExport Herror T_vector_to_aniso(const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, Htuple *HomMat2D);
LIntExport Herror T_vector_to_hom_mat2d(const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, Htuple *HomMat2D);
LIntExport Herror T_projective_trans_pixel(const Htuple HomMat2D, const Htuple Row, const Htuple Col, Htuple *RowTrans, Htuple *ColTrans);
LIntExport Herror T_projective_trans_point_2d(const Htuple HomMat2D, const Htuple Px, const Htuple Py, const Htuple Pw, Htuple *Qx, Htuple *Qy, Htuple *Qw);
LIntExport Herror T_affine_trans_pixel(const Htuple HomMat2D, const Htuple Row, const Htuple Col, Htuple *RowTrans, Htuple *ColTrans);
LIntExport Herror T_affine_trans_point_2d(const Htuple HomMat2D, const Htuple Px, const Htuple Py, Htuple *Qx, Htuple *Qy);
LIntExport Herror T_hom_mat2d_determinant(const Htuple HomMat2D, Htuple *Determinant);
LIntExport Herror T_hom_mat2d_transpose(const Htuple HomMat2D, Htuple *HomMat2DTranspose);
LIntExport Herror T_hom_mat2d_invert(const Htuple HomMat2D, Htuple *HomMat2DInvert);
LIntExport Herror T_hom_mat2d_compose(const Htuple HomMat2DLeft, const Htuple HomMat2DRight, Htuple *HomMat2DCompose);
LIntExport Herror T_hom_mat2d_reflect_local(const Htuple HomMat2D, const Htuple Px, const Htuple Py, Htuple *HomMat2DReflect);
LIntExport Herror T_hom_mat2d_reflect(const Htuple HomMat2D, const Htuple Px, const Htuple Py, const Htuple Qx, const Htuple Qy, Htuple *HomMat2DReflect);
LIntExport Herror T_hom_mat2d_slant_local(const Htuple HomMat2D, const Htuple Theta, const Htuple Axis, Htuple *HomMat2DSlant);
LIntExport Herror T_hom_mat2d_slant(const Htuple HomMat2D, const Htuple Theta, const Htuple Axis, const Htuple Px, const Htuple Py, Htuple *HomMat2DSlant);
LIntExport Herror T_hom_mat2d_rotate_local(const Htuple HomMat2D, const Htuple Phi, Htuple *HomMat2DRotate);
LIntExport Herror T_hom_mat2d_rotate(const Htuple HomMat2D, const Htuple Phi, const Htuple Px, const Htuple Py, Htuple *HomMat2DRotate);
LIntExport Herror T_hom_mat2d_scale_local(const Htuple HomMat2D, const Htuple Sx, const Htuple Sy, Htuple *HomMat2DScale);
LIntExport Herror T_hom_mat2d_scale(const Htuple HomMat2D, const Htuple Sx, const Htuple Sy, const Htuple Px, const Htuple Py, Htuple *HomMat2DScale);
LIntExport Herror T_hom_mat2d_translate_local(const Htuple HomMat2D, const Htuple Tx, const Htuple Ty, Htuple *HomMat2DTranslate);
LIntExport Herror T_hom_mat2d_translate(const Htuple HomMat2D, const Htuple Tx, const Htuple Ty, Htuple *HomMat2DTranslate);
LIntExport Herror T_hom_mat2d_identity(Htuple *HomMat2DIdentity);
LIntExport Herror T_clear_all_scattered_data_interpolators(void);
LIntExport Herror clear_all_scattered_data_interpolators(void);
LIntExport Herror T_clear_scattered_data_interpolator(const Htuple ScatteredDataInterpolatorHandle);
LIntExport Herror clear_scattered_data_interpolator(Hlong ScatteredDataInterpolatorHandle);
LIntExport Herror T_interpolate_scattered_data(const Htuple ScatteredDataInterpolatorHandle, const Htuple Row, const Htuple Column, Htuple *ValueInterpolated);
LIntExport Herror interpolate_scattered_data(Hlong ScatteredDataInterpolatorHandle, double Row, double Column, double *ValueInterpolated);
LIntExport Herror T_create_scattered_data_interpolator(const Htuple Method, const Htuple Rows, const Htuple Columns, const Htuple Values, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ScatteredDataInterpolatorHandle);
LIntExport Herror T_interpolate_scattered_data_points_to_image(Hobject *ImageInterpolated, const Htuple Method, const Htuple Rows, const Htuple Columns, const Htuple Values, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_interpolate_scattered_data_image(const Hobject Image, const Hobject RegionInterpolate, Hobject *ImageInterpolated, const Htuple Method, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_get_system_time(Htuple *MSecond, Htuple *Second, Htuple *Minute, Htuple *Hour, Htuple *Day, Htuple *YDay, Htuple *Month, Htuple *Year);
LIntExport Herror get_system_time(Hlong *MSecond, Hlong *Second, Hlong *Minute, Hlong *Hour, Hlong *Day, Hlong *YDay, Hlong *Month, Hlong *Year);
LIntExport Herror T_get_compute_device_param(const Htuple DeviceHandle, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_compute_device_param(Hlong DeviceHandle, const char *ParamName, char *ParamValue);
LIntExport Herror T_set_compute_device_param(const Htuple DeviceHandle, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_compute_device_param(Hlong DeviceHandle, const char *ParamName, const char *ParamValue);
LIntExport Herror T_release_all_compute_devices(void);
LIntExport Herror release_all_compute_devices(void);
LIntExport Herror T_release_compute_device(const Htuple DeviceHandle);
LIntExport Herror release_compute_device(Hlong DeviceHandle);
LIntExport Herror T_deactivate_all_compute_devices(void);
LIntExport Herror deactivate_all_compute_devices(void);
LIntExport Herror T_deactivate_compute_device(const Htuple DeviceHandle);
LIntExport Herror deactivate_compute_device(Hlong DeviceHandle);
LIntExport Herror T_activate_compute_device(const Htuple DeviceHandle);
LIntExport Herror activate_compute_device(Hlong DeviceHandle);
LIntExport Herror T_init_compute_device(const Htuple DeviceHandle, const Htuple Operators);
LIntExport Herror T_open_compute_device(const Htuple DeviceIdentifier, Htuple *DeviceHandle);
LIntExport Herror open_compute_device(Hlong DeviceIdentifier, Hlong *DeviceHandle);
LIntExport Herror T_get_compute_device_info(const Htuple DeviceIdentifier, const Htuple InfoName, Htuple *Info);
LIntExport Herror get_compute_device_info(Hlong DeviceIdentifier, const char *InfoName, char *Info);
LIntExport Herror T_query_available_compute_devices(Htuple *DeviceIdentifier);
LIntExport Herror T_clear_serial(const Htuple SerialHandle, const Htuple Channel);
LIntExport Herror clear_serial(Hlong SerialHandle, const char *Channel);
LIntExport Herror T_write_serial(const Htuple SerialHandle, const Htuple Data);
LIntExport Herror write_serial(Hlong SerialHandle, Hlong Data);
LIntExport Herror T_read_serial(const Htuple SerialHandle, const Htuple NumCharacters, Htuple *Data);
LIntExport Herror read_serial(Hlong SerialHandle, Hlong NumCharacters, Hlong *Data);
LIntExport Herror T_get_serial_param(const Htuple SerialHandle, Htuple *BaudRate, Htuple *DataBits, Htuple *FlowControl, Htuple *Parity, Htuple *StopBits, Htuple *TotalTimeOut, Htuple *InterCharTimeOut);
LIntExport Herror get_serial_param(Hlong SerialHandle, Hlong *BaudRate, Hlong *DataBits, char *FlowControl, char *Parity, Hlong *StopBits, Hlong *TotalTimeOut, Hlong *InterCharTimeOut);
LIntExport Herror T_set_serial_param(const Htuple SerialHandle, const Htuple BaudRate, const Htuple DataBits, const Htuple FlowControl, const Htuple Parity, const Htuple StopBits, const Htuple TotalTimeOut, const Htuple InterCharTimeOut);
LIntExport Herror set_serial_param(Hlong SerialHandle, Hlong BaudRate, Hlong DataBits, const char *FlowControl, const char *Parity, Hlong StopBits, Hlong TotalTimeOut, Hlong InterCharTimeOut);
LIntExport Herror T_close_all_serials(void);
LIntExport Herror close_all_serials(void);
LIntExport Herror T_close_serial(const Htuple SerialHandle);
LIntExport Herror close_serial(Hlong SerialHandle);
LIntExport Herror T_open_serial(const Htuple PortName, Htuple *SerialHandle);
LIntExport Herror open_serial(const char *PortName, Hlong *SerialHandle);
LIntExport Herror T_wait_seconds(const Htuple Seconds);
LIntExport Herror wait_seconds(double Seconds);
LIntExport Herror T_system_call(const Htuple Command);
LIntExport Herror system_call(const char *Command);
LIntExport Herror T_set_system(const Htuple SystemParameter, const Htuple Value);
LIntExport Herror set_system(const char *SystemParameter, const char *Value);
LIntExport Herror T_set_check(const Htuple Check);
LIntExport Herror set_check(const char *Check);
LIntExport Herror T_reset_obj_db(const Htuple DefaultImageWidth, const Htuple DefaultImageHeight, const Htuple DefaultChannels);
LIntExport Herror reset_obj_db(Hlong DefaultImageWidth, Hlong DefaultImageHeight, Hlong DefaultChannels);
LIntExport Herror T_get_system(const Htuple Query, Htuple *Information);
LIntExport Herror get_system(const char *Query, Hlong *Information);
LIntExport Herror T_get_check(Htuple *Check);
LIntExport Herror T_get_error_text(const Htuple ErrorCode, Htuple *ErrorMessage);
LIntExport Herror get_error_text(Hlong ErrorCode, char *ErrorMessage);
LIntExport Herror T_count_seconds(Htuple *Seconds);
LIntExport Herror count_seconds(double *Seconds);
LIntExport Herror T_count_relation(const Htuple RelationName, Htuple *NumOfTuples);
LIntExport Herror count_relation(const char *RelationName, Hlong *NumOfTuples);
LIntExport Herror T_receive_image(Hobject *Image, const Htuple Socket);
LIntExport Herror receive_image(Hobject *Image, Hlong Socket);
LIntExport Herror T_send_image(const Hobject Image, const Htuple Socket);
LIntExport Herror send_image(const Hobject Image, Hlong Socket);
LIntExport Herror T_receive_region(Hobject *Region, const Htuple Socket);
LIntExport Herror receive_region(Hobject *Region, Hlong Socket);
LIntExport Herror T_send_region(const Hobject Region, const Htuple Socket);
LIntExport Herror send_region(const Hobject Region, Hlong Socket);
LIntExport Herror T_receive_xld(Hobject *XLD, const Htuple Socket);
LIntExport Herror receive_xld(Hobject *XLD, Hlong Socket);
LIntExport Herror T_send_xld(const Hobject XLD, const Htuple Socket);
LIntExport Herror send_xld(const Hobject XLD, Hlong Socket);
LIntExport Herror T_receive_tuple(const Htuple Socket, Htuple *Tuple);
LIntExport Herror receive_tuple(Hlong Socket, char *Tuple);
LIntExport Herror T_send_tuple(const Htuple Socket, const Htuple Tuple);
LIntExport Herror send_tuple(Hlong Socket, const char *Tuple);
LIntExport Herror T_receive_data(const Htuple Socket, const Htuple Format, Htuple *Data, Htuple *From);
LIntExport Herror receive_data(Hlong Socket, const char *Format, char *Data, char *From);
LIntExport Herror T_send_data(const Htuple Socket, const Htuple Format, const Htuple Data, const Htuple To);
LIntExport Herror send_data(Hlong Socket, const char *Format, const char *Data, const char *To);
LIntExport Herror T_get_socket_param(const Htuple Socket, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_socket_param(Hlong Socket, const char *ParamName, char *ParamValue);
LIntExport Herror T_set_socket_param(const Htuple Socket, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_socket_param(Hlong Socket, const char *ParamName, const char *ParamValue);
LIntExport Herror T_get_next_socket_data_type(const Htuple Socket, Htuple *DataType);
LIntExport Herror get_next_socket_data_type(Hlong Socket, char *DataType);
LIntExport Herror T_get_socket_descriptor(const Htuple Socket, Htuple *SocketDescriptor);
LIntExport Herror get_socket_descriptor(Hlong Socket, Hlong *SocketDescriptor);
LIntExport Herror T_get_socket_timeout(const Htuple Socket, Htuple *Timeout);
LIntExport Herror get_socket_timeout(Hlong Socket, double *Timeout);
LIntExport Herror T_set_socket_timeout(const Htuple Socket, const Htuple Timeout);
LIntExport Herror set_socket_timeout(Hlong Socket, double Timeout);
LIntExport Herror T_close_all_sockets(void);
LIntExport Herror close_all_sockets(void);
LIntExport Herror T_close_socket(const Htuple Socket);
LIntExport Herror close_socket(Hlong Socket);
LIntExport Herror T_socket_accept_connect(const Htuple AcceptingSocket, const Htuple Wait, Htuple *Socket);
LIntExport Herror socket_accept_connect(Hlong AcceptingSocket, const char *Wait, Hlong *Socket);
LIntExport Herror T_open_socket_connect(const Htuple HostName, const Htuple Port, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Socket);
LIntExport Herror open_socket_connect(const char *HostName, Hlong Port, const char *GenParamName, const char *GenParamValue, Hlong *Socket);
LIntExport Herror T_open_socket_accept(const Htuple Port, const Htuple GenParamName, const Htuple GenParamValue, Htuple *AcceptingSocket);
LIntExport Herror open_socket_accept(Hlong Port, const char *GenParamName, const char *GenParamValue, Hlong *AcceptingSocket);
LIntExport Herror T_get_extended_error_info(Htuple *OperatorName, Htuple *ErrorCode, Htuple *ErrorMessage);
LIntExport Herror get_extended_error_info(char *OperatorName, Hlong *ErrorCode, char *ErrorMessage);
LIntExport Herror T_get_modules(Htuple *UsedModules, Htuple *ModuleKey);
LIntExport Herror T_binocular_distance_ms(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Distance, Hobject *Score, const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple MinDisparity, const Htuple MaxDisparity, const Htuple SurfaceSmoothing, const Htuple EdgeSmoothing, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_binocular_disparity_ms(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, const Htuple MinDisparity, const Htuple MaxDisparity, const Htuple SurfaceSmoothing, const Htuple EdgeSmoothing, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror binocular_disparity_ms(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, Hlong MinDisparity, Hlong MaxDisparity, Hlong SurfaceSmoothing, Hlong EdgeSmoothing, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_binocular_distance_mg(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Distance, Hobject *Score, const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple GrayConstancy, const Htuple GradientConstancy, const Htuple Smoothness, const Htuple InitialGuess, const Htuple CalculateScore, const Htuple MGParamName, const Htuple MGParamValue);
LIntExport Herror T_binocular_disparity_mg(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, const Htuple GrayConstancy, const Htuple GradientConstancy, const Htuple Smoothness, const Htuple InitialGuess, const Htuple CalculateScore, const Htuple MGParamName, const Htuple MGParamValue);
LIntExport Herror binocular_disparity_mg(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, double GrayConstancy, double GradientConstancy, double Smoothness, double InitialGuess, const char *CalculateScore, const char *MGParamName, const char *MGParamValue);
LIntExport Herror T_reconst3d_from_fundamental_matrix(const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple FMatrix, const Htuple CovFMat, Htuple *X, Htuple *Y, Htuple *Z, Htuple *W, Htuple *CovXYZW);
LIntExport Herror T_gen_binocular_proj_rectification(Hobject *Map1, Hobject *Map2, const Htuple FMatrix, const Htuple CovFMat, const Htuple Width1, const Htuple Height1, const Htuple Width2, const Htuple Height2, const Htuple SubSampling, const Htuple Mapping, Htuple *CovFMatRect, Htuple *H1, Htuple *H2);
LIntExport Herror T_vector_to_fundamental_matrix_distortion(const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple Method, Htuple *FMatrix, Htuple *Kappa, Htuple *Error, Htuple *X, Htuple *Y, Htuple *Z, Htuple *W);
LIntExport Herror T_rel_pose_to_fundamental_matrix(const Htuple RelPose, const Htuple CovRelPose, const Htuple CamPar1, const Htuple CamPar2, Htuple *FMatrix, Htuple *CovFMat);
LIntExport Herror T_essential_to_fundamental_matrix(const Htuple EMatrix, const Htuple CovEMat, const Htuple CamMat1, const Htuple CamMat2, Htuple *FMatrix, Htuple *CovFMat);
LIntExport Herror T_vector_to_rel_pose(const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple CamPar1, const Htuple CamPar2, const Htuple Method, Htuple *RelPose, Htuple *CovRelPose, Htuple *Error, Htuple *X, Htuple *Y, Htuple *Z, Htuple *CovXYZ);
LIntExport Herror T_vector_to_essential_matrix(const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple CamMat1, const Htuple CamMat2, const Htuple Method, Htuple *EMatrix, Htuple *CovEMat, Htuple *Error, Htuple *X, Htuple *Y, Htuple *Z, Htuple *CovXYZ);
LIntExport Herror T_vector_to_fundamental_matrix(const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CovRR1, const Htuple CovRC1, const Htuple CovCC1, const Htuple CovRR2, const Htuple CovRC2, const Htuple CovCC2, const Htuple Method, Htuple *FMatrix, Htuple *CovFMat, Htuple *Error, Htuple *X, Htuple *Y, Htuple *Z, Htuple *W, Htuple *CovXYZW);
LIntExport Herror T_match_fundamental_matrix_distortion_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *FMatrix, Htuple *Kappa, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_match_rel_pose_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CamPar1, const Htuple CamPar2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *RelPose, Htuple *CovRelPose, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_match_essential_matrix_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple CamMat1, const Htuple CamMat2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *EMatrix, Htuple *CovEMat, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_match_fundamental_matrix_ransac(const Hobject Image1, const Hobject Image2, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple GrayMatchMethod, const Htuple MaskSize, const Htuple RowMove, const Htuple ColMove, const Htuple RowTolerance, const Htuple ColTolerance, const Htuple Rotation, const Htuple MatchThreshold, const Htuple EstimationMethod, const Htuple DistanceThreshold, const Htuple RandSeed, Htuple *FMatrix, Htuple *CovFMat, Htuple *Error, Htuple *Points1, Htuple *Points2);
LIntExport Herror T_binocular_distance(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Distance, Hobject *Score, const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple Method, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple TextureThresh, const Htuple MinDisparity, const Htuple MaxDisparity, const Htuple NumLevels, const Htuple ScoreThresh, const Htuple Filter, const Htuple SubDistance);
LIntExport Herror T_binocular_disparity(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, const Htuple Method, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple TextureThresh, const Htuple MinDisparity, const Htuple MaxDisparity, const Htuple NumLevels, const Htuple ScoreThresh, const Htuple Filter, const Htuple SubDisparity);
LIntExport Herror binocular_disparity(const Hobject ImageRect1, const Hobject ImageRect2, Hobject *Disparity, Hobject *Score, const char *Method, Hlong MaskWidth, Hlong MaskHeight, double TextureThresh, Hlong MinDisparity, Hlong MaxDisparity, Hlong NumLevels, double ScoreThresh, const char *Filter, const char *SubDisparity);
LIntExport Herror T_intersect_lines_of_sight(const Htuple CamParam1, const Htuple CamParam2, const Htuple RelPose, const Htuple Row1, const Htuple Col1, const Htuple Row2, const Htuple Col2, Htuple *X, Htuple *Y, Htuple *Z, Htuple *Dist);
LIntExport Herror T_disparity_image_to_xyz(const Hobject Disparity, Hobject *X, Hobject *Y, Hobject *Z, const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect);
LIntExport Herror T_disparity_to_point_3d(const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple Row1, const Htuple Col1, const Htuple Disparity, Htuple *X, Htuple *Y, Htuple *Z);
LIntExport Herror T_disparity_to_distance(const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple Disparity, Htuple *Distance);
LIntExport Herror T_distance_to_disparity(const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, const Htuple Distance, Htuple *Disparity);
LIntExport Herror T_gen_binocular_rectification_map(Hobject *Map1, Hobject *Map2, const Htuple CamParam1, const Htuple CamParam2, const Htuple RelPose, const Htuple SubSampling, const Htuple Method, const Htuple MapType, Htuple *CamParamRect1, Htuple *CamParamRect2, Htuple *CamPoseRect1, Htuple *CamPoseRect2, Htuple *RelPoseRect);
LIntExport Herror T_binocular_calibration(const Htuple NX, const Htuple NY, const Htuple NZ, const Htuple NRow1, const Htuple NCol1, const Htuple NRow2, const Htuple NCol2, const Htuple StartCamParam1, const Htuple StartCamParam2, const Htuple NStartPose1, const Htuple NStartPose2, const Htuple EstimateParams, Htuple *CamParam1, Htuple *CamParam2, Htuple *NFinalPose1, Htuple *NFinalPose2, Htuple *RelPose, Htuple *Errors);
LIntExport Herror T_query_spy(Htuple *Classes, Htuple *Values);
LIntExport Herror T_set_spy(const Htuple Class, const Htuple Value);
LIntExport Herror set_spy(const char *Class, const char *Value);
LIntExport Herror T_get_spy(const Htuple Class, Htuple *Value);
LIntExport Herror get_spy(const char *Class, char *Value);
LIntExport Herror T_read_sheet_of_light_model(const Htuple FileName, Htuple *SheetOfLightModelID);
LIntExport Herror read_sheet_of_light_model(const char *FileName, Hlong *SheetOfLightModelID);
LIntExport Herror T_write_sheet_of_light_model(const Htuple SheetOfLightModelID, const Htuple FileName);
LIntExport Herror write_sheet_of_light_model(Hlong SheetOfLightModelID, const char *FileName);
LIntExport Herror T_deserialize_sheet_of_light_model(const Htuple SerializedItemHandle, Htuple *SheetOfLightModelID);
LIntExport Herror deserialize_sheet_of_light_model(Hlong SerializedItemHandle, Hlong *SheetOfLightModelID);
LIntExport Herror T_serialize_sheet_of_light_model(const Htuple SheetOfLightModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_sheet_of_light_model(Hlong SheetOfLightModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_create_sheet_of_light_calib_object(const Htuple Width, const Htuple Length, const Htuple HeightMin, const Htuple HeightMax, const Htuple FileName);
LIntExport Herror create_sheet_of_light_calib_object(double Width, double Length, double HeightMin, double HeightMax, const char *FileName);
LIntExport Herror T_calibrate_sheet_of_light(const Htuple SheetOfLightModelID, Htuple *Error);
LIntExport Herror calibrate_sheet_of_light(Hlong SheetOfLightModelID, double *Error);
LIntExport Herror T_get_sheet_of_light_result_object_model_3d(const Htuple SheetOfLightModelID, Htuple *ObjectModel3D);
LIntExport Herror get_sheet_of_light_result_object_model_3d(Hlong SheetOfLightModelID, Hlong *ObjectModel3D);
LIntExport Herror T_get_sheet_of_light_result(Hobject *ResultValue, const Htuple SheetOfLightModelID, const Htuple ResultName);
LIntExport Herror get_sheet_of_light_result(Hobject *ResultValue, Hlong SheetOfLightModelID, const char *ResultName);
LIntExport Herror T_apply_sheet_of_light_calibration(const Hobject Disparity, const Htuple SheetOfLightModelID);
LIntExport Herror apply_sheet_of_light_calibration(const Hobject Disparity, Hlong SheetOfLightModelID);
LIntExport Herror T_set_profile_sheet_of_light(const Hobject ProfileDisparityImage, const Htuple SheetOfLightModelID, const Htuple MovementPoses);
LIntExport Herror T_measure_profile_sheet_of_light(const Hobject ProfileImage, const Htuple SheetOfLightModelID, const Htuple MovementPose);
LIntExport Herror T_set_sheet_of_light_param(const Htuple SheetOfLightModelID, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_sheet_of_light_param(Hlong SheetOfLightModelID, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_get_sheet_of_light_param(const Htuple SheetOfLightModelID, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_sheet_of_light_param(Hlong SheetOfLightModelID, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_query_sheet_of_light_params(const Htuple SheetOfLightModelID, const Htuple QueryName, Htuple *GenParamNames);
LIntExport Herror T_reset_sheet_of_light_model(const Htuple SheetOfLightModelID);
LIntExport Herror reset_sheet_of_light_model(Hlong SheetOfLightModelID);
LIntExport Herror T_clear_all_sheet_of_light_models(void);
LIntExport Herror clear_all_sheet_of_light_models(void);
LIntExport Herror T_clear_sheet_of_light_model(const Htuple SheetOfLightModelID);
LIntExport Herror clear_sheet_of_light_model(Hlong SheetOfLightModelID);
LIntExport Herror T_create_sheet_of_light_model(const Hobject ProfileRegion, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *SheetOfLightModelID);
LIntExport Herror create_sheet_of_light_model(const Hobject ProfileRegion, const char *GenParamNames, Hlong GenParamValues, Hlong *SheetOfLightModelID);
LIntExport Herror T_shade_height_field(const Hobject ImageHeight, Hobject *ImageShade, const Htuple Slant, const Htuple Tilt, const Htuple Albedo, const Htuple Ambient, const Htuple Shadows);
LIntExport Herror shade_height_field(const Hobject ImageHeight, Hobject *ImageShade, double Slant, double Tilt, double Albedo, double Ambient, const char *Shadows);
LIntExport Herror T_estimate_al_am(const Hobject Image, Htuple *Albedo, Htuple *Ambient);
LIntExport Herror estimate_al_am(const Hobject Image, double *Albedo, double *Ambient);
LIntExport Herror T_estimate_sl_al_zc(const Hobject Image, Htuple *Slant, Htuple *Albedo);
LIntExport Herror estimate_sl_al_zc(const Hobject Image, double *Slant, double *Albedo);
LIntExport Herror T_estimate_sl_al_lr(const Hobject Image, Htuple *Slant, Htuple *Albedo);
LIntExport Herror estimate_sl_al_lr(const Hobject Image, double *Slant, double *Albedo);
LIntExport Herror T_estimate_tilt_zc(const Hobject Image, Htuple *Tilt);
LIntExport Herror estimate_tilt_zc(const Hobject Image, double *Tilt);
LIntExport Herror T_estimate_tilt_lr(const Hobject Image, Htuple *Tilt);
LIntExport Herror estimate_tilt_lr(const Hobject Image, double *Tilt);
LIntExport Herror T_phot_stereo(const Hobject Images, Hobject *Height, const Htuple Slants, const Htuple Tilts);
LIntExport Herror T_reconstruct_height_field_from_gradient(const Hobject Gradient, Hobject *HeightField, const Htuple ReconstructionMethod, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_photometric_stereo(const Hobject Images, Hobject *HeightField, Hobject *Gradient, Hobject *Albedo, const Htuple Slants, const Htuple Tilts, const Htuple ResultType, const Htuple ReconstructionMethod, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_sfs_pentland(const Hobject Image, Hobject *Height, const Htuple Slant, const Htuple Tilt, const Htuple Albedo, const Htuple Ambient);
LIntExport Herror sfs_pentland(const Hobject Image, Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror T_sfs_orig_lr(const Hobject Image, Hobject *Height, const Htuple Slant, const Htuple Tilt, const Htuple Albedo, const Htuple Ambient);
LIntExport Herror sfs_orig_lr(const Hobject Image, Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror T_sfs_mod_lr(const Hobject Image, Hobject *Height, const Htuple Slant, const Htuple Tilt, const Htuple Albedo, const Htuple Ambient);
LIntExport Herror sfs_mod_lr(const Hobject Image, Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror T_receive_serialized_item(const Htuple Socket, Htuple *SerializedItemHandle);
LIntExport Herror receive_serialized_item(Hlong Socket, Hlong *SerializedItemHandle);
LIntExport Herror T_send_serialized_item(const Htuple Socket, const Htuple SerializedItemHandle);
LIntExport Herror send_serialized_item(Hlong Socket, Hlong SerializedItemHandle);
LIntExport Herror T_fwrite_serialized_item(const Htuple FileHandle, const Htuple SerializedItemHandle);
LIntExport Herror fwrite_serialized_item(Hlong FileHandle, Hlong SerializedItemHandle);
LIntExport Herror T_fread_serialized_item(const Htuple FileHandle, Htuple *SerializedItemHandle);
LIntExport Herror fread_serialized_item(Hlong FileHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_clear_all_serialized_items(void);
LIntExport Herror clear_all_serialized_items(void);
LIntExport Herror T_clear_serialized_item(const Htuple SerializedItemHandle);
LIntExport Herror clear_serialized_item(Hlong SerializedItemHandle);
LIntExport Herror T_get_serialized_item_ptr(const Htuple SerializedItemHandle, Htuple *Pointer, Htuple *Size);
LIntExport Herror get_serialized_item_ptr(Hlong SerializedItemHandle, Hlong *Pointer, Hlong *Size);
LIntExport Herror T_create_serialized_item_ptr(const Htuple Pointer, const Htuple Size, const Htuple Copy, Htuple *SerializedItemHandle);
LIntExport Herror create_serialized_item_ptr(Hlong Pointer, Hlong Size, const char *Copy, Hlong *SerializedItemHandle);
LIntExport Herror T_fit_primitives_object_model_3d(const Htuple ObjectModel3D, const Htuple ParamName, const Htuple ParamValue, Htuple *ObjectModel3DOut);
LIntExport Herror fit_primitives_object_model_3d(Hlong ObjectModel3D, const char *ParamName, const char *ParamValue, Hlong *ObjectModel3DOut);
LIntExport Herror T_segment_object_model_3d(const Htuple ObjectModel3D, const Htuple ParamName, const Htuple ParamValue, Htuple *ObjectModel3DOut);
LIntExport Herror segment_object_model_3d(Hlong ObjectModel3D, const char *ParamName, const char *ParamValue, Hlong *ObjectModel3DOut);
LIntExport Herror T_clear_all_text_results(void);
LIntExport Herror clear_all_text_results(void);
LIntExport Herror T_clear_text_result(const Htuple TextResultID);
LIntExport Herror clear_text_result(Hlong TextResultID);
LIntExport Herror T_get_text_object(Hobject *Characters, const Htuple TextResultID, const Htuple ResultName);
LIntExport Herror get_text_object(Hobject *Characters, Hlong TextResultID, const char *ResultName);
LIntExport Herror T_get_text_result(const Htuple TextResultID, const Htuple ResultName, Htuple *ResultValue);
LIntExport Herror get_text_result(Hlong TextResultID, const char *ResultName, Hlong *ResultValue);
LIntExport Herror T_find_text(const Hobject Image, const Htuple TextModel, Htuple *TextResultID);
LIntExport Herror find_text(const Hobject Image, Hlong TextModel, Hlong *TextResultID);
LIntExport Herror T_get_text_model_param(const Htuple TextModel, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_text_model_param(Hlong TextModel, const char *GenParamName, Hlong *GenParamValue);
LIntExport Herror T_set_text_model_param(const Htuple TextModel, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_text_model_param(Hlong TextModel, const char *GenParamName, Hlong GenParamValue);
LIntExport Herror T_clear_all_text_models(void);
LIntExport Herror clear_all_text_models(void);
LIntExport Herror T_clear_text_model(const Htuple TextModel);
LIntExport Herror clear_text_model(Hlong TextModel);
LIntExport Herror T_create_text_model_reader(const Htuple Mode, const Htuple OCRClassifierMLP, Htuple *TextModel);
LIntExport Herror create_text_model_reader(const char *Mode, const char *OCRClassifierMLP, Hlong *TextModel);
LIntExport Herror T_create_text_model(Htuple *TextModel);
LIntExport Herror create_text_model(Hlong *TextModel);
LIntExport Herror T_select_characters(const Hobject Region, Hobject *RegionCharacters, const Htuple DotPrint, const Htuple StrokeWidth, const Htuple CharWidth, const Htuple CharHeight, const Htuple Punctuation, const Htuple DiacriticMarks, const Htuple PartitionMethod, const Htuple PartitionLines, const Htuple FragmentDistance, const Htuple ConnectFragments, const Htuple ClutterSizeMax, const Htuple StopAfter);
LIntExport Herror T_segment_characters(const Hobject Region, const Hobject Image, Hobject *ImageForeground, Hobject *RegionForeground, const Htuple Method, const Htuple EliminateLines, const Htuple DotPrint, const Htuple StrokeWidth, const Htuple CharWidth, const Htuple CharHeight, const Htuple ThresholdOffset, const Htuple Contrast, Htuple *UsedThreshold);
LIntExport Herror T_text_line_slant(const Hobject Region, const Hobject Image, const Htuple CharHeight, const Htuple SlantFrom, const Htuple SlantTo, Htuple *SlantAngle);
LIntExport Herror text_line_slant(const Hobject Region, const Hobject Image, Hlong CharHeight, double SlantFrom, double SlantTo, double *SlantAngle);
LIntExport Herror T_text_line_orientation(const Hobject Region, const Hobject Image, const Htuple CharHeight, const Htuple OrientationFrom, const Htuple OrientationTo, Htuple *OrientationAngle);
LIntExport Herror text_line_orientation(const Hobject Region, const Hobject Image, Hlong CharHeight, double OrientationFrom, double OrientationTo, double *OrientationAngle);
LIntExport Herror T_classify_image_class_lut(const Hobject Image, Hobject *ClassRegions, const Htuple ClassLUTHandle);
LIntExport Herror classify_image_class_lut(const Hobject Image, Hobject *ClassRegions, Hlong ClassLUTHandle);
LIntExport Herror T_classify_image_class_knn(const Hobject Image, Hobject *ClassRegions, Hobject *DistanceImage, const Htuple KNNHandle, const Htuple RejectionThreshold);
LIntExport Herror classify_image_class_knn(const Hobject Image, Hobject *ClassRegions, Hobject *DistanceImage, Hlong KNNHandle, double RejectionThreshold);
LIntExport Herror T_add_samples_image_class_knn(const Hobject Image, const Hobject ClassRegions, const Htuple KNNHandle);
LIntExport Herror add_samples_image_class_knn(const Hobject Image, const Hobject ClassRegions, Hlong KNNHandle);
LIntExport Herror T_classify_image_class_gmm(const Hobject Image, Hobject *ClassRegions, const Htuple GMMHandle, const Htuple RejectionThreshold);
LIntExport Herror classify_image_class_gmm(const Hobject Image, Hobject *ClassRegions, Hlong GMMHandle, double RejectionThreshold);
LIntExport Herror T_add_samples_image_class_gmm(const Hobject Image, const Hobject ClassRegions, const Htuple GMMHandle, const Htuple Randomize);
LIntExport Herror add_samples_image_class_gmm(const Hobject Image, const Hobject ClassRegions, Hlong GMMHandle, double Randomize);
LIntExport Herror T_classify_image_class_svm(const Hobject Image, Hobject *ClassRegions, const Htuple SVMHandle);
LIntExport Herror classify_image_class_svm(const Hobject Image, Hobject *ClassRegions, Hlong SVMHandle);
LIntExport Herror T_add_samples_image_class_svm(const Hobject Image, const Hobject ClassRegions, const Htuple SVMHandle);
LIntExport Herror add_samples_image_class_svm(const Hobject Image, const Hobject ClassRegions, Hlong SVMHandle);
LIntExport Herror T_classify_image_class_mlp(const Hobject Image, Hobject *ClassRegions, const Htuple MLPHandle, const Htuple RejectionThreshold);
LIntExport Herror classify_image_class_mlp(const Hobject Image, Hobject *ClassRegions, Hlong MLPHandle, double RejectionThreshold);
LIntExport Herror T_add_samples_image_class_mlp(const Hobject Image, const Hobject ClassRegions, const Htuple MLPHandle);
LIntExport Herror add_samples_image_class_mlp(const Hobject Image, const Hobject ClassRegions, Hlong MLPHandle);
LIntExport Herror T_learn_ndim_norm(const Hobject Foreground, const Hobject Background, const Hobject Image, const Htuple Metric, const Htuple Distance, const Htuple MinNumberPercent, Htuple *Radius, Htuple *Center, Htuple *Quality);
LIntExport Herror T_learn_ndim_box(const Hobject Foreground, const Hobject Background, const Hobject MultiChannelImage, const Htuple ClassifHandle);
LIntExport Herror learn_ndim_box(const Hobject Foreground, const Hobject Background, const Hobject MultiChannelImage, Hlong ClassifHandle);
LIntExport Herror T_class_ndim_box(const Hobject MultiChannelImage, Hobject *Regions, const Htuple ClassifHandle);
LIntExport Herror class_ndim_box(const Hobject MultiChannelImage, Hobject *Regions, Hlong ClassifHandle);
LIntExport Herror T_class_ndim_norm(const Hobject MultiChannelImage, Hobject *Regions, const Htuple Metric, const Htuple SingleMultiple, const Htuple Radius, const Htuple Center);
LIntExport Herror class_ndim_norm(const Hobject MultiChannelImage, Hobject *Regions, const char *Metric, const char *SingleMultiple, double Radius, double Center);
LIntExport Herror T_class_2dim_sup(const Hobject ImageCol, const Hobject ImageRow, const Hobject FeatureSpace, Hobject *RegionClass2Dim);
LIntExport Herror class_2dim_sup(const Hobject ImageCol, const Hobject ImageRow, const Hobject FeatureSpace, Hobject *RegionClass2Dim);
LIntExport Herror T_class_2dim_unsup(const Hobject Image1, const Hobject Image2, Hobject *Classes, const Htuple Threshold, const Htuple NumClasses);
LIntExport Herror class_2dim_unsup(const Hobject Image1, const Hobject Image2, Hobject *Classes, Hlong Threshold, Hlong NumClasses);
LIntExport Herror T_check_difference(const Hobject Image, const Hobject Pattern, Hobject *Selected, const Htuple Mode, const Htuple DiffLowerBound, const Htuple DiffUpperBound, const Htuple GrayOffset, const Htuple AddRow, const Htuple AddCol);
LIntExport Herror check_difference(const Hobject Image, const Hobject Pattern, Hobject *Selected, const char *Mode, Hlong DiffLowerBound, Hlong DiffUpperBound, Hlong GrayOffset, Hlong AddRow, Hlong AddCol);
LIntExport Herror T_char_threshold(const Hobject Image, const Hobject HistoRegion, Hobject *Characters, const Htuple Sigma, const Htuple Percent, Htuple *Threshold);
LIntExport Herror char_threshold(const Hobject Image, const Hobject HistoRegion, Hobject *Characters, double Sigma, double Percent, Hlong *Threshold);
LIntExport Herror T_label_to_region(const Hobject LabelImage, Hobject *Regions);
LIntExport Herror label_to_region(const Hobject LabelImage, Hobject *Regions);
LIntExport Herror T_nonmax_suppression_amp(const Hobject ImgAmp, Hobject *ImageResult, const Htuple Mode);
LIntExport Herror nonmax_suppression_amp(const Hobject ImgAmp, Hobject *ImageResult, const char *Mode);
LIntExport Herror T_nonmax_suppression_dir(const Hobject ImgAmp, const Hobject ImgDir, Hobject *ImageResult, const Htuple Mode);
LIntExport Herror nonmax_suppression_dir(const Hobject ImgAmp, const Hobject ImgDir, Hobject *ImageResult, const char *Mode);
LIntExport Herror T_hysteresis_threshold(const Hobject Image, Hobject *RegionHysteresis, const Htuple Low, const Htuple High, const Htuple MaxLength);
LIntExport Herror hysteresis_threshold(const Hobject Image, Hobject *RegionHysteresis, Hlong Low, Hlong High, Hlong MaxLength);
LIntExport Herror T_binary_threshold(const Hobject Image, Hobject *Region, const Htuple Method, const Htuple LightDark, Htuple *UsedThreshold);
LIntExport Herror binary_threshold(const Hobject Image, Hobject *Region, const char *Method, const char *LightDark, Hlong *UsedThreshold);
LIntExport Herror T_local_threshold(const Hobject Image, Hobject *Region, const Htuple Method, const Htuple LightDark, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror local_threshold(const Hobject Image, Hobject *Region, const char *Method, const char *LightDark, const char *GenParamName, Hlong GenParamValue);
LIntExport Herror T_var_threshold(const Hobject Image, Hobject *Region, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple StdDevScale, const Htuple AbsThreshold, const Htuple LightDark);
LIntExport Herror var_threshold(const Hobject Image, Hobject *Region, Hlong MaskWidth, Hlong MaskHeight, double StdDevScale, double AbsThreshold, const char *LightDark);
LIntExport Herror T_dyn_threshold(const Hobject OrigImage, const Hobject ThresholdImage, Hobject *RegionDynThresh, const Htuple Offset, const Htuple LightDark);
LIntExport Herror dyn_threshold(const Hobject OrigImage, const Hobject ThresholdImage, Hobject *RegionDynThresh, double Offset, const char *LightDark);
LIntExport Herror T_threshold(const Hobject Image, Hobject *Region, const Htuple MinGray, const Htuple MaxGray);
LIntExport Herror threshold(const Hobject Image, Hobject *Region, double MinGray, double MaxGray);
LIntExport Herror T_threshold_sub_pix(const Hobject Image, Hobject *Border, const Htuple Threshold);
LIntExport Herror threshold_sub_pix(const Hobject Image, Hobject *Border, double Threshold);
LIntExport Herror T_regiongrowing_n(const Hobject MultiChannelImage, Hobject *Regions, const Htuple Metric, const Htuple MinTolerance, const Htuple MaxTolerance, const Htuple MinSize);
LIntExport Herror regiongrowing_n(const Hobject MultiChannelImage, Hobject *Regions, const char *Metric, double MinTolerance, double MaxTolerance, Hlong MinSize);
LIntExport Herror T_regiongrowing(const Hobject Image, Hobject *Regions, const Htuple Row, const Htuple Column, const Htuple Tolerance, const Htuple MinSize);
LIntExport Herror regiongrowing(const Hobject Image, Hobject *Regions, Hlong Row, Hlong Column, double Tolerance, Hlong MinSize);
LIntExport Herror T_regiongrowing_mean(const Hobject Image, Hobject *Regions, const Htuple StartRows, const Htuple StartColumns, const Htuple Tolerance, const Htuple MinSize);
LIntExport Herror regiongrowing_mean(const Hobject Image, Hobject *Regions, Hlong StartRows, Hlong StartColumns, double Tolerance, Hlong MinSize);
LIntExport Herror T_pouring(const Hobject Image, Hobject *Regions, const Htuple Mode, const Htuple MinGray, const Htuple MaxGray);
LIntExport Herror pouring(const Hobject Image, Hobject *Regions, const char *Mode, Hlong MinGray, Hlong MaxGray);
LIntExport Herror T_watersheds_threshold(const Hobject Image, Hobject *Basins, const Htuple Threshold);
LIntExport Herror watersheds_threshold(const Hobject Image, Hobject *Basins, Hlong Threshold);
LIntExport Herror T_watersheds(const Hobject Image, Hobject *Basins, Hobject *Watersheds);
LIntExport Herror watersheds(const Hobject Image, Hobject *Basins, Hobject *Watersheds);
LIntExport Herror T_zero_crossing(const Hobject Image, Hobject *RegionCrossing);
LIntExport Herror zero_crossing(const Hobject Image, Hobject *RegionCrossing);
LIntExport Herror T_zero_crossing_sub_pix(const Hobject Image, Hobject *ZeroCrossings);
LIntExport Herror zero_crossing_sub_pix(const Hobject Image, Hobject *ZeroCrossings);
LIntExport Herror T_dual_threshold(const Hobject Image, Hobject *RegionCrossings, const Htuple MinSize, const Htuple MinGray, const Htuple Threshold);
LIntExport Herror dual_threshold(const Hobject Image, Hobject *RegionCrossings, Hlong MinSize, double MinGray, double Threshold);
LIntExport Herror T_expand_line(const Hobject Image, Hobject *RegionExpand, const Htuple Coordinate, const Htuple ExpandType, const Htuple RowColumn, const Htuple Threshold);
LIntExport Herror expand_line(const Hobject Image, Hobject *RegionExpand, Hlong Coordinate, const char *ExpandType, const char *RowColumn, double Threshold);
LIntExport Herror T_local_min(const Hobject Image, Hobject *LocalMinima);
LIntExport Herror local_min(const Hobject Image, Hobject *LocalMinima);
LIntExport Herror T_lowlands(const Hobject Image, Hobject *Lowlands);
LIntExport Herror lowlands(const Hobject Image, Hobject *Lowlands);
LIntExport Herror T_lowlands_center(const Hobject Image, Hobject *Lowlands);
LIntExport Herror lowlands_center(const Hobject Image, Hobject *Lowlands);
LIntExport Herror T_local_max(const Hobject Image, Hobject *LocalMaxima);
LIntExport Herror local_max(const Hobject Image, Hobject *LocalMaxima);
LIntExport Herror T_plateaus(const Hobject Image, Hobject *Plateaus);
LIntExport Herror plateaus(const Hobject Image, Hobject *Plateaus);
LIntExport Herror T_plateaus_center(const Hobject Image, Hobject *Plateaus);
LIntExport Herror plateaus_center(const Hobject Image, Hobject *Plateaus);
LIntExport Herror T_histo_to_thresh(const Htuple Histogramm, const Htuple Sigma, Htuple *MinThresh, Htuple *MaxThresh);
LIntExport Herror T_auto_threshold(const Hobject Image, Hobject *Regions, const Htuple Sigma);
LIntExport Herror auto_threshold(const Hobject Image, Hobject *Regions, double Sigma);
LIntExport Herror T_bin_threshold(const Hobject Image, Hobject *Region);
LIntExport Herror bin_threshold(const Hobject Image, Hobject *Region);
LIntExport Herror T_fast_threshold(const Hobject Image, Hobject *Region, const Htuple MinGray, const Htuple MaxGray, const Htuple MinSize);
LIntExport Herror fast_threshold(const Hobject Image, Hobject *Region, double MinGray, double MaxGray, Hlong MinSize);
LIntExport Herror T_polar_trans_region_inv(const Hobject PolarRegion, Hobject *XYTransRegion, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple WidthIn, const Htuple HeightIn, const Htuple Width, const Htuple Height, const Htuple Interpolation);
LIntExport Herror polar_trans_region_inv(const Hobject PolarRegion, Hobject *XYTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong WidthIn, Hlong HeightIn, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror T_polar_trans_region(const Hobject Region, Hobject *PolarTransRegion, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple Width, const Htuple Height, const Htuple Interpolation);
LIntExport Herror polar_trans_region(const Hobject Region, Hobject *PolarTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror T_merge_regions_line_scan(const Hobject CurrRegions, const Hobject PrevRegions, Hobject *CurrMergedRegions, Hobject *PrevMergedRegions, const Htuple ImageHeight, const Htuple MergeBorder, const Htuple MaxImagesRegion);
LIntExport Herror merge_regions_line_scan(const Hobject CurrRegions, const Hobject PrevRegions, Hobject *CurrMergedRegions, Hobject *PrevMergedRegions, Hlong ImageHeight, const char *MergeBorder, Hlong MaxImagesRegion);
LIntExport Herror T_partition_rectangle(const Hobject Region, Hobject *Partitioned, const Htuple Width, const Htuple Height);
LIntExport Herror partition_rectangle(const Hobject Region, Hobject *Partitioned, double Width, double Height);
LIntExport Herror T_partition_dynamic(const Hobject Region, Hobject *Partitioned, const Htuple Distance, const Htuple Percent);
LIntExport Herror partition_dynamic(const Hobject Region, Hobject *Partitioned, double Distance, double Percent);
LIntExport Herror T_region_to_label(const Hobject Region, Hobject *ImageLabel, const Htuple Type, const Htuple Width, const Htuple Height);
LIntExport Herror region_to_label(const Hobject Region, Hobject *ImageLabel, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror T_region_to_bin(const Hobject Region, Hobject *BinImage, const Htuple ForegroundGray, const Htuple BackgroundGray, const Htuple Width, const Htuple Height);
LIntExport Herror region_to_bin(const Hobject Region, Hobject *BinImage, Hlong ForegroundGray, Hlong BackgroundGray, Hlong Width, Hlong Height);
LIntExport Herror T_union2(const Hobject Region1, const Hobject Region2, Hobject *RegionUnion);
LIntExport Herror union2(const Hobject Region1, const Hobject Region2, Hobject *RegionUnion);
LIntExport Herror T_union1(const Hobject Region, Hobject *RegionUnion);
LIntExport Herror union1(const Hobject Region, Hobject *RegionUnion);
LIntExport Herror T_closest_point_transform(const Hobject Region, Hobject *Distances, Hobject *ClosestPoints, const Htuple Metric, const Htuple Foreground, const Htuple ClosestPointMode, const Htuple Width, const Htuple Height);
LIntExport Herror closest_point_transform(const Hobject Region, Hobject *Distances, Hobject *ClosestPoints, const char *Metric, const char *Foreground, const char *ClosestPointMode, Hlong Width, Hlong Height);
LIntExport Herror T_distance_transform(const Hobject Region, Hobject *DistanceImage, const Htuple Metric, const Htuple Foreground, const Htuple Width, const Htuple Height);
LIntExport Herror distance_transform(const Hobject Region, Hobject *DistanceImage, const char *Metric, const char *Foreground, Hlong Width, Hlong Height);
LIntExport Herror T_skeleton(const Hobject Region, Hobject *Skeleton);
LIntExport Herror skeleton(const Hobject Region, Hobject *Skeleton);
LIntExport Herror T_projective_trans_region(const Hobject Regions, Hobject *TransRegions, const Htuple HomMat2D, const Htuple Interpolation);
LIntExport Herror T_affine_trans_region(const Hobject Region, Hobject *RegionAffineTrans, const Htuple HomMat2D, const Htuple Interpolate);
LIntExport Herror T_mirror_region(const Hobject Region, Hobject *RegionMirror, const Htuple Mode, const Htuple WidthHeight);
LIntExport Herror mirror_region(const Hobject Region, Hobject *RegionMirror, const char *Mode, Hlong WidthHeight);
LIntExport Herror T_zoom_region(const Hobject Region, Hobject *RegionZoom, const Htuple ScaleWidth, const Htuple ScaleHeight);
LIntExport Herror zoom_region(const Hobject Region, Hobject *RegionZoom, double ScaleWidth, double ScaleHeight);
LIntExport Herror T_move_region(const Hobject Region, Hobject *RegionMoved, const Htuple Row, const Htuple Column);
LIntExport Herror move_region(const Hobject Region, Hobject *RegionMoved, Hlong Row, Hlong Column);
LIntExport Herror T_junctions_skeleton(const Hobject Region, Hobject *EndPoints, Hobject *JuncPoints);
LIntExport Herror junctions_skeleton(const Hobject Region, Hobject *EndPoints, Hobject *JuncPoints);
LIntExport Herror T_intersection(const Hobject Region1, const Hobject Region2, Hobject *RegionIntersection);
LIntExport Herror intersection(const Hobject Region1, const Hobject Region2, Hobject *RegionIntersection);
LIntExport Herror T_interjacent(const Hobject Region, Hobject *RegionInterjacent, const Htuple Mode);
LIntExport Herror interjacent(const Hobject Region, Hobject *RegionInterjacent, const char *Mode);
LIntExport Herror T_fill_up(const Hobject Region, Hobject *RegionFillUp);
LIntExport Herror fill_up(const Hobject Region, Hobject *RegionFillUp);
LIntExport Herror T_fill_up_shape(const Hobject Region, Hobject *RegionFillUp, const Htuple Feature, const Htuple Min, const Htuple Max);
LIntExport Herror fill_up_shape(const Hobject Region, Hobject *RegionFillUp, const char *Feature, double Min, double Max);
LIntExport Herror T_expand_region(const Hobject Regions, const Hobject ForbiddenArea, Hobject *RegionExpanded, const Htuple Iterations, const Htuple Mode);
LIntExport Herror expand_region(const Hobject Regions, const Hobject ForbiddenArea, Hobject *RegionExpanded, Hlong Iterations, const char *Mode);
LIntExport Herror T_clip_region_rel(const Hobject Region, Hobject *RegionClipped, const Htuple Top, const Htuple Bottom, const Htuple Left, const Htuple Right);
LIntExport Herror clip_region_rel(const Hobject Region, Hobject *RegionClipped, Hlong Top, Hlong Bottom, Hlong Left, Hlong Right);
LIntExport Herror T_clip_region(const Hobject Region, Hobject *RegionClipped, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror clip_region(const Hobject Region, Hobject *RegionClipped, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_rank_region(const Hobject Region, Hobject *RegionCount, const Htuple Width, const Htuple Height, const Htuple Number);
LIntExport Herror rank_region(const Hobject Region, Hobject *RegionCount, Hlong Width, Hlong Height, Hlong Number);
LIntExport Herror T_connection(const Hobject Region, Hobject *ConnectedRegions);
LIntExport Herror connection(const Hobject Region, Hobject *ConnectedRegions);
LIntExport Herror T_symm_difference(const Hobject Region1, const Hobject Region2, Hobject *RegionDifference);
LIntExport Herror symm_difference(const Hobject Region1, const Hobject Region2, Hobject *RegionDifference);
LIntExport Herror T_difference(const Hobject Region, const Hobject Sub, Hobject *RegionDifference);
LIntExport Herror difference(const Hobject Region, const Hobject Sub, Hobject *RegionDifference);
LIntExport Herror T_complement(const Hobject Region, Hobject *RegionComplement);
LIntExport Herror complement(const Hobject Region, Hobject *RegionComplement);
LIntExport Herror T_background_seg(const Hobject Foreground, Hobject *BackgroundRegions);
LIntExport Herror background_seg(const Hobject Foreground, Hobject *BackgroundRegions);
LIntExport Herror T_hamming_change_region(const Hobject InputRegion, Hobject *OutputRegion, const Htuple Width, const Htuple Height, const Htuple Distance);
LIntExport Herror hamming_change_region(const Hobject InputRegion, Hobject *OutputRegion, Hlong Width, Hlong Height, Hlong Distance);
LIntExport Herror T_remove_noise_region(const Hobject InputRegion, Hobject *OutputRegion, const Htuple Type);
LIntExport Herror remove_noise_region(const Hobject InputRegion, Hobject *OutputRegion, const char *Type);
LIntExport Herror T_shape_trans(const Hobject Region, Hobject *RegionTrans, const Htuple Type);
LIntExport Herror shape_trans(const Hobject Region, Hobject *RegionTrans, const char *Type);
LIntExport Herror T_expand_gray(const Hobject Regions, const Hobject Image, const Hobject ForbiddenArea, Hobject *RegionExpand, const Htuple Iterations, const Htuple Mode, const Htuple Threshold);
LIntExport Herror expand_gray(const Hobject Regions, const Hobject Image, const Hobject ForbiddenArea, Hobject *RegionExpand, const char *Iterations, const char *Mode, Hlong Threshold);
LIntExport Herror T_expand_gray_ref(const Hobject Regions, const Hobject Image, const Hobject ForbiddenArea, Hobject *RegionExpand, const Htuple Iterations, const Htuple Mode, const Htuple RefGray, const Htuple Threshold);
LIntExport Herror expand_gray_ref(const Hobject Regions, const Hobject Image, const Hobject ForbiddenArea, Hobject *RegionExpand, const char *Iterations, const char *Mode, Hlong RefGray, Hlong Threshold);
LIntExport Herror T_split_skeleton_lines(const Hobject SkeletonRegion, const Htuple MaxDistance, Htuple *BeginRow, Htuple *BeginCol, Htuple *EndRow, Htuple *EndCol);
LIntExport Herror T_split_skeleton_region(const Hobject SkeletonRegion, Hobject *RegionLines, const Htuple MaxDistance);
LIntExport Herror split_skeleton_region(const Hobject SkeletonRegion, Hobject *RegionLines, Hlong MaxDistance);
LIntExport Herror T_gen_region_histo(Hobject *Region, const Htuple Histogram, const Htuple Row, const Htuple Column, const Htuple Scale);
LIntExport Herror T_eliminate_runs(const Hobject Region, Hobject *RegionClipped, const Htuple ElimShorter, const Htuple ElimLonger);
LIntExport Herror eliminate_runs(const Hobject Region, Hobject *RegionClipped, Hlong ElimShorter, Hlong ElimLonger);
LIntExport Herror T_surface_normals_object_model_3d(const Htuple ObjectModel3D, const Htuple Method, const Htuple GenParamName, const Htuple GenParamValue, Htuple *ObjectModel3DNormals);
LIntExport Herror surface_normals_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *ObjectModel3DNormals);
LIntExport Herror T_smooth_object_model_3d(const Htuple ObjectModel3D, const Htuple Method, const Htuple GenParamName, const Htuple GenParamValue, Htuple *SmoothObjectModel3D);
LIntExport Herror smooth_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *SmoothObjectModel3D);
LIntExport Herror T_triangulate_object_model_3d(const Htuple ObjectModel3D, const Htuple Method, const Htuple GenParamName, const Htuple GenParamValue, Htuple *TriangulatedObjectModel3D, Htuple *Information);
LIntExport Herror triangulate_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *TriangulatedObjectModel3D, Hlong *Information);
LIntExport Herror T_clear_all_stereo_models(void);
LIntExport Herror clear_all_stereo_models(void);
LIntExport Herror T_clear_stereo_model(const Htuple StereoModelID);
LIntExport Herror clear_stereo_model(Hlong StereoModelID);
LIntExport Herror T_reconstruct_points_stereo(const Htuple StereoModelID, const Htuple Row, const Htuple Column, const Htuple CovIP, const Htuple CameraIdx, const Htuple PointIdx, Htuple *X, Htuple *Y, Htuple *Z, Htuple *CovWP, Htuple *PointIdxOut);
LIntExport Herror T_reconstruct_surface_stereo(const Hobject Images, const Htuple StereoModelID, Htuple *ObjectModel3D);
LIntExport Herror reconstruct_surface_stereo(const Hobject Images, Hlong StereoModelID, Hlong *ObjectModel3D);
LIntExport Herror T_get_stereo_model_object(Hobject *Object, const Htuple StereoModelID, const Htuple PairIndex, const Htuple ObjectName);
LIntExport Herror get_stereo_model_object(Hobject *Object, Hlong StereoModelID, Hlong PairIndex, const char *ObjectName);
LIntExport Herror T_get_stereo_model_image_pairs(const Htuple StereoModelID, Htuple *From, Htuple *To);
LIntExport Herror T_set_stereo_model_image_pairs(const Htuple StereoModelID, const Htuple From, const Htuple To);
LIntExport Herror T_get_stereo_model_param(const Htuple StereoModelID, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror T_set_stereo_model_param(const Htuple StereoModelID, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror T_create_stereo_model(const Htuple CameraSetupModelID, const Htuple Method, const Htuple GenParamName, const Htuple GenParamValue, Htuple *StereoModelID);
LIntExport Herror T_get_message_queue_param(const Htuple QueueHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_message_queue_param(Hlong QueueHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_set_message_queue_param(const Htuple QueueHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_message_queue_param(Hlong QueueHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_dequeue_message(const Htuple QueueHandle, const Htuple GenParamName, const Htuple GenParamValue, Htuple *MessageHandle);
LIntExport Herror dequeue_message(Hlong QueueHandle, const char *GenParamName, const char *GenParamValue, Hlong *MessageHandle);
LIntExport Herror T_enqueue_message(const Htuple QueueHandle, const Htuple MessageHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror enqueue_message(Hlong QueueHandle, Hlong MessageHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_clear_message_queue(const Htuple QueueHandle);
LIntExport Herror clear_message_queue(Hlong QueueHandle);
LIntExport Herror T_create_message_queue(Htuple *QueueHandle);
LIntExport Herror create_message_queue(Hlong *QueueHandle);
LIntExport Herror T_get_message_param(const Htuple MessageHandle, const Htuple GenParamName, const Htuple Key, Htuple *GenParamValue);
LIntExport Herror get_message_param(Hlong MessageHandle, const char *GenParamName, const char *Key, char *GenParamValue);
LIntExport Herror T_set_message_param(const Htuple MessageHandle, const Htuple GenParamName, const Htuple Key, const Htuple GenParamValue);
LIntExport Herror set_message_param(Hlong MessageHandle, const char *GenParamName, const char *Key, const char *GenParamValue);
LIntExport Herror T_get_message_obj(Hobject *ObjectData, const Htuple MessageHandle, const Htuple Key);
LIntExport Herror get_message_obj(Hobject *ObjectData, Hlong MessageHandle, const char *Key);
LIntExport Herror T_set_message_obj(const Hobject ObjectData, const Htuple MessageHandle, const Htuple Key);
LIntExport Herror set_message_obj(const Hobject ObjectData, Hlong MessageHandle, const char *Key);
LIntExport Herror T_get_message_tuple(const Htuple MessageHandle, const Htuple Key, Htuple *TupleData);
LIntExport Herror get_message_tuple(Hlong MessageHandle, const char *Key, char *TupleData);
LIntExport Herror T_set_message_tuple(const Htuple MessageHandle, const Htuple Key, const Htuple TupleData);
LIntExport Herror T_clear_message(const Htuple MessageHandle);
LIntExport Herror clear_message(Hlong MessageHandle);
LIntExport Herror T_create_message(Htuple *MessageHandle);
LIntExport Herror create_message(Hlong *MessageHandle);
LIntExport Herror T_clear_all_conditions(void);
LIntExport Herror clear_all_conditions(void);
LIntExport Herror T_clear_condition(const Htuple ConditionHandle);
LIntExport Herror clear_condition(Hlong ConditionHandle);
LIntExport Herror T_broadcast_condition(const Htuple ConditionHandle);
LIntExport Herror broadcast_condition(Hlong ConditionHandle);
LIntExport Herror T_signal_condition(const Htuple ConditionHandle);
LIntExport Herror signal_condition(Hlong ConditionHandle);
LIntExport Herror T_timed_wait_condition(const Htuple ConditionHandle, const Htuple MutexHandle, const Htuple Timeout);
LIntExport Herror timed_wait_condition(Hlong ConditionHandle, Hlong MutexHandle, Hlong Timeout);
LIntExport Herror T_wait_condition(const Htuple ConditionHandle, const Htuple MutexHandle);
LIntExport Herror wait_condition(Hlong ConditionHandle, Hlong MutexHandle);
LIntExport Herror T_create_condition(const Htuple AttribName, const Htuple AttribValue, Htuple *ConditionHandle);
LIntExport Herror create_condition(const char *AttribName, const char *AttribValue, Hlong *ConditionHandle);
LIntExport Herror T_clear_all_barriers(void);
LIntExport Herror clear_all_barriers(void);
LIntExport Herror T_clear_barrier(const Htuple BarrierHandle);
LIntExport Herror clear_barrier(Hlong BarrierHandle);
LIntExport Herror T_wait_barrier(const Htuple BarrierHandle);
LIntExport Herror wait_barrier(Hlong BarrierHandle);
LIntExport Herror T_create_barrier(const Htuple AttribName, const Htuple AttribValue, const Htuple TeamSize, Htuple *BarrierHandle);
LIntExport Herror create_barrier(const char *AttribName, const char *AttribValue, Hlong TeamSize, Hlong *BarrierHandle);
LIntExport Herror T_clear_all_events(void);
LIntExport Herror clear_all_events(void);
LIntExport Herror T_clear_event(const Htuple EventHandle);
LIntExport Herror clear_event(Hlong EventHandle);
LIntExport Herror T_signal_event(const Htuple EventHandle);
LIntExport Herror signal_event(Hlong EventHandle);
LIntExport Herror T_try_wait_event(const Htuple EventHandle, Htuple *Busy);
LIntExport Herror try_wait_event(Hlong EventHandle, Hlong *Busy);
LIntExport Herror T_wait_event(const Htuple EventHandle);
LIntExport Herror wait_event(Hlong EventHandle);
LIntExport Herror T_create_event(const Htuple AttribName, const Htuple AttribValue, Htuple *EventHandle);
LIntExport Herror create_event(const char *AttribName, const char *AttribValue, Hlong *EventHandle);
LIntExport Herror T_clear_all_mutexes(void);
LIntExport Herror clear_all_mutexes(void);
LIntExport Herror T_clear_mutex(const Htuple MutexHandle);
LIntExport Herror clear_mutex(Hlong MutexHandle);
LIntExport Herror T_unlock_mutex(const Htuple MutexHandle);
LIntExport Herror unlock_mutex(Hlong MutexHandle);
LIntExport Herror T_try_lock_mutex(const Htuple MutexHandle, Htuple *Busy);
LIntExport Herror try_lock_mutex(Hlong MutexHandle, Hlong *Busy);
LIntExport Herror T_lock_mutex(const Htuple MutexHandle);
LIntExport Herror lock_mutex(Hlong MutexHandle);
LIntExport Herror T_create_mutex(const Htuple AttribName, const Htuple AttribValue, Htuple *MutexHandle);
LIntExport Herror create_mutex(const char *AttribName, const char *AttribValue, Hlong *MutexHandle);
LIntExport Herror T_get_threading_attrib(const Htuple ThreadingHandle, Htuple *ThreadingClass, Htuple *AttribName, Htuple *AttribValue);
LIntExport Herror T_load_par_knowledge(const Htuple FileName);
LIntExport Herror load_par_knowledge(const char *FileName);
LIntExport Herror T_store_par_knowledge(const Htuple FileName);
LIntExport Herror store_par_knowledge(const char *FileName);
LIntExport Herror T_check_par_hw_potential(const Htuple AllInpPars);
LIntExport Herror check_par_hw_potential(Hlong AllInpPars);
LIntExport Herror T_set_aop_info(const Htuple OperatorName, const Htuple IndexName, const Htuple IndexValue, const Htuple InfoName, const Htuple InfoValue);
LIntExport Herror set_aop_info(const char *OperatorName, const char *IndexName, const char *IndexValue, const char *InfoName, Hlong InfoValue);
LIntExport Herror T_get_aop_info(const Htuple OperatorName, const Htuple IndexName, const Htuple IndexValue, const Htuple InfoName, Htuple *InfoValue);
LIntExport Herror T_query_aop_info(const Htuple OperatorName, const Htuple IndexName, const Htuple IndexValue, Htuple *Name, Htuple *Value);
LIntExport Herror T_optimize_aop(const Htuple OperatorName, const Htuple IconicType, const Htuple FileName, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror optimize_aop(const char *OperatorName, const char *IconicType, const char *FileName, const char *ParamName, const char *ParamValue);
LIntExport Herror T_write_aop_knowledge(const Htuple FileName, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror write_aop_knowledge(const char *FileName, const char *ParamName, const char *ParamValue);
LIntExport Herror T_read_aop_knowledge(const Htuple FileName, const Htuple ParamName, const Htuple ParamValue, Htuple *Attributes, Htuple *OperatorNames);
LIntExport Herror T_sensor_kalman(const Htuple Dimension, const Htuple MeasurementIn, Htuple *MeasurementOut);
LIntExport Herror sensor_kalman(Hlong Dimension, double MeasurementIn, double *MeasurementOut);
LIntExport Herror T_test_obj_def(const Hobject Object, Htuple *IsDefined);
LIntExport Herror test_obj_def(const Hobject Object, Hlong *IsDefined);
LIntExport Herror T_test_access(const Hobject Object, Hobject *Dummy, const Htuple NumReadChord, const Htuple NumCopyObj, const Htuple Write_chord);
LIntExport Herror test_access(const Hobject Object, Hobject *Dummy, Hlong NumReadChord, Hlong NumCopyObj, Hlong Write_chord);
LIntExport Herror T_obj_diff(const Hobject Objects, const Hobject ObjectsSub, Hobject *ObjectsDiff);
LIntExport Herror obj_diff(const Hobject Objects, const Hobject ObjectsSub, Hobject *ObjectsDiff);
LIntExport Herror T_set_grayval(const Hobject Image, const Htuple Row, const Htuple Column, const Htuple Grayval);
LIntExport Herror set_grayval(const Hobject Image, Hlong Row, Hlong Column, double Grayval);
LIntExport Herror T_paint_xld(const Hobject XLD, const Hobject Image, Hobject *ImageResult, const Htuple Grayval);
LIntExport Herror paint_xld(const Hobject XLD, const Hobject Image, Hobject *ImageResult, double Grayval);
LIntExport Herror T_paint_region(const Hobject Region, const Hobject Image, Hobject *ImageResult, const Htuple Grayval, const Htuple Type);
LIntExport Herror paint_region(const Hobject Region, const Hobject Image, Hobject *ImageResult, double Grayval, const char *Type);
LIntExport Herror T_overpaint_region(const Hobject Image, const Hobject Region, const Htuple Grayval, const Htuple Type);
LIntExport Herror overpaint_region(const Hobject Image, const Hobject Region, double Grayval, const char *Type);
LIntExport Herror T_gen_image_proto(const Hobject Image, Hobject *ImageCleared, const Htuple Grayval);
LIntExport Herror gen_image_proto(const Hobject Image, Hobject *ImageCleared, double Grayval);
LIntExport Herror T_paint_gray(const Hobject ImageSource, const Hobject ImageDestination, Hobject *MixedImage);
LIntExport Herror paint_gray(const Hobject ImageSource, const Hobject ImageDestination, Hobject *MixedImage);
LIntExport Herror T_overpaint_gray(const Hobject ImageDestination, const Hobject ImageSource);
LIntExport Herror overpaint_gray(const Hobject ImageDestination, const Hobject ImageSource);
LIntExport Herror T_integer_to_obj(Hobject *Objects, const Htuple SurrogateTuple);
LIntExport Herror integer_to_obj(Hobject *Objects, Hlong SurrogateTuple);
LIntExport Herror T_obj_to_integer(const Hobject Objects, const Htuple Index, const Htuple Number, Htuple *SurrogateTuple);
LIntExport Herror obj_to_integer(const Hobject Objects, Hlong Index, Hlong Number, Hlong *SurrogateTuple);
LIntExport Herror T_copy_obj(const Hobject Objects, Hobject *ObjectsSelected, const Htuple Index, const Htuple NumObj);
LIntExport Herror copy_obj(const Hobject Objects, Hobject *ObjectsSelected, Hlong Index, Hlong NumObj);
LIntExport Herror T_concat_obj(const Hobject Objects1, const Hobject Objects2, Hobject *ObjectsConcat);
LIntExport Herror concat_obj(const Hobject Objects1, const Hobject Objects2, Hobject *ObjectsConcat);
LIntExport Herror T_clear_obj(const Hobject Objects);
LIntExport Herror clear_obj(const Hobject Objects);
LIntExport Herror T_copy_image(const Hobject Image, Hobject *DupImage);
LIntExport Herror copy_image(const Hobject Image, Hobject *DupImage);
LIntExport Herror T_select_obj(const Hobject Objects, Hobject *ObjectSelected, const Htuple Index);
LIntExport Herror select_obj(const Hobject Objects, Hobject *ObjectSelected, Hlong Index);
LIntExport Herror T_compare_obj(const Hobject Objects1, const Hobject Objects2, const Htuple Epsilon, Htuple *IsEqual);
LIntExport Herror compare_obj(const Hobject Objects1, const Hobject Objects2, double Epsilon, Hlong *IsEqual);
LIntExport Herror T_test_subset_region(const Hobject Region1, const Hobject Region2, Htuple *IsSubset);
LIntExport Herror test_subset_region(const Hobject Region1, const Hobject Region2, Hlong *IsSubset);
LIntExport Herror T_test_equal_region(const Hobject Regions1, const Hobject Regions2, Htuple *IsEqual);
LIntExport Herror test_equal_region(const Hobject Regions1, const Hobject Regions2, Hlong *IsEqual);
LIntExport Herror T_test_equal_obj(const Hobject Objects1, const Hobject Objects2, Htuple *IsEqual);
LIntExport Herror test_equal_obj(const Hobject Objects1, const Hobject Objects2, Hlong *IsEqual);
LIntExport Herror T_count_obj(const Hobject Objects, Htuple *Number);
LIntExport Herror count_obj(const Hobject Objects, Hlong *Number);
LIntExport Herror T_get_channel_info(const Hobject Object, const Htuple Request, const Htuple Channel, Htuple *Information);
LIntExport Herror get_channel_info(const Hobject Object, const char *Request, Hlong Channel, char *Information);
LIntExport Herror T_get_obj_class(const Hobject Object, Htuple *Class);
LIntExport Herror get_obj_class(const Hobject Object, char *Class);
LIntExport Herror T_gen_image_interleaved(Hobject *ImageRGB, const Htuple PixelPointer, const Htuple ColorFormat, const Htuple OriginalWidth, const Htuple OriginalHeight, const Htuple Alignment, const Htuple Type, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple StartRow, const Htuple StartColumn, const Htuple BitsPerChannel, const Htuple BitShift);
LIntExport Herror gen_image_interleaved(Hobject *ImageRGB, Hlong PixelPointer, const char *ColorFormat, Hlong OriginalWidth, Hlong OriginalHeight, Hlong Alignment, const char *Type, Hlong ImageWidth, Hlong ImageHeight, Hlong StartRow, Hlong StartColumn, Hlong BitsPerChannel, Hlong BitShift);
LIntExport Herror T_gen_region_polygon_xld(const Hobject Polygon, Hobject *Region, const Htuple Mode);
LIntExport Herror gen_region_polygon_xld(const Hobject Polygon, Hobject *Region, const char *Mode);
LIntExport Herror T_gen_region_contour_xld(const Hobject Contour, Hobject *Region, const Htuple Mode);
LIntExport Herror gen_region_contour_xld(const Hobject Contour, Hobject *Region, const char *Mode);
LIntExport Herror T_gen_region_polygon_filled(Hobject *Region, const Htuple Rows, const Htuple Columns);
LIntExport Herror T_gen_region_polygon(Hobject *Region, const Htuple Rows, const Htuple Columns);
LIntExport Herror T_gen_region_points(Hobject *Region, const Htuple Rows, const Htuple Columns);
LIntExport Herror gen_region_points(Hobject *Region, Hlong Rows, Hlong Columns);
LIntExport Herror T_gen_region_runs(Hobject *Region, const Htuple Row, const Htuple ColumnBegin, const Htuple ColumnEnd);
LIntExport Herror gen_region_runs(Hobject *Region, Hlong Row, Hlong ColumnBegin, Hlong ColumnEnd);
LIntExport Herror T_gen_rectangle2(Hobject *Rectangle, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2);
LIntExport Herror gen_rectangle2(Hobject *Rectangle, double Row, double Column, double Phi, double Length1, double Length2);
LIntExport Herror T_gen_rectangle1(Hobject *Rectangle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror gen_rectangle1(Hobject *Rectangle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror T_gen_random_region(Hobject *RegionRandom, const Htuple Width, const Htuple Height);
LIntExport Herror gen_random_region(Hobject *RegionRandom, Hlong Width, Hlong Height);
LIntExport Herror T_gen_image3(Hobject *ImageRGB, const Htuple Type, const Htuple Width, const Htuple Height, const Htuple PixelPointerRed, const Htuple PixelPointerGreen, const Htuple PixelPointerBlue);
LIntExport Herror gen_image3(Hobject *ImageRGB, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointerRed, Hlong PixelPointerGreen, Hlong PixelPointerBlue);
LIntExport Herror T_gen_image1(Hobject *Image, const Htuple Type, const Htuple Width, const Htuple Height, const Htuple PixelPointer);
LIntExport Herror gen_image1(Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointer);
LIntExport Herror T_gen_image_const(Hobject *Image, const Htuple Type, const Htuple Width, const Htuple Height);
LIntExport Herror gen_image_const(Hobject *Image, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror T_gen_ellipse_sector(Hobject *EllipseSector, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, const Htuple StartAngle, const Htuple EndAngle);
LIntExport Herror gen_ellipse_sector(Hobject *EllipseSector, double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle);
LIntExport Herror T_gen_ellipse(Hobject *Ellipse, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2);
LIntExport Herror gen_ellipse(Hobject *Ellipse, double Row, double Column, double Phi, double Radius1, double Radius2);
LIntExport Herror T_gen_circle_sector(Hobject *CircleSector, const Htuple Row, const Htuple Column, const Htuple Radius, const Htuple StartAngle, const Htuple EndAngle);
LIntExport Herror gen_circle_sector(Hobject *CircleSector, double Row, double Column, double Radius, double StartAngle, double EndAngle);
LIntExport Herror T_gen_circle(Hobject *Circle, const Htuple Row, const Htuple Column, const Htuple Radius);
LIntExport Herror gen_circle(Hobject *Circle, double Row, double Column, double Radius);
LIntExport Herror T_gen_checker_region(Hobject *RegionChecker, const Htuple WidthRegion, const Htuple HeightRegion, const Htuple WidthPattern, const Htuple HeightPattern);
LIntExport Herror gen_checker_region(Hobject *RegionChecker, Hlong WidthRegion, Hlong HeightRegion, Hlong WidthPattern, Hlong HeightPattern);
LIntExport Herror T_gen_grid_region(Hobject *RegionGrid, const Htuple RowSteps, const Htuple ColumnSteps, const Htuple Type, const Htuple Width, const Htuple Height);
LIntExport Herror gen_grid_region(Hobject *RegionGrid, Hlong RowSteps, Hlong ColumnSteps, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror T_gen_random_regions(Hobject *Regions, const Htuple Type, const Htuple WidthMin, const Htuple WidthMax, const Htuple HeightMin, const Htuple HeightMax, const Htuple PhiMin, const Htuple PhiMax, const Htuple NumRegions, const Htuple Width, const Htuple Height);
LIntExport Herror gen_random_regions(Hobject *Regions, const char *Type, double WidthMin, double WidthMax, double HeightMin, double HeightMax, double PhiMin, double PhiMax, Hlong NumRegions, Hlong Width, Hlong Height);
LIntExport Herror T_gen_region_hline(Hobject *Regions, const Htuple Orientation, const Htuple Distance);
LIntExport Herror gen_region_hline(Hobject *Regions, double Orientation, double Distance);
LIntExport Herror T_gen_region_line(Hobject *RegionLines, const Htuple BeginRow, const Htuple BeginCol, const Htuple EndRow, const Htuple EndCol);
LIntExport Herror gen_region_line(Hobject *RegionLines, Hlong BeginRow, Hlong BeginCol, Hlong EndRow, Hlong EndCol);
LIntExport Herror T_gen_empty_obj(Hobject *EmptyObject);
LIntExport Herror gen_empty_obj(Hobject *EmptyObject);
LIntExport Herror T_gen_empty_region(Hobject *EmptyRegion);
LIntExport Herror gen_empty_region(Hobject *EmptyRegion);
LIntExport Herror T_gen_image_gray_ramp(Hobject *ImageGrayRamp, const Htuple Alpha, const Htuple Beta, const Htuple Mean, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror gen_image_gray_ramp(Hobject *ImageGrayRamp, double Alpha, double Beta, double Mean, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror T_gen_image3_extern(Hobject *Image, const Htuple Type, const Htuple Width, const Htuple Height, const Htuple PointerRed, const Htuple PointerGreen, const Htuple PointerBlue, const Htuple ClearProc);
LIntExport Herror gen_image3_extern(Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PointerRed, Hlong PointerGreen, Hlong PointerBlue, Hlong ClearProc);
LIntExport Herror T_gen_image1_extern(Hobject *Image, const Htuple Type, const Htuple Width, const Htuple Height, const Htuple PixelPointer, const Htuple ClearProc);
LIntExport Herror gen_image1_extern(Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointer, Hlong ClearProc);
LIntExport Herror T_gen_image1_rect(Hobject *Image, const Htuple PixelPointer, const Htuple Width, const Htuple Height, const Htuple VerticalPitch, const Htuple HorizontalBitPitch, const Htuple BitsPerPixel, const Htuple DoCopy, const Htuple ClearProc);
LIntExport Herror gen_image1_rect(Hobject *Image, Hlong PixelPointer, Hlong Width, Hlong Height, Hlong VerticalPitch, Hlong HorizontalBitPitch, Hlong BitsPerPixel, const char *DoCopy, Hlong ClearProc);
LIntExport Herror T_get_image_pointer1_rect(const Hobject Image, Htuple *PixelPointer, Htuple *Width, Htuple *Height, Htuple *VerticalPitch, Htuple *HorizontalBitPitch, Htuple *BitsPerPixel);
LIntExport Herror get_image_pointer1_rect(const Hobject Image, Hlong *PixelPointer, Hlong *Width, Hlong *Height, Hlong *VerticalPitch, Hlong *HorizontalBitPitch, Hlong *BitsPerPixel);
LIntExport Herror T_get_image_pointer3(const Hobject ImageRGB, Htuple *PointerRed, Htuple *PointerGreen, Htuple *PointerBlue, Htuple *Type, Htuple *Width, Htuple *Height);
LIntExport Herror get_image_pointer3(const Hobject ImageRGB, Hlong *PointerRed, Hlong *PointerGreen, Hlong *PointerBlue, char *Type, Hlong *Width, Hlong *Height);
LIntExport Herror T_get_image_pointer1(const Hobject Image, Htuple *Pointer, Htuple *Type, Htuple *Width, Htuple *Height);
LIntExport Herror get_image_pointer1(const Hobject Image, Hlong *Pointer, char *Type, Hlong *Width, Hlong *Height);
LIntExport Herror T_get_image_type(const Hobject Image, Htuple *Type);
LIntExport Herror get_image_type(const Hobject Image, char *Type);
LIntExport Herror T_get_image_size(const Hobject Image, Htuple *Width, Htuple *Height);
LIntExport Herror get_image_size(const Hobject Image, Hlong *Width, Hlong *Height);
LIntExport Herror T_get_image_time(const Hobject Image, Htuple *MSecond, Htuple *Second, Htuple *Minute, Htuple *Hour, Htuple *Day, Htuple *YDay, Htuple *Month, Htuple *Year);
LIntExport Herror get_image_time(const Hobject Image, Hlong *MSecond, Hlong *Second, Hlong *Minute, Hlong *Hour, Hlong *Day, Hlong *YDay, Hlong *Month, Hlong *Year);
LIntExport Herror T_get_grayval_interpolated(const Hobject Image, const Htuple Row, const Htuple Column, const Htuple Interpolation, Htuple *Grayval);
LIntExport Herror get_grayval_interpolated(const Hobject Image, double Row, double Column, const char *Interpolation, double *Grayval);
LIntExport Herror T_get_grayval(const Hobject Image, const Htuple Row, const Htuple Column, Htuple *Grayval);
LIntExport Herror get_grayval(const Hobject Image, Hlong Row, Hlong Column, double *Grayval);
LIntExport Herror T_get_region_thickness(const Hobject Region, Htuple *Thickness, Htuple *Histogramm);
LIntExport Herror T_get_region_polygon(const Hobject Region, const Htuple Tolerance, Htuple *Rows, Htuple *Columns);
LIntExport Herror T_get_region_points(const Hobject Region, Htuple *Rows, Htuple *Columns);
LIntExport Herror T_get_region_contour(const Hobject Region, Htuple *Rows, Htuple *Columns);
LIntExport Herror T_get_region_runs(const Hobject Region, Htuple *Row, Htuple *ColumnBegin, Htuple *ColumnEnd);
LIntExport Herror T_get_region_chain(const Hobject Region, Htuple *Row, Htuple *Column, Htuple *Chain);
LIntExport Herror T_get_region_convex(const Hobject Region, Htuple *Rows, Htuple *Columns);
LIntExport Herror T_do_ocv_simple(const Hobject Pattern, const Htuple OCVHandle, const Htuple PatternName, const Htuple AdaptPos, const Htuple AdaptSize, const Htuple AdaptAngle, const Htuple AdaptGray, const Htuple Threshold, Htuple *Quality);
LIntExport Herror do_ocv_simple(const Hobject Pattern, Hlong OCVHandle, const char *PatternName, const char *AdaptPos, const char *AdaptSize, const char *AdaptAngle, const char *AdaptGray, double Threshold, double *Quality);
LIntExport Herror T_traind_ocv_proj(const Hobject Pattern, const Htuple OCVHandle, const Htuple Name, const Htuple Mode);
LIntExport Herror traind_ocv_proj(const Hobject Pattern, Hlong OCVHandle, const char *Name, const char *Mode);
LIntExport Herror T_deserialize_ocv(const Htuple SerializedItemHandle, Htuple *OCVHandle);
LIntExport Herror deserialize_ocv(Hlong SerializedItemHandle, Hlong *OCVHandle);
LIntExport Herror T_serialize_ocv(const Htuple OCVHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ocv(Hlong OCVHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_ocv(const Htuple FileName, Htuple *OCVHandle);
LIntExport Herror read_ocv(const char *FileName, Hlong *OCVHandle);
LIntExport Herror T_write_ocv(const Htuple OCVHandle, const Htuple FileName);
LIntExport Herror write_ocv(Hlong OCVHandle, const char *FileName);
LIntExport Herror T_close_all_ocvs(void);
LIntExport Herror close_all_ocvs(void);
LIntExport Herror T_close_ocv(const Htuple OCVHandle);
LIntExport Herror close_ocv(Hlong OCVHandle);
LIntExport Herror T_create_ocv_proj(const Htuple PatternNames, Htuple *OCVHandle);
LIntExport Herror create_ocv_proj(const char *PatternNames, Hlong *OCVHandle);
LIntExport Herror T_do_ocr_word_knn(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple Expression, const Htuple NumAlternatives, const Htuple NumCorrections, Htuple *Class, Htuple *Confidence, Htuple *Word, Htuple *Score);
LIntExport Herror do_ocr_word_knn(const Hobject Character, const Hobject Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror T_deserialize_ocr_class_knn(const Htuple SerializedItemHandle, Htuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_knn(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror T_serialize_ocr_class_knn(const Htuple OCRHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_knn(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_ocr_class_knn(const Htuple FileName, Htuple *OCRHandle);
LIntExport Herror read_ocr_class_knn(const char *FileName, Hlong *OCRHandle);
LIntExport Herror T_write_ocr_class_knn(const Htuple OCRHandle, const Htuple FileName);
LIntExport Herror write_ocr_class_knn(Hlong OCRHandle, const char *FileName);
LIntExport Herror T_clear_all_ocr_class_knn(void);
LIntExport Herror clear_all_ocr_class_knn(void);
LIntExport Herror T_clear_ocr_class_knn(const Htuple OCRHandle);
LIntExport Herror clear_ocr_class_knn(Hlong OCRHandle);
LIntExport Herror T_create_ocr_class_knn(const Htuple WidthCharacter, const Htuple HeightCharacter, const Htuple Interpolation, const Htuple Features, const Htuple Characters, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle);
LIntExport Herror T_trainf_ocr_class_knn(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_get_features_ocr_class_knn(const Hobject Character, const Htuple OCRHandle, const Htuple Transform, Htuple *Features);
LIntExport Herror T_get_params_ocr_class_knn(const Htuple OCRHandle, Htuple *WidthCharacter, Htuple *HeightCharacter, Htuple *Interpolation, Htuple *Features, Htuple *Characters, Htuple *Preprocessing, Htuple *NumTrees);
LIntExport Herror T_do_ocr_multi_class_knn(const Hobject Character, const Hobject Image, const Htuple OCRHandle, Htuple *Class, Htuple *Confidence);
LIntExport Herror do_ocr_multi_class_knn(const Hobject Character, const Hobject Image, Hlong OCRHandle, char *Class, double *Confidence);
LIntExport Herror T_do_ocr_single_class_knn(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple NumClasses, const Htuple NumNeighbors, Htuple *Class, Htuple *Confidence);
LIntExport Herror T_select_feature_set_trainf_knn(const Htuple TrainingFile, const Htuple FeatureList, const Htuple SelectionMethod, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle, Htuple *FeatureSet, Htuple *Score);
LIntExport Herror T_select_feature_set_trainf_mlp_protected(const Htuple TrainingFile, const Htuple Password, const Htuple FeatureList, const Htuple SelectionMethod, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle, Htuple *FeatureSet, Htuple *Score);
LIntExport Herror T_select_feature_set_trainf_mlp(const Htuple TrainingFile, const Htuple FeatureList, const Htuple SelectionMethod, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle, Htuple *FeatureSet, Htuple *Score);
LIntExport Herror T_select_feature_set_trainf_svm_protected(const Htuple TrainingFile, const Htuple Password, const Htuple FeatureList, const Htuple SelectionMethod, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle, Htuple *FeatureSet, Htuple *Score);
LIntExport Herror T_select_feature_set_trainf_svm(const Htuple TrainingFile, const Htuple FeatureList, const Htuple SelectionMethod, const Htuple Width, const Htuple Height, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *OCRHandle, Htuple *FeatureSet, Htuple *Score);
LIntExport Herror T_clear_all_lexica(void);
LIntExport Herror clear_all_lexica(void);
LIntExport Herror T_clear_lexicon(const Htuple LexiconHandle);
LIntExport Herror clear_lexicon(Hlong LexiconHandle);
LIntExport Herror T_suggest_lexicon(const Htuple LexiconHandle, const Htuple Word, Htuple *Suggestion, Htuple *NumCorrections);
LIntExport Herror suggest_lexicon(Hlong LexiconHandle, const char *Word, char *Suggestion, Hlong *NumCorrections);
LIntExport Herror T_lookup_lexicon(const Htuple LexiconHandle, const Htuple Word, Htuple *Found);
LIntExport Herror lookup_lexicon(Hlong LexiconHandle, const char *Word, Hlong *Found);
LIntExport Herror T_inspect_lexicon(const Htuple LexiconHandle, Htuple *Words);
LIntExport Herror inspect_lexicon(Hlong LexiconHandle, char *Words);
LIntExport Herror T_import_lexicon(const Htuple Name, const Htuple FileName, Htuple *LexiconHandle);
LIntExport Herror import_lexicon(const char *Name, const char *FileName, Hlong *LexiconHandle);
LIntExport Herror T_create_lexicon(const Htuple Name, const Htuple Words, Htuple *LexiconHandle);
LIntExport Herror T_clear_all_ocr_class_svm(void);
LIntExport Herror clear_all_ocr_class_svm(void);
LIntExport Herror T_clear_ocr_class_svm(const Htuple OCRHandle);
LIntExport Herror clear_ocr_class_svm(Hlong OCRHandle);
LIntExport Herror T_deserialize_ocr_class_svm(const Htuple SerializedItemHandle, Htuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_svm(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror T_serialize_ocr_class_svm(const Htuple OCRHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_svm(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_ocr_class_svm(const Htuple FileName, Htuple *OCRHandle);
LIntExport Herror read_ocr_class_svm(const char *FileName, Hlong *OCRHandle);
LIntExport Herror T_write_ocr_class_svm(const Htuple OCRHandle, const Htuple FileName);
LIntExport Herror write_ocr_class_svm(Hlong OCRHandle, const char *FileName);
LIntExport Herror T_get_features_ocr_class_svm(const Hobject Character, const Htuple OCRHandle, const Htuple Transform, Htuple *Features);
LIntExport Herror T_do_ocr_word_svm(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple Expression, const Htuple NumAlternatives, const Htuple NumCorrections, Htuple *Class, Htuple *Word, Htuple *Score);
LIntExport Herror do_ocr_word_svm(const Hobject Character, const Hobject Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, char *Word, double *Score);
LIntExport Herror T_do_ocr_multi_class_svm(const Hobject Character, const Hobject Image, const Htuple OCRHandle, Htuple *Class);
LIntExport Herror do_ocr_multi_class_svm(const Hobject Character, const Hobject Image, Hlong OCRHandle, char *Class);
LIntExport Herror T_do_ocr_single_class_svm(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple Num, Htuple *Class);
LIntExport Herror T_reduce_ocr_class_svm(const Htuple OCRHandle, const Htuple Method, const Htuple MinRemainingSV, const Htuple MaxError, Htuple *OCRHandleReduced);
LIntExport Herror reduce_ocr_class_svm(Hlong OCRHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Hlong *OCRHandleReduced);
LIntExport Herror T_trainf_ocr_class_svm_protected(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple Password, const Htuple Epsilon, const Htuple TrainMode);
LIntExport Herror trainf_ocr_class_svm_protected(Hlong OCRHandle, const char *TrainingFile, const char *Password, double Epsilon, const char *TrainMode);
LIntExport Herror T_trainf_ocr_class_svm(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple Epsilon, const Htuple TrainMode);
LIntExport Herror trainf_ocr_class_svm(Hlong OCRHandle, const char *TrainingFile, double Epsilon, const char *TrainMode);
LIntExport Herror T_get_prep_info_ocr_class_svm(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple Preprocessing, Htuple *InformationCont, Htuple *CumInformationCont);
LIntExport Herror T_get_support_vector_num_ocr_class_svm(const Htuple OCRHandle, Htuple *NumSupportVectors, Htuple *NumSVPerSVM);
LIntExport Herror T_get_support_vector_ocr_class_svm(const Htuple OCRHandle, const Htuple IndexSupportVector, Htuple *Index);
LIntExport Herror T_get_params_ocr_class_svm(const Htuple OCRHandle, Htuple *WidthCharacter, Htuple *HeightCharacter, Htuple *Interpolation, Htuple *Features, Htuple *Characters, Htuple *KernelType, Htuple *KernelParam, Htuple *Nu, Htuple *Mode, Htuple *Preprocessing, Htuple *NumComponents);
LIntExport Herror T_create_ocr_class_svm(const Htuple WidthCharacter, const Htuple HeightCharacter, const Htuple Interpolation, const Htuple Features, const Htuple Characters, const Htuple KernelType, const Htuple KernelParam, const Htuple Nu, const Htuple Mode, const Htuple Preprocessing, const Htuple NumComponents, Htuple *OCRHandle);
LIntExport Herror T_clear_all_ocr_class_mlp(void);
LIntExport Herror clear_all_ocr_class_mlp(void);
LIntExport Herror T_clear_ocr_class_mlp(const Htuple OCRHandle);
LIntExport Herror clear_ocr_class_mlp(Hlong OCRHandle);
LIntExport Herror T_deserialize_ocr_class_mlp(const Htuple SerializedItemHandle, Htuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_mlp(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror T_serialize_ocr_class_mlp(const Htuple OCRHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_mlp(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_ocr_class_mlp(const Htuple FileName, Htuple *OCRHandle);
LIntExport Herror read_ocr_class_mlp(const char *FileName, Hlong *OCRHandle);
LIntExport Herror T_write_ocr_class_mlp(const Htuple OCRHandle, const Htuple FileName);
LIntExport Herror write_ocr_class_mlp(Hlong OCRHandle, const char *FileName);
LIntExport Herror T_get_features_ocr_class_mlp(const Hobject Character, const Htuple OCRHandle, const Htuple Transform, Htuple *Features);
LIntExport Herror T_do_ocr_word_mlp(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple Expression, const Htuple NumAlternatives, const Htuple NumCorrections, Htuple *Class, Htuple *Confidence, Htuple *Word, Htuple *Score);
LIntExport Herror do_ocr_word_mlp(const Hobject Character, const Hobject Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror T_do_ocr_multi_class_mlp(const Hobject Character, const Hobject Image, const Htuple OCRHandle, Htuple *Class, Htuple *Confidence);
LIntExport Herror do_ocr_multi_class_mlp(const Hobject Character, const Hobject Image, Hlong OCRHandle, char *Class, double *Confidence);
LIntExport Herror T_do_ocr_single_class_mlp(const Hobject Character, const Hobject Image, const Htuple OCRHandle, const Htuple Num, Htuple *Class, Htuple *Confidence);
LIntExport Herror T_trainf_ocr_class_mlp_protected(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple Password, const Htuple MaxIterations, const Htuple WeightTolerance, const Htuple ErrorTolerance, Htuple *Error, Htuple *ErrorLog);
LIntExport Herror T_trainf_ocr_class_mlp(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple MaxIterations, const Htuple WeightTolerance, const Htuple ErrorTolerance, Htuple *Error, Htuple *ErrorLog);
LIntExport Herror T_get_prep_info_ocr_class_mlp(const Htuple OCRHandle, const Htuple TrainingFile, const Htuple Preprocessing, Htuple *InformationCont, Htuple *CumInformationCont);
LIntExport Herror T_get_rejection_params_ocr_class_mlp(const Htuple OCRHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_rejection_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_set_rejection_params_ocr_class_mlp(const Htuple OCRHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_rejection_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_get_regularization_params_ocr_class_mlp(const Htuple OCRHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_regularization_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, double *GenParamValue);
LIntExport Herror T_set_regularization_params_ocr_class_mlp(const Htuple OCRHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_regularization_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, double GenParamValue);
LIntExport Herror T_get_params_ocr_class_mlp(const Htuple OCRHandle, Htuple *WidthCharacter, Htuple *HeightCharacter, Htuple *Interpolation, Htuple *Features, Htuple *Characters, Htuple *NumHidden, Htuple *Preprocessing, Htuple *NumComponents);
LIntExport Herror T_create_ocr_class_mlp(const Htuple WidthCharacter, const Htuple HeightCharacter, const Htuple Interpolation, const Htuple Features, const Htuple Characters, const Htuple NumHidden, const Htuple Preprocessing, const Htuple NumComponents, const Htuple RandSeed, Htuple *OCRHandle);
LIntExport Herror T_serialize_ocr(const Htuple OcrHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ocr(Hlong OcrHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_ocr(const Htuple SerializedItemHandle, Htuple *OcrHandle);
LIntExport Herror deserialize_ocr(Hlong SerializedItemHandle, Hlong *OcrHandle);
LIntExport Herror T_write_ocr(const Htuple OcrHandle, const Htuple FileName);
LIntExport Herror write_ocr(Hlong OcrHandle, const char *FileName);
LIntExport Herror T_read_ocr(const Htuple FileName, Htuple *OcrHandle);
LIntExport Herror read_ocr(const char *FileName, Hlong *OcrHandle);
LIntExport Herror T_do_ocr_single(const Hobject Character, const Hobject Image, const Htuple OcrHandle, Htuple *Classes, Htuple *Confidences);
LIntExport Herror T_do_ocr_multi(const Hobject Character, const Hobject Image, const Htuple OcrHandle, Htuple *Class, Htuple *Confidence);
LIntExport Herror do_ocr_multi(const Hobject Character, const Hobject Image, Hlong OcrHandle, char *Class, double *Confidence);
LIntExport Herror T_info_ocr_class_box(const Htuple OcrHandle, Htuple *WidthPattern, Htuple *HeightPattern, Htuple *Interpolation, Htuple *WidthMaxChar, Htuple *HeightMaxChar, Htuple *Features, Htuple *Characters);
LIntExport Herror T_create_ocr_class_box(const Htuple WidthPattern, const Htuple HeightPattern, const Htuple Interpolation, const Htuple Features, const Htuple Character, Htuple *OcrHandle);
LIntExport Herror T_traind_ocr_class_box(const Hobject Character, const Hobject Image, const Htuple OcrHandle, const Htuple Class, Htuple *AvgConfidence);
LIntExport Herror traind_ocr_class_box(const Hobject Character, const Hobject Image, Hlong OcrHandle, const char *Class, double *AvgConfidence);
LIntExport Herror T_trainf_ocr_class_box(const Htuple OcrHandle, const Htuple TrainingFile, Htuple *AvgConfidence);
LIntExport Herror trainf_ocr_class_box(Hlong OcrHandle, const char *TrainingFile, double *AvgConfidence);
LIntExport Herror T_protect_ocr_trainf(const Htuple TrainingFile, const Htuple Password, const Htuple TrainingFileProtected);
LIntExport Herror protect_ocr_trainf(const char *TrainingFile, const char *Password, const char *TrainingFileProtected);
LIntExport Herror T_write_ocr_trainf(const Hobject Character, const Hobject Image, const Htuple Class, const Htuple TrainingFile);
LIntExport Herror write_ocr_trainf(const Hobject Character, const Hobject Image, const char *Class, const char *TrainingFile);
LIntExport Herror T_ocr_change_char(const Htuple OcrHandle, const Htuple Character);
LIntExport Herror T_close_ocr(const Htuple OcrHandle);
LIntExport Herror close_ocr(Hlong OcrHandle);
LIntExport Herror T_sort_region(const Hobject Regions, Hobject *SortedRegions, const Htuple SortMode, const Htuple Order, const Htuple RowOrCol);
LIntExport Herror sort_region(const Hobject Regions, Hobject *SortedRegions, const char *SortMode, const char *Order, const char *RowOrCol);
LIntExport Herror T_close_all_ocrs(void);
LIntExport Herror close_all_ocrs(void);
LIntExport Herror T_testd_ocr_class_box(const Hobject Character, const Hobject Image, const Htuple OcrHandle, const Htuple Class, Htuple *Confidence);
LIntExport Herror testd_ocr_class_box(const Hobject Character, const Hobject Image, Hlong OcrHandle, const char *Class, double *Confidence);
LIntExport Herror T_crop_domain_rel(const Hobject Image, Hobject *ImagePart, const Htuple Top, const Htuple Left, const Htuple Bottom, const Htuple Right);
LIntExport Herror crop_domain_rel(const Hobject Image, Hobject *ImagePart, Hlong Top, Hlong Left, Hlong Bottom, Hlong Right);
LIntExport Herror T_ocr_get_features(const Hobject Character, const Htuple OcrHandle, Htuple *FeatureVector);
LIntExport Herror T_concat_ocr_trainf(const Htuple SingleFiles, const Htuple ComposedFile);
LIntExport Herror concat_ocr_trainf(const char *SingleFiles, const char *ComposedFile);
LIntExport Herror T_write_ocr_trainf_image(const Hobject Character, const Htuple Class, const Htuple TrainingFile);
LIntExport Herror write_ocr_trainf_image(const Hobject Character, const char *Class, const char *TrainingFile);
LIntExport Herror T_append_ocr_trainf(const Hobject Character, const Hobject Image, const Htuple Class, const Htuple TrainingFile);
LIntExport Herror append_ocr_trainf(const Hobject Character, const Hobject Image, const char *Class, const char *TrainingFile);
LIntExport Herror T_read_ocr_trainf_names_protected(const Htuple TrainingFile, const Htuple Password, Htuple *CharacterNames, Htuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names_protected(const char *TrainingFile, const char *Password, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror T_read_ocr_trainf_names(const Htuple TrainingFile, Htuple *CharacterNames, Htuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names(const char *TrainingFile, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror T_read_ocr_trainf_select(Hobject *Characters, const Htuple TrainingFile, const Htuple SearchNames, Htuple *FoundNames);
LIntExport Herror read_ocr_trainf_select(Hobject *Characters, const char *TrainingFile, const char *SearchNames, char *FoundNames);
LIntExport Herror T_read_ocr_trainf(Hobject *Characters, const Htuple TrainingFile, Htuple *CharacterNames);
LIntExport Herror T_pruning(const Hobject Region, Hobject *RegionPrune, const Htuple Length);
LIntExport Herror pruning(const Hobject Region, Hobject *RegionPrune, Hlong Length);
LIntExport Herror T_boundary(const Hobject Region, Hobject *RegionBorder, const Htuple BoundaryType);
LIntExport Herror boundary(const Hobject Region, Hobject *RegionBorder, const char *BoundaryType);
LIntExport Herror T_fitting(const Hobject Region, const Hobject StructElements, Hobject *RegionFitted);
LIntExport Herror fitting(const Hobject Region, const Hobject StructElements, Hobject *RegionFitted);
LIntExport Herror T_gen_struct_elements(Hobject *StructElements, const Htuple Type, const Htuple Row, const Htuple Column);
LIntExport Herror gen_struct_elements(Hobject *StructElements, const char *Type, Hlong Row, Hlong Column);
LIntExport Herror T_transpose_region(const Hobject Region, Hobject *Transposed, const Htuple Row, const Htuple Column);
LIntExport Herror transpose_region(const Hobject Region, Hobject *Transposed, Hlong Row, Hlong Column);
LIntExport Herror T_thinning_seq(const Hobject Region, Hobject *RegionThin, const Htuple GolayElement, const Htuple Iterations);
LIntExport Herror thinning_seq(const Hobject Region, Hobject *RegionThin, const char *GolayElement, Hlong Iterations);
LIntExport Herror T_thinning_golay(const Hobject Region, Hobject *RegionThin, const Htuple GolayElement, const Htuple Rotation);
LIntExport Herror thinning_golay(const Hobject Region, Hobject *RegionThin, const char *GolayElement, Hlong Rotation);
LIntExport Herror T_thinning(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionThin, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror thinning(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionThin, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_thickening_seq(const Hobject Region, Hobject *RegionThick, const Htuple GolayElement, const Htuple Iterations);
LIntExport Herror thickening_seq(const Hobject Region, Hobject *RegionThick, const char *GolayElement, Hlong Iterations);
LIntExport Herror T_thickening_golay(const Hobject Region, Hobject *RegionThick, const Htuple GolayElement, const Htuple Rotation);
LIntExport Herror thickening_golay(const Hobject Region, Hobject *RegionThick, const char *GolayElement, Hlong Rotation);
LIntExport Herror T_thickening(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionThick, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror thickening(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionThick, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_hit_or_miss_seq(const Hobject Region, Hobject *RegionHitMiss, const Htuple GolayElement);
LIntExport Herror hit_or_miss_seq(const Hobject Region, Hobject *RegionHitMiss, const char *GolayElement);
LIntExport Herror T_hit_or_miss_golay(const Hobject Region, Hobject *RegionHitMiss, const Htuple GolayElement, const Htuple Rotation);
LIntExport Herror hit_or_miss_golay(const Hobject Region, Hobject *RegionHitMiss, const char *GolayElement, Hlong Rotation);
LIntExport Herror T_hit_or_miss(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionHitMiss, const Htuple Row, const Htuple Column);
LIntExport Herror hit_or_miss(const Hobject Region, const Hobject StructElement1, const Hobject StructElement2, Hobject *RegionHitMiss, Hlong Row, Hlong Column);
LIntExport Herror T_golay_elements(Hobject *StructElement1, Hobject *StructElement2, const Htuple GolayElement, const Htuple Rotation, const Htuple Row, const Htuple Column);
LIntExport Herror golay_elements(Hobject *StructElement1, Hobject *StructElement2, const char *GolayElement, Hlong Rotation, Hlong Row, Hlong Column);
LIntExport Herror T_morph_skiz(const Hobject Region, Hobject *RegionSkiz, const Htuple Iterations1, const Htuple Iterations2);
LIntExport Herror morph_skiz(const Hobject Region, Hobject *RegionSkiz, Hlong Iterations1, Hlong Iterations2);
LIntExport Herror T_morph_skeleton(const Hobject Region, Hobject *RegionSkeleton);
LIntExport Herror morph_skeleton(const Hobject Region, Hobject *RegionSkeleton);
LIntExport Herror T_morph_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionMorphHat);
LIntExport Herror morph_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionMorphHat);
LIntExport Herror T_bottom_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionBottomHat);
LIntExport Herror bottom_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionBottomHat);
LIntExport Herror T_top_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionTopHat);
LIntExport Herror top_hat(const Hobject Region, const Hobject StructElement, Hobject *RegionTopHat);
LIntExport Herror T_minkowski_sub2(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkSub, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror minkowski_sub2(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkSub, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_minkowski_sub1(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkSub, const Htuple Iterations);
LIntExport Herror minkowski_sub1(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkSub, Hlong Iterations);
LIntExport Herror T_minkowski_add2(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkAdd, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror minkowski_add2(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkAdd, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_minkowski_add1(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkAdd, const Htuple Iterations);
LIntExport Herror minkowski_add1(const Hobject Region, const Hobject StructElement, Hobject *RegionMinkAdd, Hlong Iterations);
LIntExport Herror T_closing_rectangle1(const Hobject Region, Hobject *RegionClosing, const Htuple Width, const Htuple Height);
LIntExport Herror closing_rectangle1(const Hobject Region, Hobject *RegionClosing, Hlong Width, Hlong Height);
LIntExport Herror T_closing_golay(const Hobject Region, Hobject *RegionClosing, const Htuple GolayElement, const Htuple Rotation);
LIntExport Herror closing_golay(const Hobject Region, Hobject *RegionClosing, const char *GolayElement, Hlong Rotation);
LIntExport Herror T_closing_circle(const Hobject Region, Hobject *RegionClosing, const Htuple Radius);
LIntExport Herror closing_circle(const Hobject Region, Hobject *RegionClosing, double Radius);
LIntExport Herror T_closing(const Hobject Region, const Hobject StructElement, Hobject *RegionClosing);
LIntExport Herror closing(const Hobject Region, const Hobject StructElement, Hobject *RegionClosing);
LIntExport Herror T_opening_seg(const Hobject Region, const Hobject StructElement, Hobject *RegionOpening);
LIntExport Herror opening_seg(const Hobject Region, const Hobject StructElement, Hobject *RegionOpening);
LIntExport Herror T_opening_golay(const Hobject Region, Hobject *RegionOpening, const Htuple GolayElement, const Htuple Rotation);
LIntExport Herror opening_golay(const Hobject Region, Hobject *RegionOpening, const char *GolayElement, Hlong Rotation);
LIntExport Herror T_opening_rectangle1(const Hobject Region, Hobject *RegionOpening, const Htuple Width, const Htuple Height);
LIntExport Herror opening_rectangle1(const Hobject Region, Hobject *RegionOpening, Hlong Width, Hlong Height);
LIntExport Herror T_opening_circle(const Hobject Region, Hobject *RegionOpening, const Htuple Radius);
LIntExport Herror opening_circle(const Hobject Region, Hobject *RegionOpening, double Radius);
LIntExport Herror T_opening(const Hobject Region, const Hobject StructElement, Hobject *RegionOpening);
LIntExport Herror opening(const Hobject Region, const Hobject StructElement, Hobject *RegionOpening);
LIntExport Herror T_erosion_seq(const Hobject Region, Hobject *RegionErosion, const Htuple GolayElement, const Htuple Iterations);
LIntExport Herror erosion_seq(const Hobject Region, Hobject *RegionErosion, const char *GolayElement, Hlong Iterations);
LIntExport Herror T_erosion_golay(const Hobject Region, Hobject *RegionErosion, const Htuple GolayElement, const Htuple Iterations, const Htuple Rotation);
LIntExport Herror erosion_golay(const Hobject Region, Hobject *RegionErosion, const char *GolayElement, Hlong Iterations, Hlong Rotation);
LIntExport Herror T_erosion_rectangle1(const Hobject Region, Hobject *RegionErosion, const Htuple Width, const Htuple Height);
LIntExport Herror erosion_rectangle1(const Hobject Region, Hobject *RegionErosion, Hlong Width, Hlong Height);
LIntExport Herror T_erosion_circle(const Hobject Region, Hobject *RegionErosion, const Htuple Radius);
LIntExport Herror erosion_circle(const Hobject Region, Hobject *RegionErosion, double Radius);
LIntExport Herror T_erosion2(const Hobject Region, const Hobject StructElement, Hobject *RegionErosion, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror erosion2(const Hobject Region, const Hobject StructElement, Hobject *RegionErosion, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_erosion1(const Hobject Region, const Hobject StructElement, Hobject *RegionErosion, const Htuple Iterations);
LIntExport Herror erosion1(const Hobject Region, const Hobject StructElement, Hobject *RegionErosion, Hlong Iterations);
LIntExport Herror T_dilation_seq(const Hobject Region, Hobject *RegionDilation, const Htuple GolayElement, const Htuple Iterations);
LIntExport Herror dilation_seq(const Hobject Region, Hobject *RegionDilation, const char *GolayElement, Hlong Iterations);
LIntExport Herror T_dilation_golay(const Hobject Region, Hobject *RegionDilation, const Htuple GolayElement, const Htuple Iterations, const Htuple Rotation);
LIntExport Herror dilation_golay(const Hobject Region, Hobject *RegionDilation, const char *GolayElement, Hlong Iterations, Hlong Rotation);
LIntExport Herror T_dilation_rectangle1(const Hobject Region, Hobject *RegionDilation, const Htuple Width, const Htuple Height);
LIntExport Herror dilation_rectangle1(const Hobject Region, Hobject *RegionDilation, Hlong Width, Hlong Height);
LIntExport Herror T_dilation_circle(const Hobject Region, Hobject *RegionDilation, const Htuple Radius);
LIntExport Herror dilation_circle(const Hobject Region, Hobject *RegionDilation, double Radius);
LIntExport Herror T_dilation2(const Hobject Region, const Hobject StructElement, Hobject *RegionDilation, const Htuple Row, const Htuple Column, const Htuple Iterations);
LIntExport Herror dilation2(const Hobject Region, const Hobject StructElement, Hobject *RegionDilation, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror T_dilation1(const Hobject Region, const Hobject StructElement, Hobject *RegionDilation, const Htuple Iterations);
LIntExport Herror dilation1(const Hobject Region, const Hobject StructElement, Hobject *RegionDilation, Hlong Iterations);
LIntExport Herror T_gray_bothat(const Hobject Image, const Hobject SE, Hobject *ImageBotHat);
LIntExport Herror gray_bothat(const Hobject Image, const Hobject SE, Hobject *ImageBotHat);
LIntExport Herror T_gray_tophat(const Hobject Image, const Hobject SE, Hobject *ImageTopHat);
LIntExport Herror gray_tophat(const Hobject Image, const Hobject SE, Hobject *ImageTopHat);
LIntExport Herror T_gray_closing(const Hobject Image, const Hobject SE, Hobject *ImageClosing);
LIntExport Herror gray_closing(const Hobject Image, const Hobject SE, Hobject *ImageClosing);
LIntExport Herror T_gray_opening(const Hobject Image, const Hobject SE, Hobject *ImageOpening);
LIntExport Herror gray_opening(const Hobject Image, const Hobject SE, Hobject *ImageOpening);
LIntExport Herror T_gray_dilation(const Hobject Image, const Hobject SE, Hobject *ImageDilation);
LIntExport Herror gray_dilation(const Hobject Image, const Hobject SE, Hobject *ImageDilation);
LIntExport Herror T_gray_erosion(const Hobject Image, const Hobject SE, Hobject *ImageErosion);
LIntExport Herror gray_erosion(const Hobject Image, const Hobject SE, Hobject *ImageErosion);
LIntExport Herror T_read_gray_se(Hobject *SE, const Htuple FileName);
LIntExport Herror read_gray_se(Hobject *SE, const char *FileName);
LIntExport Herror T_gen_disc_se(Hobject *SE, const Htuple Type, const Htuple Width, const Htuple Height, const Htuple Smax);
LIntExport Herror gen_disc_se(Hobject *SE, const char *Type, Hlong Width, Hlong Height, double Smax);
LIntExport Herror T_get_metrology_object_model_contour(Hobject *Contour, const Htuple MetrologyHandle, const Htuple Index, const Htuple Resolution);
LIntExport Herror get_metrology_object_model_contour(Hobject *Contour, Hlong MetrologyHandle, Hlong Index, double Resolution);
LIntExport Herror T_get_metrology_object_result_contour(Hobject *Contour, const Htuple MetrologyHandle, const Htuple Index, const Htuple Instance, const Htuple Resolution);
LIntExport Herror get_metrology_object_result_contour(Hobject *Contour, Hlong MetrologyHandle, Hlong Index, Hlong Instance, double Resolution);
LIntExport Herror T_align_metrology_model(const Htuple MetrologyHandle, const Htuple Row, const Htuple Column, const Htuple Angle);
LIntExport Herror align_metrology_model(Hlong MetrologyHandle, double Row, double Column, double Angle);
LIntExport Herror T_add_metrology_object_generic(const Htuple MetrologyHandle, const Htuple Shape, const Htuple ShapeParam, const Htuple MeasureLength1, const Htuple MeasureLength2, const Htuple MeasureSigma, const Htuple MeasureThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Index);
LIntExport Herror T_get_metrology_model_param(const Htuple MetrologyHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_metrology_model_param(Hlong MetrologyHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_set_metrology_model_param(const Htuple MetrologyHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_metrology_model_param(Hlong MetrologyHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_deserialize_metrology_model(const Htuple SerializedItemHandle, Htuple *MetrologyHandle);
LIntExport Herror deserialize_metrology_model(Hlong SerializedItemHandle, Hlong *MetrologyHandle);
LIntExport Herror T_serialize_metrology_model(const Htuple MetrologyHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_metrology_model(Hlong MetrologyHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_transform_metrology_object(const Htuple MetrologyHandle, const Htuple Index, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Mode);
LIntExport Herror transform_metrology_object(Hlong MetrologyHandle, const char *Index, double Row, double Column, double Phi, const char *Mode);
LIntExport Herror T_write_metrology_model(const Htuple MetrologyHandle, const Htuple FileName);
LIntExport Herror write_metrology_model(Hlong MetrologyHandle, const char *FileName);
LIntExport Herror T_read_metrology_model(const Htuple FileName, Htuple *MetrologyHandle);
LIntExport Herror read_metrology_model(const char *FileName, Hlong *MetrologyHandle);
LIntExport Herror T_copy_metrology_model(const Htuple MetrologyHandle, const Htuple Index, Htuple *CopiedMetrologyHandle);
LIntExport Herror copy_metrology_model(Hlong MetrologyHandle, const char *Index, Hlong *CopiedMetrologyHandle);
LIntExport Herror T_copy_metrology_object(const Htuple MetrologyHandle, const Htuple Index, Htuple *CopiedIndices);
LIntExport Herror copy_metrology_object(Hlong MetrologyHandle, const char *Index, Hlong *CopiedIndices);
LIntExport Herror T_get_metrology_object_num_instances(const Htuple MetrologyHandle, const Htuple Index, Htuple *NumInstances);
LIntExport Herror get_metrology_object_num_instances(Hlong MetrologyHandle, Hlong Index, double *NumInstances);
LIntExport Herror T_get_metrology_object_result(const Htuple MetrologyHandle, const Htuple Index, const Htuple Instance, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Parameter);
LIntExport Herror get_metrology_object_result(Hlong MetrologyHandle, Hlong Index, Hlong Instance, const char *GenParamName, const char *GenParamValue, double *Parameter);
LIntExport Herror T_get_metrology_object_measures(Hobject *Contours, const Htuple MetrologyHandle, const Htuple Index, const Htuple Transition, Htuple *Row, Htuple *Column);
LIntExport Herror T_apply_metrology_model(const Hobject Image, const Htuple MetrologyHandle);
LIntExport Herror apply_metrology_model(const Hobject Image, Hlong MetrologyHandle);
LIntExport Herror T_get_metrology_object_indices(const Htuple MetrologyHandle, Htuple *Indices);
LIntExport Herror get_metrology_object_indices(Hlong MetrologyHandle, Hlong *Indices);
LIntExport Herror T_reset_metrology_object_fuzzy_param(const Htuple MetrologyHandle, const Htuple Index);
LIntExport Herror reset_metrology_object_fuzzy_param(Hlong MetrologyHandle, const char *Index);
LIntExport Herror T_reset_metrology_object_param(const Htuple MetrologyHandle, const Htuple Index);
LIntExport Herror reset_metrology_object_param(Hlong MetrologyHandle, const char *Index);
LIntExport Herror T_get_metrology_object_fuzzy_param(const Htuple MetrologyHandle, const Htuple Index, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_metrology_object_fuzzy_param(Hlong MetrologyHandle, const char *Index, const char *GenParamName, double *GenParamValue);
LIntExport Herror T_get_metrology_object_param(const Htuple MetrologyHandle, const Htuple Index, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_metrology_object_param(Hlong MetrologyHandle, const char *Index, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_set_metrology_object_fuzzy_param(const Htuple MetrologyHandle, const Htuple Index, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_metrology_object_fuzzy_param(Hlong MetrologyHandle, const char *Index, const char *GenParamName, double GenParamValue);
LIntExport Herror T_set_metrology_object_param(const Htuple MetrologyHandle, const Htuple Index, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_metrology_object_param(Hlong MetrologyHandle, const char *Index, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_add_metrology_object_rectangle2_measure(const Htuple MetrologyHandle, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2, const Htuple MeasureLength1, const Htuple MeasureLength2, const Htuple MeasureSigma, const Htuple MeasureThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Index);
LIntExport Herror add_metrology_object_rectangle2_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Length1, double Length2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror T_add_metrology_object_line_measure(const Htuple MetrologyHandle, const Htuple RowBegin, const Htuple ColumnBegin, const Htuple RowEnd, const Htuple ColumnEnd, const Htuple MeasureLength1, const Htuple MeasureLength2, const Htuple MeasureSigma, const Htuple MeasureThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Index);
LIntExport Herror add_metrology_object_line_measure(Hlong MetrologyHandle, double RowBegin, double ColumnBegin, double RowEnd, double ColumnEnd, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror T_add_metrology_object_ellipse_measure(const Htuple MetrologyHandle, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, const Htuple MeasureLength1, const Htuple MeasureLength2, const Htuple MeasureSigma, const Htuple MeasureThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Index);
LIntExport Herror add_metrology_object_ellipse_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Radius1, double Radius2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror T_add_metrology_object_circle_measure(const Htuple MetrologyHandle, const Htuple Row, const Htuple Column, const Htuple Radius, const Htuple MeasureLength1, const Htuple MeasureLength2, const Htuple MeasureSigma, const Htuple MeasureThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Index);
LIntExport Herror add_metrology_object_circle_measure(Hlong MetrologyHandle, double Row, double Column, double Radius, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror T_clear_all_metrology_models(void);
LIntExport Herror clear_all_metrology_models(void);
LIntExport Herror T_clear_metrology_model(const Htuple MetrologyHandle);
LIntExport Herror clear_metrology_model(Hlong MetrologyHandle);
LIntExport Herror T_clear_metrology_object(const Htuple MetrologyHandle, const Htuple Index);
LIntExport Herror clear_metrology_object(Hlong MetrologyHandle, const char *Index);
LIntExport Herror T_set_metrology_model_image_size(const Htuple MetrologyHandle, const Htuple Width, const Htuple Height);
LIntExport Herror set_metrology_model_image_size(Hlong MetrologyHandle, Hlong Width, Hlong Height);
LIntExport Herror T_create_metrology_model(Htuple *MetrologyHandle);
LIntExport Herror create_metrology_model(Hlong *MetrologyHandle);
LIntExport Herror T_serialize_measure(const Htuple MeasureHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_measure(Hlong MeasureHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_measure(const Htuple SerializedItemHandle, Htuple *MeasureHandle);
LIntExport Herror deserialize_measure(Hlong SerializedItemHandle, Hlong *MeasureHandle);
LIntExport Herror T_write_measure(const Htuple MeasureHandle, const Htuple FileName);
LIntExport Herror write_measure(Hlong MeasureHandle, const char *FileName);
LIntExport Herror T_read_measure(const Htuple FileName, Htuple *MeasureHandle);
LIntExport Herror read_measure(const char *FileName, Hlong *MeasureHandle);
LIntExport Herror T_measure_thresh(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple Threshold, const Htuple Select, Htuple *RowThresh, Htuple *ColumnThresh, Htuple *Distance);
LIntExport Herror T_close_all_measures(void);
LIntExport Herror close_all_measures(void);
LIntExport Herror T_close_measure(const Htuple MeasureHandle);
LIntExport Herror close_measure(Hlong MeasureHandle);
LIntExport Herror T_measure_projection(const Hobject Image, const Htuple MeasureHandle, Htuple *GrayValues);
LIntExport Herror T_reset_fuzzy_measure(const Htuple MeasureHandle, const Htuple SetType);
LIntExport Herror reset_fuzzy_measure(Hlong MeasureHandle, const char *SetType);
LIntExport Herror T_set_fuzzy_measure_norm_pair(const Htuple MeasureHandle, const Htuple PairSize, const Htuple SetType, const Htuple Function);
LIntExport Herror T_set_fuzzy_measure(const Htuple MeasureHandle, const Htuple SetType, const Htuple Function);
LIntExport Herror T_fuzzy_measure_pairing(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple AmpThresh, const Htuple FuzzyThresh, const Htuple Transition, const Htuple Pairing, const Htuple NumPairs, Htuple *RowEdgeFirst, Htuple *ColumnEdgeFirst, Htuple *AmplitudeFirst, Htuple *RowEdgeSecond, Htuple *ColumnEdgeSecond, Htuple *AmplitudeSecond, Htuple *RowPairCenter, Htuple *ColumnPairCenter, Htuple *FuzzyScore, Htuple *IntraDistance);
LIntExport Herror T_fuzzy_measure_pairs(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple AmpThresh, const Htuple FuzzyThresh, const Htuple Transition, Htuple *RowEdgeFirst, Htuple *ColumnEdgeFirst, Htuple *AmplitudeFirst, Htuple *RowEdgeSecond, Htuple *ColumnEdgeSecond, Htuple *AmplitudeSecond, Htuple *RowEdgeCenter, Htuple *ColumnEdgeCenter, Htuple *FuzzyScore, Htuple *IntraDistance, Htuple *InterDistance);
LIntExport Herror T_fuzzy_measure_pos(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple AmpThresh, const Htuple FuzzyThresh, const Htuple Transition, Htuple *RowEdge, Htuple *ColumnEdge, Htuple *Amplitude, Htuple *FuzzyScore, Htuple *Distance);
LIntExport Herror T_measure_pairs(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple Threshold, const Htuple Transition, const Htuple Select, Htuple *RowEdgeFirst, Htuple *ColumnEdgeFirst, Htuple *AmplitudeFirst, Htuple *RowEdgeSecond, Htuple *ColumnEdgeSecond, Htuple *AmplitudeSecond, Htuple *IntraDistance, Htuple *InterDistance);
LIntExport Herror T_measure_pos(const Hobject Image, const Htuple MeasureHandle, const Htuple Sigma, const Htuple Threshold, const Htuple Transition, const Htuple Select, Htuple *RowEdge, Htuple *ColumnEdge, Htuple *Amplitude, Htuple *Distance);
LIntExport Herror T_translate_measure(const Htuple MeasureHandle, const Htuple Row, const Htuple Column);
LIntExport Herror translate_measure(Hlong MeasureHandle, double Row, double Column);
LIntExport Herror T_gen_measure_arc(const Htuple CenterRow, const Htuple CenterCol, const Htuple Radius, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AnnulusRadius, const Htuple Width, const Htuple Height, const Htuple Interpolation, Htuple *MeasureHandle);
LIntExport Herror gen_measure_arc(double CenterRow, double CenterCol, double Radius, double AngleStart, double AngleExtent, double AnnulusRadius, Hlong Width, Hlong Height, const char *Interpolation, Hlong *MeasureHandle);
LIntExport Herror T_gen_measure_rectangle2(const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2, const Htuple Width, const Htuple Height, const Htuple Interpolation, Htuple *MeasureHandle);
LIntExport Herror gen_measure_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Hlong Width, Hlong Height, const char *Interpolation, Hlong *MeasureHandle);
LIntExport Herror T_deserialize_matrix(const Htuple SerializedItemHandle, Htuple *MatrixID);
LIntExport Herror deserialize_matrix(Hlong SerializedItemHandle, Hlong *MatrixID);
LIntExport Herror T_serialize_matrix(const Htuple MatrixID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_matrix(Hlong MatrixID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_matrix(const Htuple FileName, Htuple *MatrixID);
LIntExport Herror read_matrix(const char *FileName, Hlong *MatrixID);
LIntExport Herror T_write_matrix(const Htuple MatrixID, const Htuple FileFormat, const Htuple FileName);
LIntExport Herror write_matrix(Hlong MatrixID, const char *FileFormat, const char *FileName);
LIntExport Herror T_orthogonal_decompose_matrix(const Htuple MatrixID, const Htuple DecompositionType, const Htuple OutputMatricesType, const Htuple ComputeOrthogonal, Htuple *MatrixOrthogonalID, Htuple *MatrixTriangularID);
LIntExport Herror orthogonal_decompose_matrix(Hlong MatrixID, const char *DecompositionType, const char *OutputMatricesType, const char *ComputeOrthogonal, Hlong *MatrixOrthogonalID, Hlong *MatrixTriangularID);
LIntExport Herror T_decompose_matrix(const Htuple MatrixID, const Htuple MatrixType, Htuple *Matrix1ID, Htuple *Matrix2ID);
LIntExport Herror decompose_matrix(Hlong MatrixID, const char *MatrixType, Hlong *Matrix1ID, Hlong *Matrix2ID);
LIntExport Herror T_svd_matrix(const Htuple MatrixID, const Htuple SVDType, const Htuple ComputeSingularVectors, Htuple *MatrixUID, Htuple *MatrixSID, Htuple *MatrixVID);
LIntExport Herror svd_matrix(Hlong MatrixID, const char *SVDType, const char *ComputeSingularVectors, Hlong *MatrixUID, Hlong *MatrixSID, Hlong *MatrixVID);
LIntExport Herror T_generalized_eigenvalues_general_matrix(const Htuple MatrixAID, const Htuple MatrixBID, const Htuple ComputeEigenvectors, Htuple *EigenvaluesRealID, Htuple *EigenvaluesImagID, Htuple *EigenvectorsRealID, Htuple *EigenvectorsImagID);
LIntExport Herror generalized_eigenvalues_general_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror T_generalized_eigenvalues_symmetric_matrix(const Htuple MatrixAID, const Htuple MatrixBID, const Htuple ComputeEigenvectors, Htuple *EigenvaluesID, Htuple *EigenvectorsID);
LIntExport Herror generalized_eigenvalues_symmetric_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror T_eigenvalues_general_matrix(const Htuple MatrixID, const Htuple ComputeEigenvectors, Htuple *EigenvaluesRealID, Htuple *EigenvaluesImagID, Htuple *EigenvectorsRealID, Htuple *EigenvectorsImagID);
LIntExport Herror eigenvalues_general_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror T_eigenvalues_symmetric_matrix(const Htuple MatrixID, const Htuple ComputeEigenvectors, Htuple *EigenvaluesID, Htuple *EigenvectorsID);
LIntExport Herror eigenvalues_symmetric_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror T_solve_matrix(const Htuple MatrixLHSID, const Htuple MatrixLHSType, const Htuple Epsilon, const Htuple MatrixRHSID, Htuple *MatrixResultID);
LIntExport Herror solve_matrix(Hlong MatrixLHSID, const char *MatrixLHSType, double Epsilon, Hlong MatrixRHSID, Hlong *MatrixResultID);
LIntExport Herror T_determinant_matrix(const Htuple MatrixID, const Htuple MatrixType, Htuple *Value);
LIntExport Herror determinant_matrix(Hlong MatrixID, const char *MatrixType, double *Value);
LIntExport Herror T_invert_matrix_mod(const Htuple MatrixID, const Htuple MatrixType, const Htuple Epsilon);
LIntExport Herror invert_matrix_mod(Hlong MatrixID, const char *MatrixType, double Epsilon);
LIntExport Herror T_invert_matrix(const Htuple MatrixID, const Htuple MatrixType, const Htuple Epsilon, Htuple *MatrixInvID);
LIntExport Herror invert_matrix(Hlong MatrixID, const char *MatrixType, double Epsilon, Hlong *MatrixInvID);
LIntExport Herror T_transpose_matrix_mod(const Htuple MatrixID);
LIntExport Herror transpose_matrix_mod(Hlong MatrixID);
LIntExport Herror T_transpose_matrix(const Htuple MatrixID, Htuple *MatrixTransposedID);
LIntExport Herror transpose_matrix(Hlong MatrixID, Hlong *MatrixTransposedID);
LIntExport Herror T_max_matrix(const Htuple MatrixID, const Htuple MaxType, Htuple *MatrixMaxID);
LIntExport Herror max_matrix(Hlong MatrixID, const char *MaxType, Hlong *MatrixMaxID);
LIntExport Herror T_min_matrix(const Htuple MatrixID, const Htuple MinType, Htuple *MatrixMinID);
LIntExport Herror min_matrix(Hlong MatrixID, const char *MinType, Hlong *MatrixMinID);
LIntExport Herror T_pow_matrix_mod(const Htuple MatrixID, const Htuple MatrixType, const Htuple Power);
LIntExport Herror pow_matrix_mod(Hlong MatrixID, const char *MatrixType, double Power);
LIntExport Herror T_pow_matrix(const Htuple MatrixID, const Htuple MatrixType, const Htuple Power, Htuple *MatrixPowID);
LIntExport Herror pow_matrix(Hlong MatrixID, const char *MatrixType, double Power, Hlong *MatrixPowID);
LIntExport Herror T_pow_element_matrix_mod(const Htuple MatrixID, const Htuple MatrixExpID);
LIntExport Herror pow_element_matrix_mod(Hlong MatrixID, Hlong MatrixExpID);
LIntExport Herror T_pow_element_matrix(const Htuple MatrixID, const Htuple MatrixExpID, Htuple *MatrixPowID);
LIntExport Herror pow_element_matrix(Hlong MatrixID, Hlong MatrixExpID, Hlong *MatrixPowID);
LIntExport Herror T_pow_scalar_element_matrix_mod(const Htuple MatrixID, const Htuple Power);
LIntExport Herror pow_scalar_element_matrix_mod(Hlong MatrixID, double Power);
LIntExport Herror T_pow_scalar_element_matrix(const Htuple MatrixID, const Htuple Power, Htuple *MatrixPowID);
LIntExport Herror pow_scalar_element_matrix(Hlong MatrixID, double Power, Hlong *MatrixPowID);
LIntExport Herror T_sqrt_matrix_mod(const Htuple MatrixID);
LIntExport Herror sqrt_matrix_mod(Hlong MatrixID);
LIntExport Herror T_sqrt_matrix(const Htuple MatrixID, Htuple *MatrixSqrtID);
LIntExport Herror sqrt_matrix(Hlong MatrixID, Hlong *MatrixSqrtID);
LIntExport Herror T_abs_matrix_mod(const Htuple MatrixID);
LIntExport Herror abs_matrix_mod(Hlong MatrixID);
LIntExport Herror T_abs_matrix(const Htuple MatrixID, Htuple *MatrixAbsID);
LIntExport Herror abs_matrix(Hlong MatrixID, Hlong *MatrixAbsID);
LIntExport Herror T_norm_matrix(const Htuple MatrixID, const Htuple NormType, Htuple *Value);
LIntExport Herror norm_matrix(Hlong MatrixID, const char *NormType, double *Value);
LIntExport Herror T_mean_matrix(const Htuple MatrixID, const Htuple MeanType, Htuple *MatrixMeanID);
LIntExport Herror mean_matrix(Hlong MatrixID, const char *MeanType, Hlong *MatrixMeanID);
LIntExport Herror T_sum_matrix(const Htuple MatrixID, const Htuple SumType, Htuple *MatrixSumID);
LIntExport Herror sum_matrix(Hlong MatrixID, const char *SumType, Hlong *MatrixSumID);
LIntExport Herror T_div_element_matrix_mod(const Htuple MatrixAID, const Htuple MatrixBID);
LIntExport Herror div_element_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror T_div_element_matrix(const Htuple MatrixAID, const Htuple MatrixBID, Htuple *MatrixDivID);
LIntExport Herror div_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixDivID);
LIntExport Herror T_mult_element_matrix_mod(const Htuple MatrixAID, const Htuple MatrixBID);
LIntExport Herror mult_element_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror T_mult_element_matrix(const Htuple MatrixAID, const Htuple MatrixBID, Htuple *MatrixMultID);
LIntExport Herror mult_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixMultID);
LIntExport Herror T_scale_matrix_mod(const Htuple MatrixID, const Htuple Factor);
LIntExport Herror scale_matrix_mod(Hlong MatrixID, double Factor);
LIntExport Herror T_scale_matrix(const Htuple MatrixID, const Htuple Factor, Htuple *MatrixScaledID);
LIntExport Herror scale_matrix(Hlong MatrixID, double Factor, Hlong *MatrixScaledID);
LIntExport Herror T_sub_matrix_mod(const Htuple MatrixAID, const Htuple MatrixBID);
LIntExport Herror sub_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror T_sub_matrix(const Htuple MatrixAID, const Htuple MatrixBID, Htuple *MatrixSubID);
LIntExport Herror sub_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixSubID);
LIntExport Herror T_add_matrix_mod(const Htuple MatrixAID, const Htuple MatrixBID);
LIntExport Herror add_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror T_add_matrix(const Htuple MatrixAID, const Htuple MatrixBID, Htuple *MatrixSumID);
LIntExport Herror add_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixSumID);
LIntExport Herror T_mult_matrix_mod(const Htuple MatrixAID, const Htuple MatrixBID, const Htuple MultType);
LIntExport Herror mult_matrix_mod(Hlong MatrixAID, Hlong MatrixBID, const char *MultType);
LIntExport Herror T_mult_matrix(const Htuple MatrixAID, const Htuple MatrixBID, const Htuple MultType, Htuple *MatrixMultID);
LIntExport Herror mult_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *MultType, Hlong *MatrixMultID);
LIntExport Herror T_get_size_matrix(const Htuple MatrixID, Htuple *Rows, Htuple *Columns);
LIntExport Herror get_size_matrix(Hlong MatrixID, Hlong *Rows, Hlong *Columns);
LIntExport Herror T_repeat_matrix(const Htuple MatrixID, const Htuple Rows, const Htuple Columns, Htuple *MatrixRepeatedID);
LIntExport Herror repeat_matrix(Hlong MatrixID, Hlong Rows, Hlong Columns, Hlong *MatrixRepeatedID);
LIntExport Herror T_copy_matrix(const Htuple MatrixID, Htuple *MatrixCopyID);
LIntExport Herror copy_matrix(Hlong MatrixID, Hlong *MatrixCopyID);
LIntExport Herror T_set_diagonal_matrix(const Htuple MatrixID, const Htuple VectorID, const Htuple Diagonal);
LIntExport Herror set_diagonal_matrix(Hlong MatrixID, Hlong VectorID, Hlong Diagonal);
LIntExport Herror T_get_diagonal_matrix(const Htuple MatrixID, const Htuple Diagonal, Htuple *VectorID);
LIntExport Herror get_diagonal_matrix(Hlong MatrixID, Hlong Diagonal, Hlong *VectorID);
LIntExport Herror T_set_sub_matrix(const Htuple MatrixID, const Htuple MatrixSubID, const Htuple Row, const Htuple Column);
LIntExport Herror set_sub_matrix(Hlong MatrixID, Hlong MatrixSubID, Hlong Row, Hlong Column);
LIntExport Herror T_get_sub_matrix(const Htuple MatrixID, const Htuple Row, const Htuple Column, const Htuple RowsSub, const Htuple ColumnsSub, Htuple *MatrixSubID);
LIntExport Herror get_sub_matrix(Hlong MatrixID, Hlong Row, Hlong Column, Hlong RowsSub, Hlong ColumnsSub, Hlong *MatrixSubID);
LIntExport Herror T_set_full_matrix(const Htuple MatrixID, const Htuple Values);
LIntExport Herror set_full_matrix(Hlong MatrixID, double Values);
LIntExport Herror T_get_full_matrix(const Htuple MatrixID, Htuple *Values);
LIntExport Herror get_full_matrix(Hlong MatrixID, double *Values);
LIntExport Herror T_set_value_matrix(const Htuple MatrixID, const Htuple Row, const Htuple Column, const Htuple Value);
LIntExport Herror set_value_matrix(Hlong MatrixID, Hlong Row, Hlong Column, double Value);
LIntExport Herror T_get_value_matrix(const Htuple MatrixID, const Htuple Row, const Htuple Column, Htuple *Value);
LIntExport Herror get_value_matrix(Hlong MatrixID, Hlong Row, Hlong Column, double *Value);
LIntExport Herror T_clear_all_matrices(void);
LIntExport Herror clear_all_matrices(void);
LIntExport Herror T_clear_matrix(const Htuple MatrixID);
LIntExport Herror clear_matrix(Hlong MatrixID);
LIntExport Herror T_create_matrix(const Htuple Rows, const Htuple Columns, const Htuple Value, Htuple *MatrixID);
LIntExport Herror create_matrix(Hlong Rows, Hlong Columns, double Value, Hlong *MatrixID);
LIntExport Herror T_clear_all_sample_identifiers(void);
LIntExport Herror clear_all_sample_identifiers(void);
LIntExport Herror T_clear_sample_identifier(const Htuple SampleIdentifier);
LIntExport Herror clear_sample_identifier(Hlong SampleIdentifier);
LIntExport Herror T_deserialize_sample_identifier(const Htuple SerializedItemHandle, Htuple *SampleIdentifier);
LIntExport Herror deserialize_sample_identifier(Hlong SerializedItemHandle, Hlong *SampleIdentifier);
LIntExport Herror T_read_sample_identifier(const Htuple FileName, Htuple *SampleIdentifier);
LIntExport Herror read_sample_identifier(const char *FileName, Hlong *SampleIdentifier);
LIntExport Herror T_serialize_sample_identifier(const Htuple SampleIdentifier, Htuple *SerializedItemHandle);
LIntExport Herror serialize_sample_identifier(Hlong SampleIdentifier, Hlong *SerializedItemHandle);
LIntExport Herror T_write_sample_identifier(const Htuple SampleIdentifier, const Htuple FileName);
LIntExport Herror write_sample_identifier(Hlong SampleIdentifier, const char *FileName);
LIntExport Herror T_apply_sample_identifier(const Hobject Image, const Htuple SampleIdentifier, const Htuple NumResults, const Htuple RatingThreshold, const Htuple GenParamName, const Htuple GenParamValue, Htuple *ObjectIdx, Htuple *Rating);
LIntExport Herror T_get_sample_identifier_param(const Htuple SampleIdentifier, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_sample_identifier_param(Hlong SampleIdentifier, const char *ParamName, double *ParamValue);
LIntExport Herror T_set_sample_identifier_param(const Htuple SampleIdentifier, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_sample_identifier_param(Hlong SampleIdentifier, const char *ParamName, double ParamValue);
LIntExport Herror T_get_sample_identifier_object_info(const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple InfoName, Htuple *InfoValue);
LIntExport Herror get_sample_identifier_object_info(Hlong SampleIdentifier, Hlong ObjectIdx, const char *InfoName, Hlong *InfoValue);
LIntExport Herror T_set_sample_identifier_object_info(const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple InfoName, const Htuple InfoValue);
LIntExport Herror set_sample_identifier_object_info(Hlong SampleIdentifier, Hlong ObjectIdx, const char *InfoName, const char *InfoValue);
LIntExport Herror T_remove_sample_identifier_training_data(const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple ObjectSampleIdx);
LIntExport Herror remove_sample_identifier_training_data(Hlong SampleIdentifier, Hlong ObjectIdx, Hlong ObjectSampleIdx);
LIntExport Herror T_remove_sample_identifier_preparation_data(const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple ObjectSampleIdx);
LIntExport Herror remove_sample_identifier_preparation_data(Hlong SampleIdentifier, Hlong ObjectIdx, Hlong ObjectSampleIdx);
LIntExport Herror T_train_sample_identifier(const Htuple SampleIdentifier, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror T_add_sample_identifier_training_data(const Hobject SampleImage, const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple GenParamName, const Htuple GenParamValue, Htuple *ObjectSampleIdx);
LIntExport Herror T_prepare_sample_identifier(const Htuple SampleIdentifier, const Htuple RemovePreparationData, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_add_sample_identifier_preparation_data(const Hobject SampleImage, const Htuple SampleIdentifier, const Htuple ObjectIdx, const Htuple GenParamName, const Htuple GenParamValue, Htuple *ObjectSampleIdx);
LIntExport Herror T_create_sample_identifier(const Htuple ParamName, const Htuple ParamValue, Htuple *SampleIdentifier);
LIntExport Herror T_deserialize_shape_model(const Htuple SerializedItemHandle, Htuple *ModelID);
LIntExport Herror deserialize_shape_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror T_read_shape_model(const Htuple FileName, Htuple *ModelID);
LIntExport Herror read_shape_model(const char *FileName, Hlong *ModelID);
LIntExport Herror T_serialize_shape_model(const Htuple ModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_write_shape_model(const Htuple ModelID, const Htuple FileName);
LIntExport Herror write_shape_model(Hlong ModelID, const char *FileName);
LIntExport Herror T_clear_all_shape_models(void);
LIntExport Herror clear_all_shape_models(void);
LIntExport Herror T_clear_shape_model(const Htuple ModelID);
LIntExport Herror clear_shape_model(Hlong ModelID);
LIntExport Herror T_get_shape_model_contours(Hobject *ModelContours, const Htuple ModelID, const Htuple Level);
LIntExport Herror get_shape_model_contours(Hobject *ModelContours, Hlong ModelID, Hlong Level);
LIntExport Herror T_determine_shape_model_params(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, const Htuple Parameters, Htuple *ParameterName, Htuple *ParameterValue);
LIntExport Herror T_get_shape_model_params(const Htuple ModelID, Htuple *NumLevels, Htuple *AngleStart, Htuple *AngleExtent, Htuple *AngleStep, Htuple *ScaleMin, Htuple *ScaleMax, Htuple *ScaleStep, Htuple *Metric, Htuple *MinContrast);
LIntExport Herror get_shape_model_params(Hlong ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, double *ScaleMin, double *ScaleMax, double *ScaleStep, char *Metric, Hlong *MinContrast);
LIntExport Herror T_get_shape_model_origin(const Htuple ModelID, Htuple *Row, Htuple *Column);
LIntExport Herror get_shape_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror T_set_shape_model_origin(const Htuple ModelID, const Htuple Row, const Htuple Column);
LIntExport Herror set_shape_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror T_find_aniso_shape_models(const Hobject Image, const Htuple ModelIDs, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *ScaleR, Htuple *ScaleC, Htuple *Score, Htuple *Model);
LIntExport Herror T_find_scaled_shape_models(const Hobject Image, const Htuple ModelIDs, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Scale, Htuple *Score, Htuple *Model);
LIntExport Herror T_find_shape_models(const Hobject Image, const Htuple ModelIDs, const Htuple AngleStart, const Htuple AngleExtent, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Score, Htuple *Model);
LIntExport Herror T_find_aniso_shape_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *ScaleR, Htuple *ScaleC, Htuple *Score);
LIntExport Herror T_find_scaled_shape_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Scale, Htuple *Score);
LIntExport Herror T_find_shape_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, const Htuple Greediness, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Score);
LIntExport Herror T_set_shape_model_metric(const Hobject Image, const Htuple ModelID, const Htuple HomMat2D, const Htuple Metric);
LIntExport Herror T_set_shape_model_param(const Htuple ModelID, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_create_aniso_shape_model_xld(const Hobject Contours, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_aniso_shape_model_xld(const Hobject Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_create_scaled_shape_model_xld(const Hobject Contours, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple ScaleStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_scaled_shape_model_xld(const Hobject Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_create_shape_model_xld(const Hobject Contours, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_shape_model_xld(const Hobject Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_create_aniso_shape_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_aniso_shape_model(const Hobject Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_create_scaled_shape_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple ScaleStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_scaled_shape_model(const Hobject Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_create_shape_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, Htuple *ModelID);
LIntExport Herror create_shape_model(const Hobject Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror T_inspect_shape_model(const Hobject Image, Hobject *ModelImages, Hobject *ModelRegions, const Htuple NumLevels, const Htuple Contrast);
LIntExport Herror inspect_shape_model(const Hobject Image, Hobject *ModelImages, Hobject *ModelRegions, Hlong NumLevels, Hlong Contrast);
LIntExport Herror T_clear_all_descriptor_models(void);
LIntExport Herror clear_all_descriptor_models(void);
LIntExport Herror T_clear_descriptor_model(const Htuple ModelID);
LIntExport Herror clear_descriptor_model(Hlong ModelID);
LIntExport Herror T_deserialize_descriptor_model(const Htuple SerializedItemHandle, Htuple *ModelID);
LIntExport Herror deserialize_descriptor_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror T_serialize_descriptor_model(const Htuple ModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_descriptor_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_descriptor_model(const Htuple FileName, Htuple *ModelID);
LIntExport Herror read_descriptor_model(const char *FileName, Hlong *ModelID);
LIntExport Herror T_write_descriptor_model(const Htuple ModelID, const Htuple FileName);
LIntExport Herror write_descriptor_model(Hlong ModelID, const char *FileName);
LIntExport Herror T_find_calib_descriptor_model(const Hobject Image, const Htuple ModelID, const Htuple DetectorParamName, const Htuple DetectorParamValue, const Htuple DescriptorParamName, const Htuple DescriptorParamValue, const Htuple MinScore, const Htuple NumMatches, const Htuple CamParam, const Htuple ScoreType, Htuple *Pose, Htuple *Score);
LIntExport Herror T_find_uncalib_descriptor_model(const Hobject Image, const Htuple ModelID, const Htuple DetectorParamName, const Htuple DetectorParamValue, const Htuple DescriptorParamName, const Htuple DescriptorParamValue, const Htuple MinScore, const Htuple NumMatches, const Htuple ScoreType, Htuple *HomMat2D, Htuple *Score);
LIntExport Herror T_get_descriptor_model_points(const Htuple ModelID, const Htuple Set, const Htuple Subset, Htuple *Row, Htuple *Column);
LIntExport Herror T_get_descriptor_model_params(const Htuple ModelID, Htuple *DetectorType, Htuple *DetectorParamName, Htuple *DetectorParamValue, Htuple *DescriptorParamName, Htuple *DescriptorParamValue);
LIntExport Herror T_create_calib_descriptor_model(const Hobject Template, const Htuple CamParam, const Htuple ReferencePose, const Htuple DetectorType, const Htuple DetectorParamName, const Htuple DetectorParamValue, const Htuple DescriptorParamName, const Htuple DescriptorParamValue, const Htuple Seed, Htuple *ModelID);
LIntExport Herror T_create_uncalib_descriptor_model(const Hobject Template, const Htuple DetectorType, const Htuple DetectorParamName, const Htuple DetectorParamValue, const Htuple DescriptorParamName, const Htuple DescriptorParamValue, const Htuple Seed, Htuple *ModelID);
LIntExport Herror T_get_descriptor_model_results(const Htuple ModelID, const Htuple ObjectID, const Htuple ResultNames, Htuple *Results);
LIntExport Herror get_descriptor_model_results(Hlong ModelID, Hlong ObjectID, const char *ResultNames, char *Results);
LIntExport Herror T_get_descriptor_model_origin(const Htuple ModelID, Htuple *Row, Htuple *Column);
LIntExport Herror get_descriptor_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror T_set_descriptor_model_origin(const Htuple ModelID, const Htuple Row, const Htuple Column);
LIntExport Herror set_descriptor_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror T_get_deformable_model_origin(const Htuple ModelID, Htuple *Row, Htuple *Column);
LIntExport Herror get_deformable_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror T_set_deformable_model_origin(const Htuple ModelID, const Htuple Row, const Htuple Column);
LIntExport Herror set_deformable_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror T_set_deformable_model_param(const Htuple ModelID, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_get_deformable_model_params(const Htuple ModelID, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror get_deformable_model_params(Hlong ModelID, const char *GenParamNames, char *GenParamValues);
LIntExport Herror T_get_deformable_model_contours(Hobject *ModelContours, const Htuple ModelID, const Htuple Level);
LIntExport Herror get_deformable_model_contours(Hobject *ModelContours, Hlong ModelID, Hlong Level);
LIntExport Herror T_determine_deformable_model_params(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleMin, const Htuple ScaleMax, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, const Htuple Parameters, Htuple *ParameterName, Htuple *ParameterValue);
LIntExport Herror T_deserialize_deformable_model(const Htuple SerializedItemHandle, Htuple *ModelID);
LIntExport Herror deserialize_deformable_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror T_serialize_deformable_model(const Htuple ModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_deformable_model(const Htuple FileName, Htuple *ModelID);
LIntExport Herror read_deformable_model(const char *FileName, Hlong *ModelID);
LIntExport Herror T_write_deformable_model(const Htuple ModelID, const Htuple FileName);
LIntExport Herror write_deformable_model(Hlong ModelID, const char *FileName);
LIntExport Herror T_clear_all_deformable_models(void);
LIntExport Herror clear_all_deformable_models(void);
LIntExport Herror T_clear_deformable_model(const Htuple ModelID);
LIntExport Herror clear_deformable_model(Hlong ModelID);
LIntExport Herror T_find_local_deformable_model(const Hobject Image, Hobject *ImageRectified, Hobject *VectorField, Hobject *DeformedContours, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple NumLevels, const Htuple Greediness, const Htuple ResultType, const Htuple ParamName, const Htuple ParamValue, Htuple *Score, Htuple *Row, Htuple *Column);
LIntExport Herror T_find_planar_calib_deformable_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple NumLevels, const Htuple Greediness, const Htuple ParamName, const Htuple ParamValue, Htuple *Pose, Htuple *CovPose, Htuple *Score);
LIntExport Herror T_find_planar_uncalib_deformable_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple NumLevels, const Htuple Greediness, const Htuple ParamName, const Htuple ParamValue, Htuple *HomMat2D, Htuple *Score);
LIntExport Herror T_set_local_deformable_model_metric(const Hobject Image, const Hobject VectorField, const Htuple ModelID, const Htuple Metric);
LIntExport Herror set_local_deformable_model_metric(const Hobject Image, const Hobject VectorField, Hlong ModelID, const char *Metric);
LIntExport Herror T_set_planar_calib_deformable_model_metric(const Hobject Image, const Htuple ModelID, const Htuple Pose, const Htuple Metric);
LIntExport Herror T_set_planar_uncalib_deformable_model_metric(const Hobject Image, const Htuple ModelID, const Htuple HomMat2D, const Htuple Metric);
LIntExport Herror T_create_local_deformable_model_xld(const Hobject Contours, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_create_planar_calib_deformable_model_xld(const Hobject Contours, const Htuple CamParam, const Htuple ReferencePose, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_create_planar_uncalib_deformable_model_xld(const Hobject Contours, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_create_local_deformable_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_create_planar_calib_deformable_model(const Hobject Template, const Htuple CamParam, const Htuple ReferencePose, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_create_planar_uncalib_deformable_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple ScaleRMin, const Htuple ScaleRMax, const Htuple ScaleRStep, const Htuple ScaleCMin, const Htuple ScaleCMax, const Htuple ScaleCStep, const Htuple Optimization, const Htuple Metric, const Htuple Contrast, const Htuple MinContrast, const Htuple ParamName, const Htuple ParamValue, Htuple *ModelID);
LIntExport Herror T_clear_all_ncc_models(void);
LIntExport Herror clear_all_ncc_models(void);
LIntExport Herror T_clear_ncc_model(const Htuple ModelID);
LIntExport Herror clear_ncc_model(Hlong ModelID);
LIntExport Herror T_deserialize_ncc_model(const Htuple SerializedItemHandle, Htuple *ModelID);
LIntExport Herror deserialize_ncc_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror T_serialize_ncc_model(const Htuple ModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_ncc_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_ncc_model(const Htuple FileName, Htuple *ModelID);
LIntExport Herror read_ncc_model(const char *FileName, Hlong *ModelID);
LIntExport Herror T_write_ncc_model(const Htuple ModelID, const Htuple FileName);
LIntExport Herror write_ncc_model(Hlong ModelID, const char *FileName);
LIntExport Herror T_determine_ncc_model_params(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple Metric, const Htuple Parameters, Htuple *ParameterName, Htuple *ParameterValue);
LIntExport Herror T_get_ncc_model_params(const Htuple ModelID, Htuple *NumLevels, Htuple *AngleStart, Htuple *AngleExtent, Htuple *AngleStep, Htuple *Metric);
LIntExport Herror get_ncc_model_params(Hlong ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, char *Metric);
LIntExport Herror T_get_ncc_model_origin(const Htuple ModelID, Htuple *Row, Htuple *Column);
LIntExport Herror get_ncc_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror T_set_ncc_model_origin(const Htuple ModelID, const Htuple Row, const Htuple Column);
LIntExport Herror set_ncc_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror T_find_ncc_model(const Hobject Image, const Htuple ModelID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple SubPixel, const Htuple NumLevels, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Score);
LIntExport Herror T_set_ncc_model_param(const Htuple ModelID, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_create_ncc_model(const Hobject Template, const Htuple NumLevels, const Htuple AngleStart, const Htuple AngleExtent, const Htuple AngleStep, const Htuple Metric, Htuple *ModelID);
LIntExport Herror create_ncc_model(const Hobject Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Metric, Hlong *ModelID);
LIntExport Herror T_get_found_component_model(Hobject *FoundComponents, const Htuple ComponentModelID, const Htuple ModelStart, const Htuple ModelEnd, const Htuple RowComp, const Htuple ColumnComp, const Htuple AngleComp, const Htuple ScoreComp, const Htuple ModelComp, const Htuple ModelMatch, const Htuple MarkOrientation, Htuple *RowCompInst, Htuple *ColumnCompInst, Htuple *AngleCompInst, Htuple *ScoreCompInst);
LIntExport Herror get_found_component_model(Hobject *FoundComponents, Hlong ComponentModelID, Hlong ModelStart, Hlong ModelEnd, double RowComp, double ColumnComp, double AngleComp, double ScoreComp, Hlong ModelComp, Hlong ModelMatch, const char *MarkOrientation, double *RowCompInst, double *ColumnCompInst, double *AngleCompInst, double *ScoreCompInst);
LIntExport Herror T_find_component_model(const Hobject Image, const Htuple ComponentModelID, const Htuple RootComponent, const Htuple AngleStartRoot, const Htuple AngleExtentRoot, const Htuple MinScore, const Htuple NumMatches, const Htuple MaxOverlap, const Htuple IfRootNotFound, const Htuple IfComponentNotFound, const Htuple PosePrediction, const Htuple MinScoreComp, const Htuple SubPixelComp, const Htuple NumLevelsComp, const Htuple GreedinessComp, Htuple *ModelStart, Htuple *ModelEnd, Htuple *Score, Htuple *RowComp, Htuple *ColumnComp, Htuple *AngleComp, Htuple *ScoreComp, Htuple *ModelComp);
LIntExport Herror find_component_model(const Hobject Image, Hlong ComponentModelID, Hlong RootComponent, double AngleStartRoot, double AngleExtentRoot, double MinScore, Hlong NumMatches, double MaxOverlap, const char *IfRootNotFound, const char *IfComponentNotFound, const char *PosePrediction, double MinScoreComp, const char *SubPixelComp, Hlong NumLevelsComp, double GreedinessComp, Hlong *ModelStart, Hlong *ModelEnd, double *Score, double *RowComp, double *ColumnComp, double *AngleComp, double *ScoreComp, Hlong *ModelComp);
LIntExport Herror T_clear_all_component_models(void);
LIntExport Herror clear_all_component_models(void);
LIntExport Herror T_clear_component_model(const Htuple ComponentModelID);
LIntExport Herror clear_component_model(Hlong ComponentModelID);
LIntExport Herror T_get_component_model_tree(Hobject *Tree, Hobject *Relations, const Htuple ComponentModelID, const Htuple RootComponent, const Htuple Image, Htuple *StartNode, Htuple *EndNode, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2, Htuple *AngleStart, Htuple *AngleExtent);
LIntExport Herror get_component_model_tree(Hobject *Tree, Hobject *Relations, Hlong ComponentModelID, Hlong RootComponent, const char *Image, Hlong *StartNode, Hlong *EndNode, double *Row, double *Column, double *Phi, double *Length1, double *Length2, double *AngleStart, double *AngleExtent);
LIntExport Herror T_get_component_model_params(const Htuple ComponentModelID, Htuple *MinScoreComp, Htuple *RootRanking, Htuple *ShapeModelIDs);
LIntExport Herror get_component_model_params(Hlong ComponentModelID, double *MinScoreComp, Hlong *RootRanking, Hlong *ShapeModelIDs);
LIntExport Herror T_deserialize_component_model(const Htuple SerializedItemHandle, Htuple *ComponentModelID);
LIntExport Herror deserialize_component_model(Hlong SerializedItemHandle, Hlong *ComponentModelID);
LIntExport Herror T_serialize_component_model(const Htuple ComponentModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_component_model(Hlong ComponentModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_component_model(const Htuple FileName, Htuple *ComponentModelID);
LIntExport Herror read_component_model(const char *FileName, Hlong *ComponentModelID);
LIntExport Herror T_write_component_model(const Htuple ComponentModelID, const Htuple FileName);
LIntExport Herror write_component_model(Hlong ComponentModelID, const char *FileName);
LIntExport Herror T_create_component_model(const Hobject ModelImage, const Hobject ComponentRegions, const Htuple VariationRow, const Htuple VariationColumn, const Htuple VariationAngle, const Htuple AngleStart, const Htuple AngleExtent, const Htuple ContrastLowComp, const Htuple ContrastHighComp, const Htuple MinSizeComp, const Htuple MinContrastComp, const Htuple MinScoreComp, const Htuple NumLevelsComp, const Htuple AngleStepComp, const Htuple OptimizationComp, const Htuple MetricComp, const Htuple PregenerationComp, Htuple *ComponentModelID, Htuple *RootRanking);
LIntExport Herror create_component_model(const Hobject ModelImage, const Hobject ComponentRegions, Hlong VariationRow, Hlong VariationColumn, double VariationAngle, double AngleStart, double AngleExtent, Hlong ContrastLowComp, Hlong ContrastHighComp, Hlong MinSizeComp, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror T_create_trained_component_model(const Htuple ComponentTrainingID, const Htuple AngleStart, const Htuple AngleExtent, const Htuple MinContrastComp, const Htuple MinScoreComp, const Htuple NumLevelsComp, const Htuple AngleStepComp, const Htuple OptimizationComp, const Htuple MetricComp, const Htuple PregenerationComp, Htuple *ComponentModelID, Htuple *RootRanking);
LIntExport Herror create_trained_component_model(Hlong ComponentTrainingID, double AngleStart, double AngleExtent, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror T_clear_all_training_components(void);
LIntExport Herror clear_all_training_components(void);
LIntExport Herror T_clear_training_components(const Htuple ComponentTrainingID);
LIntExport Herror clear_training_components(Hlong ComponentTrainingID);
LIntExport Herror T_get_component_relations(Hobject *Relations, const Htuple ComponentTrainingID, const Htuple ReferenceComponent, const Htuple Image, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2, Htuple *AngleStart, Htuple *AngleExtent);
LIntExport Herror get_component_relations(Hobject *Relations, Hlong ComponentTrainingID, Hlong ReferenceComponent, const char *Image, double *Row, double *Column, double *Phi, double *Length1, double *Length2, double *AngleStart, double *AngleExtent);
LIntExport Herror T_get_training_components(Hobject *TrainingComponents, const Htuple ComponentTrainingID, const Htuple Components, const Htuple Image, const Htuple MarkOrientation, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Score);
LIntExport Herror get_training_components(Hobject *TrainingComponents, Hlong ComponentTrainingID, const char *Components, const char *Image, const char *MarkOrientation, double *Row, double *Column, double *Angle, double *Score);
LIntExport Herror T_modify_component_relations(const Htuple ComponentTrainingID, const Htuple ReferenceComponent, const Htuple ToleranceComponent, const Htuple PositionTolerance, const Htuple AngleTolerance);
LIntExport Herror modify_component_relations(Hlong ComponentTrainingID, const char *ReferenceComponent, const char *ToleranceComponent, double PositionTolerance, double AngleTolerance);
LIntExport Herror T_deserialize_training_components(const Htuple SerializedItemHandle, Htuple *ComponentTrainingID);
LIntExport Herror deserialize_training_components(Hlong SerializedItemHandle, Hlong *ComponentTrainingID);
LIntExport Herror T_serialize_training_components(const Htuple ComponentTrainingID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_training_components(Hlong ComponentTrainingID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_training_components(const Htuple FileName, Htuple *ComponentTrainingID);
LIntExport Herror read_training_components(const char *FileName, Hlong *ComponentTrainingID);
LIntExport Herror T_write_training_components(const Htuple ComponentTrainingID, const Htuple FileName);
LIntExport Herror write_training_components(Hlong ComponentTrainingID, const char *FileName);
LIntExport Herror T_cluster_model_components(const Hobject TrainingImages, Hobject *ModelComponents, const Htuple ComponentTrainingID, const Htuple AmbiguityCriterion, const Htuple MaxContourOverlap, const Htuple ClusterThreshold);
LIntExport Herror cluster_model_components(const Hobject TrainingImages, Hobject *ModelComponents, Hlong ComponentTrainingID, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold);
LIntExport Herror T_inspect_clustered_components(Hobject *ModelComponents, const Htuple ComponentTrainingID, const Htuple AmbiguityCriterion, const Htuple MaxContourOverlap, const Htuple ClusterThreshold);
LIntExport Herror inspect_clustered_components(Hobject *ModelComponents, Hlong ComponentTrainingID, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold);
LIntExport Herror T_train_model_components(const Hobject ModelImage, const Hobject InitialComponents, const Hobject TrainingImages, Hobject *ModelComponents, const Htuple ContrastLow, const Htuple ContrastHigh, const Htuple MinSize, const Htuple MinScore, const Htuple SearchRowTol, const Htuple SearchColumnTol, const Htuple SearchAngleTol, const Htuple TrainingEmphasis, const Htuple AmbiguityCriterion, const Htuple MaxContourOverlap, const Htuple ClusterThreshold, Htuple *ComponentTrainingID);
LIntExport Herror train_model_components(const Hobject ModelImage, const Hobject InitialComponents, const Hobject TrainingImages, Hobject *ModelComponents, Hlong ContrastLow, Hlong ContrastHigh, Hlong MinSize, double MinScore, Hlong SearchRowTol, Hlong SearchColumnTol, double SearchAngleTol, const char *TrainingEmphasis, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold, Hlong *ComponentTrainingID);
LIntExport Herror T_gen_initial_components(const Hobject ModelImage, Hobject *InitialComponents, const Htuple ContrastLow, const Htuple ContrastHigh, const Htuple MinSize, const Htuple Mode, const Htuple GenericName, const Htuple GenericValue);
LIntExport Herror gen_initial_components(const Hobject ModelImage, Hobject *InitialComponents, Hlong ContrastLow, Hlong ContrastHigh, Hlong MinSize, const char *Mode, const char *GenericName, double GenericValue);
LIntExport Herror T_get_deformable_surface_matching_result(const Htuple DeformableSurfaceMatchingResult, const Htuple ResultName, const Htuple ResultIndex, Htuple *ResultValue);
LIntExport Herror get_deformable_surface_matching_result(Hlong DeformableSurfaceMatchingResult, const char *ResultName, Hlong ResultIndex, Hlong *ResultValue);
LIntExport Herror T_clear_deformable_surface_matching_result(const Htuple DeformableSurfaceMatchingResult);
LIntExport Herror clear_deformable_surface_matching_result(Hlong DeformableSurfaceMatchingResult);
LIntExport Herror T_clear_deformable_surface_model(const Htuple DeformableSurfaceModel);
LIntExport Herror clear_deformable_surface_model(Hlong DeformableSurfaceModel);
LIntExport Herror T_deserialize_deformable_surface_model(const Htuple SerializedItemHandle, Htuple *DeformableSurfaceModel);
LIntExport Herror deserialize_deformable_surface_model(Hlong SerializedItemHandle, Hlong *DeformableSurfaceModel);
LIntExport Herror T_serialize_deformable_surface_model(const Htuple DeformableSurfaceModel, Htuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_surface_model(Hlong DeformableSurfaceModel, Hlong *SerializedItemHandle);
LIntExport Herror T_read_deformable_surface_model(const Htuple FileName, Htuple *DeformableSurfaceModel);
LIntExport Herror read_deformable_surface_model(const char *FileName, Hlong *DeformableSurfaceModel);
LIntExport Herror T_write_deformable_surface_model(const Htuple DeformableSurfaceModel, const Htuple FileName);
LIntExport Herror write_deformable_surface_model(Hlong DeformableSurfaceModel, const char *FileName);
LIntExport Herror T_refine_deformable_surface_model(const Htuple DeformableSurfaceModel, const Htuple ObjectModel3D, const Htuple RelSamplingDistance, const Htuple InitialDeformationObjectModel3D, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Score, Htuple *DeformableSurfaceMatchingResult);
LIntExport Herror refine_deformable_surface_model(Hlong DeformableSurfaceModel, Hlong ObjectModel3D, double RelSamplingDistance, Hlong InitialDeformationObjectModel3D, const char *GenParamName, const char *GenParamValue, double *Score, Hlong *DeformableSurfaceMatchingResult);
LIntExport Herror T_find_deformable_surface_model(const Htuple DeformableSurfaceModel, const Htuple ObjectModel3D, const Htuple RelSamplingDistance, const Htuple MinScore, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Score, Htuple *DeformableSurfaceMatchingResult);
LIntExport Herror T_get_deformable_surface_model_param(const Htuple DeformableSurfaceModel, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_deformable_surface_model_param(Hlong DeformableSurfaceModel, const char *ParamName, double *ParamValue);
LIntExport Herror T_add_deformable_surface_model_reference_point(const Htuple DeformableSurfaceModel, const Htuple ReferencePointX, const Htuple ReferencePointY, const Htuple ReferencePointZ, Htuple *ReferencePointIndex);
LIntExport Herror add_deformable_surface_model_reference_point(Hlong DeformableSurfaceModel, double ReferencePointX, double ReferencePointY, double ReferencePointZ, Hlong *ReferencePointIndex);
LIntExport Herror T_add_deformable_surface_model_sample(const Htuple DeformableSurfaceModel, const Htuple ObjectModel3D);
LIntExport Herror add_deformable_surface_model_sample(Hlong DeformableSurfaceModel, Hlong ObjectModel3D);
LIntExport Herror T_create_deformable_surface_model(const Htuple ObjectModel3D, const Htuple RelSamplingDistance, const Htuple GenParamName, const Htuple GenParamValue, Htuple *DeformableSurfaceModel);
LIntExport Herror create_deformable_surface_model(Hlong ObjectModel3D, double RelSamplingDistance, const char *GenParamName, const char *GenParamValue, Hlong *DeformableSurfaceModel);
LIntExport Herror T_get_surface_matching_result(const Htuple SurfaceMatchingResultID, const Htuple ResultName, const Htuple ResultIndex, Htuple *ResultValue);
LIntExport Herror get_surface_matching_result(Hlong SurfaceMatchingResultID, const char *ResultName, Hlong ResultIndex, Hlong *ResultValue);
LIntExport Herror T_clear_all_surface_matching_results(void);
LIntExport Herror clear_all_surface_matching_results(void);
LIntExport Herror T_clear_surface_matching_result(const Htuple SurfaceMatchingResultID);
LIntExport Herror clear_surface_matching_result(Hlong SurfaceMatchingResultID);
LIntExport Herror T_clear_all_surface_models(void);
LIntExport Herror clear_all_surface_models(void);
LIntExport Herror T_clear_surface_model(const Htuple SurfaceModelID);
LIntExport Herror clear_surface_model(Hlong SurfaceModelID);
LIntExport Herror T_deserialize_surface_model(const Htuple SerializedItemHandle, Htuple *SurfaceModelID);
LIntExport Herror deserialize_surface_model(Hlong SerializedItemHandle, Hlong *SurfaceModelID);
LIntExport Herror T_serialize_surface_model(const Htuple SurfaceModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_surface_model(Hlong SurfaceModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_surface_model(const Htuple FileName, Htuple *SurfaceModelID);
LIntExport Herror read_surface_model(const char *FileName, Hlong *SurfaceModelID);
LIntExport Herror T_write_surface_model(const Htuple SurfaceModelID, const Htuple FileName);
LIntExport Herror write_surface_model(Hlong SurfaceModelID, const char *FileName);
LIntExport Herror T_refine_surface_model_pose(const Htuple SurfaceModelID, const Htuple ObjectModel3D, const Htuple InitialPose, const Htuple MinScore, const Htuple ReturnResultHandle, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Pose, Htuple *Score, Htuple *SurfaceMatchingResultID);
LIntExport Herror T_find_surface_model(const Htuple SurfaceModelID, const Htuple ObjectModel3D, const Htuple RelSamplingDistance, const Htuple KeyPointFraction, const Htuple MinScore, const Htuple ReturnResultHandle, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Pose, Htuple *Score, Htuple *SurfaceMatchingResultID);
LIntExport Herror T_get_surface_model_param(const Htuple SurfaceModelID, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_surface_model_param(Hlong SurfaceModelID, const char *ParamName, double *ParamValue);
LIntExport Herror T_create_surface_model(const Htuple ObjectModel3D, const Htuple RelSamplingDistance, const Htuple GenParamName, const Htuple GenParamValue, Htuple *SurfaceModelID);
LIntExport Herror create_surface_model(Hlong ObjectModel3D, double RelSamplingDistance, const char *GenParamName, const char *GenParamValue, Hlong *SurfaceModelID);
LIntExport Herror T_create_cam_pose_look_at_point(const Htuple CamPosX, const Htuple CamPosY, const Htuple CamPosZ, const Htuple LookAtX, const Htuple LookAtY, const Htuple LookAtZ, const Htuple RefPlaneNormal, const Htuple CamRoll, Htuple *CamPose);
LIntExport Herror T_convert_point_3d_spher_to_cart(const Htuple Longitude, const Htuple Latitude, const Htuple Radius, const Htuple EquatPlaneNormal, const Htuple ZeroMeridian, Htuple *X, Htuple *Y, Htuple *Z);
LIntExport Herror convert_point_3d_spher_to_cart(double Longitude, double Latitude, double Radius, const char *EquatPlaneNormal, const char *ZeroMeridian, double *X, double *Y, double *Z);
LIntExport Herror T_convert_point_3d_cart_to_spher(const Htuple X, const Htuple Y, const Htuple Z, const Htuple EquatPlaneNormal, const Htuple ZeroMeridian, Htuple *Longitude, Htuple *Latitude, Htuple *Radius);
LIntExport Herror convert_point_3d_cart_to_spher(double X, double Y, double Z, const char *EquatPlaneNormal, const char *ZeroMeridian, double *Longitude, double *Latitude, double *Radius);
LIntExport Herror T_clear_all_shape_model_3d(void);
LIntExport Herror clear_all_shape_model_3d(void);
LIntExport Herror T_clear_shape_model_3d(const Htuple ShapeModel3DID);
LIntExport Herror clear_shape_model_3d(Hlong ShapeModel3DID);
LIntExport Herror T_deserialize_shape_model_3d(const Htuple SerializedItemHandle, Htuple *ShapeModel3DID);
LIntExport Herror deserialize_shape_model_3d(Hlong SerializedItemHandle, Hlong *ShapeModel3DID);
LIntExport Herror T_serialize_shape_model_3d(const Htuple ShapeModel3DID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model_3d(Hlong ShapeModel3DID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_shape_model_3d(const Htuple FileName, Htuple *ShapeModel3DID);
LIntExport Herror read_shape_model_3d(const char *FileName, Hlong *ShapeModel3DID);
LIntExport Herror T_write_shape_model_3d(const Htuple ShapeModel3DID, const Htuple FileName);
LIntExport Herror write_shape_model_3d(Hlong ShapeModel3DID, const char *FileName);
LIntExport Herror T_trans_pose_shape_model_3d(const Htuple ShapeModel3DID, const Htuple PoseIn, const Htuple Transformation, Htuple *PoseOut);
LIntExport Herror T_project_shape_model_3d(Hobject *ModelContours, const Htuple ShapeModel3DID, const Htuple CamParam, const Htuple Pose, const Htuple HiddenSurfaceRemoval, const Htuple MinFaceAngle);
LIntExport Herror T_get_shape_model_3d_contours(Hobject *ModelContours, const Htuple ShapeModel3DID, const Htuple Level, const Htuple View, Htuple *ViewPose);
LIntExport Herror T_get_shape_model_3d_params(const Htuple ShapeModel3DID, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror get_shape_model_3d_params(Hlong ShapeModel3DID, const char *GenParamNames, char *GenParamValues);
LIntExport Herror T_find_shape_model_3d(const Hobject Image, const Htuple ShapeModel3DID, const Htuple MinScore, const Htuple Greediness, const Htuple NumLevels, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *Pose, Htuple *CovPose, Htuple *Score);
LIntExport Herror T_create_shape_model_3d(const Htuple ObjectModel3D, const Htuple CamParam, const Htuple RefRotX, const Htuple RefRotY, const Htuple RefRotZ, const Htuple OrderOfRotation, const Htuple LongitudeMin, const Htuple LongitudeMax, const Htuple LatitudeMin, const Htuple LatitudeMax, const Htuple CamRollMin, const Htuple CamRollMax, const Htuple DistMin, const Htuple DistMax, const Htuple MinContrast, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ShapeModel3DID);
LIntExport Herror T_simplify_object_model_3d(const Htuple ObjectModel3D, const Htuple Method, const Htuple Amount, const Htuple GenParamName, const Htuple GenParamValue, Htuple *SimplifiedObjectModel3D);
LIntExport Herror simplify_object_model_3d(Hlong ObjectModel3D, const char *Method, double Amount, const char *GenParamName, const char *GenParamValue, Hlong *SimplifiedObjectModel3D);
LIntExport Herror T_distance_object_model_3d(const Htuple ObjectModel3DFrom, const Htuple ObjectModel3DTo, const Htuple Pose, const Htuple MaxDistance, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_union_object_model_3d(const Htuple ObjectModels3D, const Htuple Method, Htuple *UnionObjectModel3D);
LIntExport Herror union_object_model_3d(Hlong ObjectModels3D, const char *Method, Hlong *UnionObjectModel3D);
LIntExport Herror T_set_object_model_3d_attrib_mod(const Htuple ObjectModel3D, const Htuple AttribName, const Htuple AttachExtAttribTo, const Htuple AttribValues);
LIntExport Herror set_object_model_3d_attrib_mod(Hlong ObjectModel3D, const char *AttribName, const char *AttachExtAttribTo, double AttribValues);
LIntExport Herror T_set_object_model_3d_attrib(const Htuple ObjectModel3D, const Htuple AttribName, const Htuple AttachExtAttribTo, const Htuple AttribValues, Htuple *ObjectModel3DOut);
LIntExport Herror set_object_model_3d_attrib(Hlong ObjectModel3D, const char *AttribName, const char *AttachExtAttribTo, double AttribValues, Hlong *ObjectModel3DOut);
LIntExport Herror T_gen_empty_object_model_3d(Htuple *EmptyObjectModel3D);
LIntExport Herror gen_empty_object_model_3d(Hlong *EmptyObjectModel3D);
LIntExport Herror T_sample_object_model_3d(const Htuple ObjectModel3D, const Htuple Method, const Htuple SampleDistance, const Htuple GenParamName, const Htuple GenParamValue, Htuple *SampledObjectModel3D);
LIntExport Herror sample_object_model_3d(Hlong ObjectModel3D, const char *Method, double SampleDistance, const char *GenParamName, double GenParamValue, Hlong *SampledObjectModel3D);
LIntExport Herror T_register_object_model_3d_global(const Htuple ObjectModels3D, const Htuple HomMats3D, const Htuple From, const Htuple To, const Htuple GenParamName, const Htuple GenParamValue, Htuple *HomMats3DOut, Htuple *Scores);
LIntExport Herror T_register_object_model_3d_pair(const Htuple ObjectModel3D1, const Htuple ObjectModel3D2, const Htuple Method, const Htuple GenParamName, const Htuple GenParamValue, Htuple *Pose, Htuple *Score);
LIntExport Herror T_gen_object_model_3d_from_points(const Htuple X, const Htuple Y, const Htuple Z, Htuple *ObjectModel3D);
LIntExport Herror gen_object_model_3d_from_points(double X, double Y, double Z, Hlong *ObjectModel3D);
LIntExport Herror T_gen_box_object_model_3d(const Htuple Pose, const Htuple LengthX, const Htuple LengthY, const Htuple LengthZ, Htuple *ObjectModel3D);
LIntExport Herror T_gen_plane_object_model_3d(const Htuple Pose, const Htuple XExtent, const Htuple YExtent, Htuple *ObjectModel3D);
LIntExport Herror T_gen_sphere_object_model_3d_center(const Htuple X, const Htuple Y, const Htuple Z, const Htuple Radius, Htuple *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d_center(double X, double Y, double Z, double Radius, Hlong *ObjectModel3D);
LIntExport Herror T_gen_sphere_object_model_3d(const Htuple Pose, const Htuple Radius, Htuple *ObjectModel3D);
LIntExport Herror T_gen_cylinder_object_model_3d(const Htuple Pose, const Htuple Radius, const Htuple MinExtent, const Htuple MaxExtent, Htuple *ObjectModel3D);
LIntExport Herror T_smallest_bounding_box_object_model_3d(const Htuple ObjectModel3D, const Htuple Type, Htuple *Pose, Htuple *Length1, Htuple *Length2, Htuple *Length3);
LIntExport Herror T_smallest_sphere_object_model_3d(const Htuple ObjectModel3D, Htuple *CenterPoint, Htuple *Radius);
LIntExport Herror T_intersect_plane_object_model_3d(const Htuple ObjectModel3D, const Htuple Plane, Htuple *ObjectModel3DIntersection);
LIntExport Herror T_convex_hull_object_model_3d(const Htuple ObjectModel3D, Htuple *ObjectModel3DConvexHull);
LIntExport Herror convex_hull_object_model_3d(Hlong ObjectModel3D, Hlong *ObjectModel3DConvexHull);
LIntExport Herror T_select_object_model_3d(const Htuple ObjectModel3D, const Htuple Feature, const Htuple Operation, const Htuple MinValue, const Htuple MaxValue, Htuple *ObjectModel3DSelected);
LIntExport Herror select_object_model_3d(Hlong ObjectModel3D, const char *Feature, const char *Operation, double MinValue, double MaxValue, Hlong *ObjectModel3DSelected);
LIntExport Herror T_area_object_model_3d(const Htuple ObjectModel3D, Htuple *Area);
LIntExport Herror area_object_model_3d(Hlong ObjectModel3D, double *Area);
LIntExport Herror T_max_diameter_object_model_3d(const Htuple ObjectModel3D, Htuple *Diameter);
LIntExport Herror max_diameter_object_model_3d(Hlong ObjectModel3D, double *Diameter);
LIntExport Herror T_moments_object_model_3d(const Htuple ObjectModel3D, const Htuple MomentsToCalculate, Htuple *Moments);
LIntExport Herror moments_object_model_3d(Hlong ObjectModel3D, const char *MomentsToCalculate, double *Moments);
LIntExport Herror T_volume_object_model_3d_relative_to_plane(const Htuple ObjectModel3D, const Htuple Plane, const Htuple Mode, const Htuple UseFaceOrientation, Htuple *Volume);
LIntExport Herror T_reduce_object_model_3d_by_view(const Hobject Region, const Htuple ObjectModel3D, const Htuple CamParam, const Htuple Pose, Htuple *ObjectModel3DReduced);
LIntExport Herror T_connection_object_model_3d(const Htuple ObjectModel3D, const Htuple Feature, const Htuple Value, Htuple *ObjectModel3DConnected);
LIntExport Herror connection_object_model_3d(Hlong ObjectModel3D, const char *Feature, double Value, Hlong *ObjectModel3DConnected);
LIntExport Herror T_select_points_object_model_3d(const Htuple ObjectModel3D, const Htuple Attrib, const Htuple MinValue, const Htuple MaxValue, Htuple *ObjectModel3DThresholded);
LIntExport Herror select_points_object_model_3d(Hlong ObjectModel3D, const char *Attrib, double MinValue, double MaxValue, Hlong *ObjectModel3DThresholded);
LIntExport Herror T_get_disp_object_model_3d_info(const Htuple WindowHandle, const Htuple Row, const Htuple Column, const Htuple Information, Htuple *Value);
LIntExport Herror get_disp_object_model_3d_info(Hlong WindowHandle, double Row, double Column, const char *Information, Hlong *Value);
LIntExport Herror T_render_object_model_3d(Hobject *Image, const Htuple ObjectModel3D, const Htuple CamParam, const Htuple Pose, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_disp_object_model_3d(const Htuple WindowHandle, const Htuple ObjectModel3D, const Htuple CamParam, const Htuple Pose, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_copy_object_model_3d(const Htuple ObjectModel3D, const Htuple Attributes, Htuple *CopiedObjectModel3D);
LIntExport Herror copy_object_model_3d(Hlong ObjectModel3D, const char *Attributes, Hlong *CopiedObjectModel3D);
LIntExport Herror T_prepare_object_model_3d(const Htuple ObjectModel3D, const Htuple Purpose, const Htuple OverwriteData, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror prepare_object_model_3d(Hlong ObjectModel3D, const char *Purpose, const char *OverwriteData, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_object_model_3d_to_xyz(Hobject *X, Hobject *Y, Hobject *Z, const Htuple ObjectModel3D, const Htuple Type, const Htuple CamParam, const Htuple Pose);
LIntExport Herror T_xyz_to_object_model_3d(const Hobject X, const Hobject Y, const Hobject Z, Htuple *ObjectModel3D);
LIntExport Herror xyz_to_object_model_3d(const Hobject X, const Hobject Y, const Hobject Z, Hlong *ObjectModel3D);
LIntExport Herror T_get_object_model_3d_params(const Htuple ObjectModel3D, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_object_model_3d_params(Hlong ObjectModel3D, const char *ParamName, char *ParamValue);
LIntExport Herror T_project_object_model_3d(Hobject *ModelContours, const Htuple ObjectModel3D, const Htuple CamParam, const Htuple Pose, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_rigid_trans_object_model_3d(const Htuple ObjectModel3D, const Htuple Pose, Htuple *ObjectModel3DRigidTrans);
LIntExport Herror T_projective_trans_object_model_3d(const Htuple ObjectModel3D, const Htuple HomMat3D, Htuple *ObjectModel3DProjectiveTrans);
LIntExport Herror T_affine_trans_object_model_3d(const Htuple ObjectModel3D, const Htuple HomMat3D, Htuple *ObjectModel3DAffineTrans);
LIntExport Herror T_clear_all_object_model_3d(void);
LIntExport Herror clear_all_object_model_3d(void);
LIntExport Herror T_clear_object_model_3d(const Htuple ObjectModel3D);
LIntExport Herror clear_object_model_3d(Hlong ObjectModel3D);
LIntExport Herror T_serialize_object_model_3d(const Htuple ObjectModel3D, Htuple *SerializedItemHandle);
LIntExport Herror serialize_object_model_3d(Hlong ObjectModel3D, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_object_model_3d(const Htuple SerializedItemHandle, Htuple *ObjectModel3D);
LIntExport Herror deserialize_object_model_3d(Hlong SerializedItemHandle, Hlong *ObjectModel3D);
LIntExport Herror T_write_object_model_3d(const Htuple ObjectModel3D, const Htuple FileType, const Htuple FileName, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror write_object_model_3d(Hlong ObjectModel3D, const char *FileType, const char *FileName, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_read_object_model_3d(const Htuple FileName, const Htuple Scale, const Htuple GenParamName, const Htuple GenParamValue, Htuple *ObjectModel3D, Htuple *Status);
LIntExport Herror read_object_model_3d(const char *FileName, const char *Scale, const char *GenParamName, const char *GenParamValue, Hlong *ObjectModel3D, char *Status);
LIntExport Herror T_read_object_model_3d_dxf(const Htuple FileName, const Htuple Scale, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ObjectModel3D, Htuple *DxfStatus);
LIntExport Herror read_object_model_3d_dxf(const char *FileName, const char *Scale, const char *GenParamNames, double GenParamValues, Hlong *ObjectModel3D, char *DxfStatus);
LIntExport Herror T_read_kalman(const Htuple FileName, Htuple *Dimension, Htuple *Model, Htuple *Measurement, Htuple *Prediction);
LIntExport Herror T_update_kalman(const Htuple FileName, const Htuple DimensionIn, const Htuple ModelIn, const Htuple MeasurementIn, Htuple *DimensionOut, Htuple *ModelOut, Htuple *MeasurementOut);
LIntExport Herror T_filter_kalman(const Htuple Dimension, const Htuple Model, const Htuple Measurement, const Htuple PredictionIn, Htuple *PredictionOut, Htuple *Estimate);
LIntExport Herror T_query_operator_info(Htuple *Slots);
LIntExport Herror T_query_param_info(Htuple *Slots);
LIntExport Herror T_get_operator_name(const Htuple Pattern, Htuple *OperatorNames);
LIntExport Herror T_get_param_types(const Htuple OperatorName, Htuple *InpCtrlParType, Htuple *OutpCtrlParType);
LIntExport Herror T_get_param_num(const Htuple OperatorName, Htuple *CName, Htuple *InpObjPar, Htuple *OutpObjPar, Htuple *InpCtrlPar, Htuple *OutpCtrlPar, Htuple *Type);
LIntExport Herror get_param_num(const char *OperatorName, char *CName, Hlong *InpObjPar, Hlong *OutpObjPar, Hlong *InpCtrlPar, Hlong *OutpCtrlPar, char *Type);
LIntExport Herror T_get_param_names(const Htuple OperatorName, Htuple *InpObjPar, Htuple *OutpObjPar, Htuple *InpCtrlPar, Htuple *OutpCtrlPar);
LIntExport Herror T_get_operator_info(const Htuple OperatorName, const Htuple Slot, Htuple *Information);
LIntExport Herror get_operator_info(const char *OperatorName, const char *Slot, char *Information);
LIntExport Herror T_get_param_info(const Htuple OperatorName, const Htuple ParamName, const Htuple Slot, Htuple *Information);
LIntExport Herror get_param_info(const char *OperatorName, const char *ParamName, const char *Slot, char *Information);
LIntExport Herror T_search_operator(const Htuple Keyword, Htuple *OperatorNames);
LIntExport Herror T_get_keywords(const Htuple OperatorName, Htuple *Keywords);
LIntExport Herror T_get_chapter_info(const Htuple Chapter, Htuple *Info);
LIntExport Herror T_channels_to_image(const Hobject Images, Hobject *MultiChannelImage);
LIntExport Herror channels_to_image(const Hobject Images, Hobject *MultiChannelImage);
LIntExport Herror T_image_to_channels(const Hobject MultiChannelImage, Hobject *Images);
LIntExport Herror image_to_channels(const Hobject MultiChannelImage, Hobject *Images);
LIntExport Herror T_compose7(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, const Hobject Image6, const Hobject Image7, Hobject *MultiChannelImage);
LIntExport Herror compose7(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, const Hobject Image6, const Hobject Image7, Hobject *MultiChannelImage);
LIntExport Herror T_compose6(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, const Hobject Image6, Hobject *MultiChannelImage);
LIntExport Herror compose6(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, const Hobject Image6, Hobject *MultiChannelImage);
LIntExport Herror T_compose5(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, Hobject *MultiChannelImage);
LIntExport Herror compose5(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, const Hobject Image5, Hobject *MultiChannelImage);
LIntExport Herror T_compose4(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, Hobject *MultiChannelImage);
LIntExport Herror compose4(const Hobject Image1, const Hobject Image2, const Hobject Image3, const Hobject Image4, Hobject *MultiChannelImage);
LIntExport Herror T_compose3(const Hobject Image1, const Hobject Image2, const Hobject Image3, Hobject *MultiChannelImage);
LIntExport Herror compose3(const Hobject Image1, const Hobject Image2, const Hobject Image3, Hobject *MultiChannelImage);
LIntExport Herror T_compose2(const Hobject Image1, const Hobject Image2, Hobject *MultiChannelImage);
LIntExport Herror compose2(const Hobject Image1, const Hobject Image2, Hobject *MultiChannelImage);
LIntExport Herror T_decompose7(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5, Hobject *Image6, Hobject *Image7);
LIntExport Herror decompose7(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5, Hobject *Image6, Hobject *Image7);
LIntExport Herror T_decompose6(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5, Hobject *Image6);
LIntExport Herror decompose6(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5, Hobject *Image6);
LIntExport Herror T_decompose5(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5);
LIntExport Herror decompose5(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4, Hobject *Image5);
LIntExport Herror T_decompose4(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4);
LIntExport Herror decompose4(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3, Hobject *Image4);
LIntExport Herror T_decompose3(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3);
LIntExport Herror decompose3(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2, Hobject *Image3);
LIntExport Herror T_decompose2(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2);
LIntExport Herror decompose2(const Hobject MultiChannelImage, Hobject *Image1, Hobject *Image2);
LIntExport Herror T_count_channels(const Hobject MultiChannelImage, Htuple *Channels);
LIntExport Herror count_channels(const Hobject MultiChannelImage, Hlong *Channels);
LIntExport Herror T_append_channel(const Hobject MultiChannelImage, const Hobject Image, Hobject *ImageExtended);
LIntExport Herror append_channel(const Hobject MultiChannelImage, const Hobject Image, Hobject *ImageExtended);
LIntExport Herror T_access_channel(const Hobject MultiChannelImage, Hobject *Image, const Htuple Channel);
LIntExport Herror access_channel(const Hobject MultiChannelImage, Hobject *Image, Hlong Channel);
LIntExport Herror T_tile_images_offset(const Hobject Images, Hobject *TiledImage, const Htuple OffsetRow, const Htuple OffsetCol, const Htuple Row1, const Htuple Col1, const Htuple Row2, const Htuple Col2, const Htuple Width, const Htuple Height);
LIntExport Herror tile_images_offset(const Hobject Images, Hobject *TiledImage, Hlong OffsetRow, Hlong OffsetCol, Hlong Row1, Hlong Col1, Hlong Row2, Hlong Col2, Hlong Width, Hlong Height);
LIntExport Herror T_tile_images(const Hobject Images, Hobject *TiledImage, const Htuple NumColumns, const Htuple TileOrder);
LIntExport Herror tile_images(const Hobject Images, Hobject *TiledImage, Hlong NumColumns, const char *TileOrder);
LIntExport Herror T_tile_channels(const Hobject Image, Hobject *TiledImage, const Htuple NumColumns, const Htuple TileOrder);
LIntExport Herror tile_channels(const Hobject Image, Hobject *TiledImage, Hlong NumColumns, const char *TileOrder);
LIntExport Herror T_crop_domain(const Hobject Image, Hobject *ImagePart);
LIntExport Herror crop_domain(const Hobject Image, Hobject *ImagePart);
LIntExport Herror T_crop_rectangle1(const Hobject Image, Hobject *ImagePart, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror crop_rectangle1(const Hobject Image, Hobject *ImagePart, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_crop_part(const Hobject Image, Hobject *ImagePart, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror crop_part(const Hobject Image, Hobject *ImagePart, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror T_change_format(const Hobject Image, Hobject *ImagePart, const Htuple Width, const Htuple Height);
LIntExport Herror change_format(const Hobject Image, Hobject *ImagePart, Hlong Width, Hlong Height);
LIntExport Herror T_change_domain(const Hobject Image, const Hobject NewDomain, Hobject *ImageNew);
LIntExport Herror change_domain(const Hobject Image, const Hobject NewDomain, Hobject *ImageNew);
LIntExport Herror T_add_channels(const Hobject Regions, const Hobject Image, Hobject *GrayRegions);
LIntExport Herror add_channels(const Hobject Regions, const Hobject Image, Hobject *GrayRegions);
LIntExport Herror T_rectangle1_domain(const Hobject Image, Hobject *ImageReduced, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror rectangle1_domain(const Hobject Image, Hobject *ImageReduced, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_reduce_domain(const Hobject Image, const Hobject Region, Hobject *ImageReduced);
LIntExport Herror reduce_domain(const Hobject Image, const Hobject Region, Hobject *ImageReduced);
LIntExport Herror T_full_domain(const Hobject Image, Hobject *ImageFull);
LIntExport Herror full_domain(const Hobject Image, Hobject *ImageFull);
LIntExport Herror T_get_domain(const Hobject Image, Hobject *Domain);
LIntExport Herror get_domain(const Hobject Image, Hobject *Domain);
LIntExport Herror T_hough_circles(const Hobject RegionIn, Hobject *RegionOut, const Htuple Radius, const Htuple Percent, const Htuple Mode);
LIntExport Herror hough_circles(const Hobject RegionIn, Hobject *RegionOut, Hlong Radius, Hlong Percent, Hlong Mode);
LIntExport Herror T_hough_circle_trans(const Hobject Region, Hobject *HoughImage, const Htuple Radius);
LIntExport Herror hough_circle_trans(const Hobject Region, Hobject *HoughImage, Hlong Radius);
LIntExport Herror T_hough_lines_dir(const Hobject ImageDir, Hobject *HoughImage, Hobject *Lines, const Htuple DirectionUncertainty, const Htuple AngleResolution, const Htuple Smoothing, const Htuple FilterSize, const Htuple Threshold, const Htuple AngleGap, const Htuple DistGap, const Htuple GenLines, Htuple *Angle, Htuple *Dist);
LIntExport Herror T_hough_line_trans_dir(const Hobject ImageDir, Hobject *HoughImage, const Htuple DirectionUncertainty, const Htuple AngleResolution);
LIntExport Herror hough_line_trans_dir(const Hobject ImageDir, Hobject *HoughImage, Hlong DirectionUncertainty, Hlong AngleResolution);
LIntExport Herror T_hough_lines(const Hobject RegionIn, const Htuple AngleResolution, const Htuple Threshold, const Htuple AngleGap, const Htuple DistGap, Htuple *Angle, Htuple *Dist);
LIntExport Herror T_hough_line_trans(const Hobject Region, Hobject *HoughImage, const Htuple AngleResolution);
LIntExport Herror hough_line_trans(const Hobject Region, Hobject *HoughImage, Hlong AngleResolution);
LIntExport Herror T_select_matching_lines(const Hobject RegionIn, Hobject *RegionLines, const Htuple AngleIn, const Htuple DistIn, const Htuple LineWidth, const Htuple Thresh, Htuple *AngleOut, Htuple *DistOut);
LIntExport Herror select_matching_lines(const Hobject RegionIn, Hobject *RegionLines, double AngleIn, double DistIn, Hlong LineWidth, Hlong Thresh, double *AngleOut, double *DistOut);
LIntExport Herror T_find_rectification_grid(const Hobject Image, Hobject *GridRegion, const Htuple MinContrast, const Htuple Radius);
LIntExport Herror find_rectification_grid(const Hobject Image, Hobject *GridRegion, double MinContrast, double Radius);
LIntExport Herror T_create_rectification_grid(const Htuple Width, const Htuple NumSquares, const Htuple GridFile);
LIntExport Herror create_rectification_grid(double Width, Hlong NumSquares, const char *GridFile);
LIntExport Herror T_connect_grid_points(const Hobject Image, Hobject *ConnectingLines, const Htuple Row, const Htuple Column, const Htuple Sigma, const Htuple MaxDist);
LIntExport Herror T_gen_grid_rectification_map(const Hobject Image, const Hobject ConnectingLines, Hobject *Map, Hobject *Meshes, const Htuple GridSpacing, const Htuple Rotation, const Htuple Row, const Htuple Column, const Htuple MapType);
LIntExport Herror T_gen_arbitrary_distortion_map(Hobject *Map, const Htuple GridSpacing, const Htuple Row, const Htuple Column, const Htuple GridWidth, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple MapType);
LIntExport Herror T_get_window_background_image(Hobject *BackgroundImage, const Htuple WindowHandle);
LIntExport Herror get_window_background_image(Hobject *BackgroundImage, Hlong WindowHandle);
LIntExport Herror T_set_drawing_object_callback(const Htuple DrawID, const Htuple DrawObjectEvent, const Htuple CallbackFunction);
LIntExport Herror set_drawing_object_callback(Hlong DrawID, const char *DrawObjectEvent, Hlong CallbackFunction);
LIntExport Herror T_detach_background_from_window(const Htuple WindowHandle);
LIntExport Herror detach_background_from_window(Hlong WindowHandle);
LIntExport Herror T_attach_background_to_window(const Hobject Image, const Htuple WindowHandle);
LIntExport Herror attach_background_to_window(const Hobject Image, Hlong WindowHandle);
LIntExport Herror T_detach_drawing_object_from_window(const Htuple WindowHandle, const Htuple DrawID);
LIntExport Herror detach_drawing_object_from_window(Hlong WindowHandle, Hlong DrawID);
LIntExport Herror T_attach_drawing_object_to_window(const Htuple WindowHandle, const Htuple DrawID);
LIntExport Herror attach_drawing_object_to_window(Hlong WindowHandle, Hlong DrawID);
LIntExport Herror T_update_window_pose(const Htuple WindowHandle, const Htuple LastRow, const Htuple LastCol, const Htuple CurrentRow, const Htuple CurrentCol, const Htuple Mode);
LIntExport Herror update_window_pose(Hlong WindowHandle, double LastRow, double LastCol, double CurrentRow, double CurrentCol, const char *Mode);
LIntExport Herror T_unproject_coordinates(const Hobject Image, const Htuple WindowHandle, const Htuple Row, const Htuple Column, Htuple *ImageRow, Htuple *ImageColumn, Htuple *Height);
LIntExport Herror unproject_coordinates(const Hobject Image, Hlong WindowHandle, double Row, double Column, Hlong *ImageRow, Hlong *ImageColumn, Hlong *Height);
LIntExport Herror T_get_os_window_handle(const Htuple WindowHandle, Htuple *OSWindowHandle, Htuple *OSDisplayHandle);
LIntExport Herror get_os_window_handle(Hlong WindowHandle, Hlong *OSWindowHandle, Hlong *OSDisplayHandle);
LIntExport Herror T_set_window_dc(const Htuple WindowHandle, const Htuple WINHDC);
LIntExport Herror set_window_dc(Hlong WindowHandle, Hlong WINHDC);
LIntExport Herror T_new_extern_window(const Htuple WINHWnd, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height, Htuple *WindowHandle);
LIntExport Herror new_extern_window(Hlong WINHWnd, Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong *WindowHandle);
LIntExport Herror T_slide_image(const Htuple WindowHandleSource1, const Htuple WindowHandleSource2, const Htuple WindowHandle);
LIntExport Herror slide_image(Hlong WindowHandleSource1, Hlong WindowHandleSource2, Hlong WindowHandle);
LIntExport Herror T_set_window_type(const Htuple WindowType);
LIntExport Herror set_window_type(const char *WindowType);
LIntExport Herror T_set_window_extents(const Htuple WindowHandle, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror set_window_extents(Hlong WindowHandle, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror T_get_window_attr(const Htuple AttributeName, Htuple *AttributeValue);
LIntExport Herror get_window_attr(const char *AttributeName, char *AttributeValue);
LIntExport Herror T_set_window_attr(const Htuple AttributeName, const Htuple AttributeValue);
LIntExport Herror set_window_attr(const char *AttributeName, const char *AttributeValue);
LIntExport Herror T_query_window_type(Htuple *WindowTypes);
LIntExport Herror T_open_window(const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height, const Htuple FatherWindow, const Htuple Mode, const Htuple Machine, Htuple *WindowHandle);
LIntExport Herror open_window(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong FatherWindow, const char *Mode, const char *Machine, Hlong *WindowHandle);
LIntExport Herror T_open_textwindow(const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height, const Htuple BorderWidth, const Htuple BorderColor, const Htuple BackgroundColor, const Htuple FatherWindow, const Htuple Mode, const Htuple Machine, Htuple *WindowHandle);
LIntExport Herror open_textwindow(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong BorderWidth, const char *BorderColor, const char *BackgroundColor, Hlong FatherWindow, const char *Mode, const char *Machine, Hlong *WindowHandle);
LIntExport Herror T_move_rectangle(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, const Htuple DestRow, const Htuple DestColumn);
LIntExport Herror move_rectangle(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2, Hlong DestRow, Hlong DestColumn);
LIntExport Herror T_get_window_type(const Htuple WindowHandle, Htuple *WindowType);
LIntExport Herror get_window_type(Hlong WindowHandle, char *WindowType);
LIntExport Herror T_get_window_pointer3(const Htuple WindowHandle, Htuple *ImageRed, Htuple *ImageGreen, Htuple *ImageBlue, Htuple *Width, Htuple *Height);
LIntExport Herror get_window_pointer3(Hlong WindowHandle, Hlong *ImageRed, Hlong *ImageGreen, Hlong *ImageBlue, Hlong *Width, Hlong *Height);
LIntExport Herror T_get_window_extents(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Width, Htuple *Height);
LIntExport Herror get_window_extents(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Width, Hlong *Height);
LIntExport Herror T_dump_window_image(Hobject *Image, const Htuple WindowHandle);
LIntExport Herror dump_window_image(Hobject *Image, Hlong WindowHandle);
LIntExport Herror T_dump_window(const Htuple WindowHandle, const Htuple Device, const Htuple FileName);
LIntExport Herror dump_window(Hlong WindowHandle, const char *Device, const char *FileName);
LIntExport Herror T_copy_rectangle(const Htuple WindowHandleSource, const Htuple WindowHandleDestination, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, const Htuple DestRow, const Htuple DestColumn);
LIntExport Herror copy_rectangle(Hlong WindowHandleSource, Hlong WindowHandleDestination, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2, Hlong DestRow, Hlong DestColumn);
LIntExport Herror T_close_window(const Htuple WindowHandle);
LIntExport Herror close_window(Hlong WindowHandle);
LIntExport Herror T_clear_window(const Htuple WindowHandle);
LIntExport Herror clear_window(Hlong WindowHandle);
LIntExport Herror T_clear_rectangle(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror clear_rectangle(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_write_string(const Htuple WindowHandle, const Htuple String);
LIntExport Herror write_string(Hlong WindowHandle, const char *String);
LIntExport Herror T_set_tshape(const Htuple WindowHandle, const Htuple TextCursor);
LIntExport Herror set_tshape(Hlong WindowHandle, const char *TextCursor);
LIntExport Herror T_set_tposition(const Htuple WindowHandle, const Htuple Row, const Htuple Column);
LIntExport Herror set_tposition(Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror T_read_string(const Htuple WindowHandle, const Htuple InString, const Htuple Length, Htuple *OutString);
LIntExport Herror read_string(Hlong WindowHandle, const char *InString, Hlong Length, char *OutString);
LIntExport Herror T_read_char(const Htuple WindowHandle, Htuple *Char, Htuple *Code);
LIntExport Herror read_char(Hlong WindowHandle, char *Char, char *Code);
LIntExport Herror T_new_line(const Htuple WindowHandle);
LIntExport Herror new_line(Hlong WindowHandle);
LIntExport Herror T_get_tshape(const Htuple WindowHandle, Htuple *TextCursor);
LIntExport Herror get_tshape(Hlong WindowHandle, char *TextCursor);
LIntExport Herror T_get_tposition(const Htuple WindowHandle, Htuple *Row, Htuple *Column);
LIntExport Herror get_tposition(Hlong WindowHandle, Hlong *Row, Hlong *Column);
LIntExport Herror T_get_font_extents(const Htuple WindowHandle, Htuple *MaxAscent, Htuple *MaxDescent, Htuple *MaxWidth, Htuple *MaxHeight);
LIntExport Herror get_font_extents(Hlong WindowHandle, Hlong *MaxAscent, Hlong *MaxDescent, Hlong *MaxWidth, Hlong *MaxHeight);
LIntExport Herror T_get_string_extents(const Htuple WindowHandle, const Htuple Values, Htuple *Ascent, Htuple *Descent, Htuple *Width, Htuple *Height);
LIntExport Herror get_string_extents(Hlong WindowHandle, const char *Values, Hlong *Ascent, Hlong *Descent, Hlong *Width, Hlong *Height);
LIntExport Herror T_query_font(const Htuple WindowHandle, Htuple *Font);
LIntExport Herror T_query_tshape(const Htuple WindowHandle, Htuple *TextCursor);
LIntExport Herror T_set_font(const Htuple WindowHandle, const Htuple Font);
LIntExport Herror set_font(Hlong WindowHandle, const char *Font);
LIntExport Herror T_get_font(const Htuple WindowHandle, Htuple *Font);
LIntExport Herror get_font(Hlong WindowHandle, char *Font);
LIntExport Herror T_get_display_scene_3d_info(const Htuple WindowHandle, const Htuple Scene3D, const Htuple Row, const Htuple Column, const Htuple Information, Htuple *Value);
LIntExport Herror get_display_scene_3d_info(Hlong WindowHandle, Hlong Scene3D, double Row, double Column, const char *Information, Hlong *Value);
LIntExport Herror T_set_scene_3d_to_world_pose(const Htuple Scene3D, const Htuple ToWorldPose);
LIntExport Herror set_scene_3d_to_world_pose(Hlong Scene3D, double ToWorldPose);
LIntExport Herror T_set_scene_3d_param(const Htuple Scene3D, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_scene_3d_param(Hlong Scene3D, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_set_scene_3d_light_param(const Htuple Scene3D, const Htuple LightIndex, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_scene_3d_light_param(Hlong Scene3D, Hlong LightIndex, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_set_scene_3d_instance_pose(const Htuple Scene3D, const Htuple InstanceIndex, const Htuple Pose);
LIntExport Herror set_scene_3d_instance_pose(Hlong Scene3D, Hlong InstanceIndex, double Pose);
LIntExport Herror T_set_scene_3d_instance_param(const Htuple Scene3D, const Htuple InstanceIndex, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_scene_3d_instance_param(Hlong Scene3D, Hlong InstanceIndex, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_set_scene_3d_camera_pose(const Htuple Scene3D, const Htuple CameraIndex, const Htuple Pose);
LIntExport Herror set_scene_3d_camera_pose(Hlong Scene3D, Hlong CameraIndex, double Pose);
LIntExport Herror T_render_scene_3d(Hobject *Image, const Htuple Scene3D, const Htuple CameraIndex);
LIntExport Herror render_scene_3d(Hobject *Image, Hlong Scene3D, Hlong CameraIndex);
LIntExport Herror T_remove_scene_3d_light(const Htuple Scene3D, const Htuple LightIndex);
LIntExport Herror remove_scene_3d_light(Hlong Scene3D, Hlong LightIndex);
LIntExport Herror T_remove_scene_3d_instance(const Htuple Scene3D, const Htuple InstanceIndex);
LIntExport Herror remove_scene_3d_instance(Hlong Scene3D, Hlong InstanceIndex);
LIntExport Herror T_remove_scene_3d_camera(const Htuple Scene3D, const Htuple CameraIndex);
LIntExport Herror remove_scene_3d_camera(Hlong Scene3D, Hlong CameraIndex);
LIntExport Herror T_display_scene_3d(const Htuple WindowHandle, const Htuple Scene3D, const Htuple CameraIndex);
LIntExport Herror display_scene_3d(Hlong WindowHandle, Hlong Scene3D, const char *CameraIndex);
LIntExport Herror T_add_scene_3d_light(const Htuple Scene3D, const Htuple LightPosition, const Htuple LightKind, Htuple *LightIndex);
LIntExport Herror T_add_scene_3d_instance(const Htuple Scene3D, const Htuple ObjectModel3D, const Htuple Pose, Htuple *InstanceIndex);
LIntExport Herror T_add_scene_3d_camera(const Htuple Scene3D, const Htuple CameraParam, Htuple *CameraIndex);
LIntExport Herror T_clear_scene_3d(const Htuple Scene3D);
LIntExport Herror clear_scene_3d(Hlong Scene3D);
LIntExport Herror T_create_scene_3d(Htuple *Scene3D);
LIntExport Herror create_scene_3d(Hlong *Scene3D);
LIntExport Herror T_get_window_param(const Htuple WindowHandle, const Htuple Param, Htuple *Value);
LIntExport Herror T_set_window_param(const Htuple WindowHandle, const Htuple Param, const Htuple Value);
LIntExport Herror T_set_shape(const Htuple WindowHandle, const Htuple Shape);
LIntExport Herror set_shape(Hlong WindowHandle, const char *Shape);
LIntExport Herror T_set_rgb(const Htuple WindowHandle, const Htuple Red, const Htuple Green, const Htuple Blue);
LIntExport Herror set_rgb(Hlong WindowHandle, Hlong Red, Hlong Green, Hlong Blue);
LIntExport Herror T_set_pixel(const Htuple WindowHandle, const Htuple Pixel);
LIntExport Herror set_pixel(Hlong WindowHandle, Hlong Pixel);
LIntExport Herror T_set_part_style(const Htuple WindowHandle, const Htuple Style);
LIntExport Herror set_part_style(Hlong WindowHandle, Hlong Style);
LIntExport Herror T_set_part(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror set_part(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror T_set_paint(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror T_set_line_width(const Htuple WindowHandle, const Htuple Width);
LIntExport Herror set_line_width(Hlong WindowHandle, Hlong Width);
LIntExport Herror T_set_line_style(const Htuple WindowHandle, const Htuple Style);
LIntExport Herror T_set_line_approx(const Htuple WindowHandle, const Htuple Approximation);
LIntExport Herror set_line_approx(Hlong WindowHandle, Hlong Approximation);
LIntExport Herror T_set_insert(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror set_insert(Hlong WindowHandle, const char *Mode);
LIntExport Herror T_set_hsi(const Htuple WindowHandle, const Htuple Hue, const Htuple Saturation, const Htuple Intensity);
LIntExport Herror set_hsi(Hlong WindowHandle, Hlong Hue, Hlong Saturation, Hlong Intensity);
LIntExport Herror T_set_gray(const Htuple WindowHandle, const Htuple GrayValues);
LIntExport Herror set_gray(Hlong WindowHandle, Hlong GrayValues);
LIntExport Herror T_set_draw(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror set_draw(Hlong WindowHandle, const char *Mode);
LIntExport Herror T_set_comprise(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror set_comprise(Hlong WindowHandle, const char *Mode);
LIntExport Herror T_set_colored(const Htuple WindowHandle, const Htuple NumberOfColors);
LIntExport Herror set_colored(Hlong WindowHandle, Hlong NumberOfColors);
LIntExport Herror T_set_color(const Htuple WindowHandle, const Htuple Color);
LIntExport Herror set_color(Hlong WindowHandle, const char *Color);
LIntExport Herror T_get_shape(const Htuple WindowHandle, Htuple *DisplayShape);
LIntExport Herror get_shape(Hlong WindowHandle, char *DisplayShape);
LIntExport Herror T_get_rgb(const Htuple WindowHandle, Htuple *Red, Htuple *Green, Htuple *Blue);
LIntExport Herror T_get_pixel(const Htuple WindowHandle, Htuple *Pixel);
LIntExport Herror T_get_part_style(const Htuple WindowHandle, Htuple *Style);
LIntExport Herror get_part_style(Hlong WindowHandle, Hlong *Style);
LIntExport Herror T_get_part(const Htuple WindowHandle, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror get_part(Hlong WindowHandle, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror T_get_paint(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror T_get_line_width(const Htuple WindowHandle, Htuple *Width);
LIntExport Herror get_line_width(Hlong WindowHandle, Hlong *Width);
LIntExport Herror T_get_line_style(const Htuple WindowHandle, Htuple *Style);
LIntExport Herror T_get_line_approx(const Htuple WindowHandle, Htuple *Approximation);
LIntExport Herror get_line_approx(Hlong WindowHandle, Hlong *Approximation);
LIntExport Herror T_get_insert(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror get_insert(Hlong WindowHandle, char *Mode);
LIntExport Herror T_get_hsi(const Htuple WindowHandle, Htuple *Hue, Htuple *Saturation, Htuple *Intensity);
LIntExport Herror T_get_draw(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror get_draw(Hlong WindowHandle, char *Mode);
LIntExport Herror T_get_comprise(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror get_comprise(Hlong WindowHandle, char *Mode);
LIntExport Herror T_query_shape(Htuple *DisplayShape);
LIntExport Herror T_query_paint(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror T_query_line_width(Htuple *Min, Htuple *Max);
LIntExport Herror query_line_width(Hlong *Min, Hlong *Max);
LIntExport Herror T_query_insert(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror T_query_gray(const Htuple WindowHandle, Htuple *Grayval);
LIntExport Herror T_query_colored(Htuple *PossibleNumberOfColors);
LIntExport Herror T_query_all_colors(const Htuple WindowHandle, Htuple *Colors);
LIntExport Herror T_query_color(const Htuple WindowHandle, Htuple *Colors);
LIntExport Herror T_get_icon(Hobject *Icon, const Htuple WindowHandle);
LIntExport Herror get_icon(Hobject *Icon, Hlong WindowHandle);
LIntExport Herror T_set_icon(const Hobject Icon, const Htuple WindowHandle);
LIntExport Herror set_icon(const Hobject Icon, Hlong WindowHandle);
LIntExport Herror T_disp_region(const Hobject DispRegions, const Htuple WindowHandle);
LIntExport Herror disp_region(const Hobject DispRegions, Hlong WindowHandle);
LIntExport Herror T_disp_rectangle2(const Htuple WindowHandle, const Htuple CenterRow, const Htuple CenterCol, const Htuple Phi, const Htuple Length1, const Htuple Length2);
LIntExport Herror disp_rectangle2(Hlong WindowHandle, double CenterRow, double CenterCol, double Phi, double Length1, double Length2);
LIntExport Herror T_disp_rectangle1(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror disp_rectangle1(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror T_disp_polygon(const Htuple WindowHandle, const Htuple Row, const Htuple Column);
LIntExport Herror T_disp_line(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2);
LIntExport Herror disp_line(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror T_disp_cross(const Htuple WindowHandle, const Htuple Row, const Htuple Column, const Htuple Size, const Htuple Angle);
LIntExport Herror disp_cross(Hlong WindowHandle, double Row, double Column, double Size, double Angle);
LIntExport Herror T_disp_image(const Hobject Image, const Htuple WindowHandle);
LIntExport Herror disp_image(const Hobject Image, Hlong WindowHandle);
LIntExport Herror T_disp_channel(const Hobject MultichannelImage, const Htuple WindowHandle, const Htuple Channel);
LIntExport Herror disp_channel(const Hobject MultichannelImage, Hlong WindowHandle, Hlong Channel);
LIntExport Herror T_disp_color(const Hobject ColorImage, const Htuple WindowHandle);
LIntExport Herror disp_color(const Hobject ColorImage, Hlong WindowHandle);
LIntExport Herror T_disp_ellipse(const Htuple WindowHandle, const Htuple CenterRow, const Htuple CenterCol, const Htuple Phi, const Htuple Radius1, const Htuple Radius2);
LIntExport Herror disp_ellipse(Hlong WindowHandle, Hlong CenterRow, Hlong CenterCol, double Phi, double Radius1, double Radius2);
LIntExport Herror T_disp_distribution(const Htuple WindowHandle, const Htuple Distribution, const Htuple Row, const Htuple Column, const Htuple Scale);
LIntExport Herror T_disp_circle(const Htuple WindowHandle, const Htuple Row, const Htuple Column, const Htuple Radius);
LIntExport Herror disp_circle(Hlong WindowHandle, double Row, double Column, double Radius);
LIntExport Herror T_disp_arrow(const Htuple WindowHandle, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, const Htuple Size);
LIntExport Herror disp_arrow(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2, double Size);
LIntExport Herror T_disp_arc(const Htuple WindowHandle, const Htuple CenterRow, const Htuple CenterCol, const Htuple Angle, const Htuple BeginRow, const Htuple BeginCol);
LIntExport Herror disp_arc(Hlong WindowHandle, double CenterRow, double CenterCol, double Angle, Hlong BeginRow, Hlong BeginCol);
LIntExport Herror T_disp_obj(const Hobject Object, const Htuple WindowHandle);
LIntExport Herror disp_obj(const Hobject Object, Hlong WindowHandle);
LIntExport Herror T_set_mshape(const Htuple WindowHandle, const Htuple Cursor);
LIntExport Herror set_mshape(Hlong WindowHandle, const char *Cursor);
LIntExport Herror T_get_mshape(const Htuple WindowHandle, Htuple *Cursor);
LIntExport Herror get_mshape(Hlong WindowHandle, char *Cursor);
LIntExport Herror T_query_mshape(const Htuple WindowHandle, Htuple *ShapeNames);
LIntExport Herror T_get_mposition_sub_pix(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Button);
LIntExport Herror get_mposition_sub_pix(Hlong WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror T_get_mposition(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Button);
LIntExport Herror get_mposition(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror T_get_mbutton_sub_pix(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Button);
LIntExport Herror get_mbutton_sub_pix(Hlong WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror T_get_mbutton(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Button);
LIntExport Herror get_mbutton(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror T_write_lut(const Htuple WindowHandle, const Htuple FileName);
LIntExport Herror write_lut(Hlong WindowHandle, const char *FileName);
LIntExport Herror T_disp_lut(const Htuple WindowHandle, const Htuple Row, const Htuple Column, const Htuple Scale);
LIntExport Herror disp_lut(Hlong WindowHandle, Hlong Row, Hlong Column, Hlong Scale);
LIntExport Herror T_query_lut(const Htuple WindowHandle, Htuple *LookUpTable);
LIntExport Herror T_draw_lut(const Htuple WindowHandle);
LIntExport Herror draw_lut(Hlong WindowHandle);
LIntExport Herror T_get_lut_style(const Htuple WindowHandle, Htuple *Hue, Htuple *Saturation, Htuple *Intensity);
LIntExport Herror get_lut_style(Hlong WindowHandle, double *Hue, double *Saturation, double *Intensity);
LIntExport Herror T_set_lut_style(const Htuple WindowHandle, const Htuple Hue, const Htuple Saturation, const Htuple Intensity);
LIntExport Herror set_lut_style(Hlong WindowHandle, double Hue, double Saturation, double Intensity);
LIntExport Herror T_get_lut(const Htuple WindowHandle, Htuple *LookUpTable);
LIntExport Herror T_set_lut(const Htuple WindowHandle, const Htuple LookUpTable);
LIntExport Herror set_lut(Hlong WindowHandle, const char *LookUpTable);
LIntExport Herror T_get_fix(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror get_fix(Hlong WindowHandle, char *Mode);
LIntExport Herror T_set_fix(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror set_fix(Hlong WindowHandle, const char *Mode);
LIntExport Herror T_get_fixed_lut(const Htuple WindowHandle, Htuple *Mode);
LIntExport Herror get_fixed_lut(Hlong WindowHandle, char *Mode);
LIntExport Herror T_set_fixed_lut(const Htuple WindowHandle, const Htuple Mode);
LIntExport Herror set_fixed_lut(Hlong WindowHandle, const char *Mode);
LIntExport Herror T_gnuplot_plot_funct_1d(const Htuple GnuplotFileID, const Htuple Function);
LIntExport Herror T_gnuplot_plot_ctrl(const Htuple GnuplotFileID, const Htuple Values);
LIntExport Herror T_gnuplot_plot_image(const Hobject Image, const Htuple GnuplotFileID, const Htuple SamplesX, const Htuple SamplesY, const Htuple ViewRotX, const Htuple ViewRotZ, const Htuple Hidden3D);
LIntExport Herror gnuplot_plot_image(const Hobject Image, Hlong GnuplotFileID, Hlong SamplesX, Hlong SamplesY, double ViewRotX, double ViewRotZ, const char *Hidden3D);
LIntExport Herror T_gnuplot_close(const Htuple GnuplotFileID);
LIntExport Herror gnuplot_close(Hlong GnuplotFileID);
LIntExport Herror T_gnuplot_open_file(const Htuple FileName, Htuple *GnuplotFileID);
LIntExport Herror gnuplot_open_file(const char *FileName, Hlong *GnuplotFileID);
LIntExport Herror T_gnuplot_open_pipe(Htuple *GnuplotFileID);
LIntExport Herror gnuplot_open_pipe(Hlong *GnuplotFileID);
LIntExport Herror T_create_drawing_object_text(const Htuple Row, const Htuple Column, const Htuple String, Htuple *DrawID);
LIntExport Herror create_drawing_object_text(Hlong Row, Hlong Column, const char *String, Hlong *DrawID);
LIntExport Herror T_get_drawing_object_iconic(Hobject *Object, const Htuple DrawID);
LIntExport Herror get_drawing_object_iconic(Hobject *Object, Hlong DrawID);
LIntExport Herror T_clear_drawing_object(const Htuple DrawID);
LIntExport Herror clear_drawing_object(Hlong DrawID);
LIntExport Herror T_set_drawing_object_params(const Htuple DrawID, const Htuple ParamNames, const Htuple ParamValues);
LIntExport Herror set_drawing_object_params(Hlong DrawID, const char *ParamNames, double ParamValues);
LIntExport Herror T_get_drawing_object_params(const Htuple DrawID, const Htuple ParamNames, Htuple *ParamValues);
LIntExport Herror get_drawing_object_params(Hlong DrawID, const char *ParamNames, double *ParamValues);
LIntExport Herror T_set_drawing_object_xld(const Hobject Contour, const Htuple DrawID);
LIntExport Herror set_drawing_object_xld(const Hobject Contour, Hlong DrawID);
LIntExport Herror T_create_drawing_object_xld(const Htuple Row, const Htuple Column, Htuple *DrawID);
LIntExport Herror T_create_drawing_object_circle_sector(const Htuple Row, const Htuple Column, const Htuple Radius, const Htuple StartAngle, const Htuple EndAngle, Htuple *DrawID);
LIntExport Herror create_drawing_object_circle_sector(double Row, double Column, double Radius, double StartAngle, double EndAngle, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_ellipse_sector(const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, const Htuple StartAngle, const Htuple EndAngle, Htuple *DrawID);
LIntExport Herror create_drawing_object_ellipse_sector(double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_line(const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DrawID);
LIntExport Herror create_drawing_object_line(double Row1, double Column1, double Row2, double Column2, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_circle(const Htuple Row, const Htuple Column, const Htuple Radius, Htuple *DrawID);
LIntExport Herror create_drawing_object_circle(double Row, double Column, double Radius, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_ellipse(const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, Htuple *DrawID);
LIntExport Herror create_drawing_object_ellipse(double Row, double Column, double Phi, double Radius1, double Radius2, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_rectangle2(const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2, Htuple *DrawID);
LIntExport Herror create_drawing_object_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Hlong *DrawID);
LIntExport Herror T_create_drawing_object_rectangle1(const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DrawID);
LIntExport Herror create_drawing_object_rectangle1(double Row1, double Column1, double Row2, double Column2, Hlong *DrawID);
LIntExport Herror T_drag_region3(const Hobject SourceRegion, const Hobject MaskRegion, Hobject *DestinationRegion, const Htuple WindowHandle, const Htuple Row, const Htuple Column);
LIntExport Herror drag_region3(const Hobject SourceRegion, const Hobject MaskRegion, Hobject *DestinationRegion, Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror T_drag_region2(const Hobject SourceRegion, Hobject *DestinationRegion, const Htuple WindowHandle, const Htuple Row, const Htuple Column);
LIntExport Herror drag_region2(const Hobject SourceRegion, Hobject *DestinationRegion, Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror T_drag_region1(const Hobject SourceRegion, Hobject *DestinationRegion, const Htuple WindowHandle);
LIntExport Herror drag_region1(const Hobject SourceRegion, Hobject *DestinationRegion, Hlong WindowHandle);
LIntExport Herror T_draw_nurbs_interp_mod(Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio, const Htuple Edit, const Htuple Degree, const Htuple RowsIn, const Htuple ColsIn, const Htuple TangentsIn, Htuple *ControlRows, Htuple *ControlCols, Htuple *Knots, Htuple *Rows, Htuple *Cols, Htuple *Tangents);
LIntExport Herror T_draw_nurbs_interp(Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio, const Htuple Degree, Htuple *ControlRows, Htuple *ControlCols, Htuple *Knots, Htuple *Rows, Htuple *Cols, Htuple *Tangents);
LIntExport Herror T_draw_nurbs_mod(Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio, const Htuple Edit, const Htuple Degree, const Htuple RowsIn, const Htuple ColsIn, const Htuple WeightsIn, Htuple *Rows, Htuple *Cols, Htuple *Weights);
LIntExport Herror T_draw_nurbs(Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio, const Htuple Degree, Htuple *Rows, Htuple *Cols, Htuple *Weights);
LIntExport Herror T_draw_xld_mod(const Hobject ContIn, Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio, const Htuple Edit);
LIntExport Herror draw_xld_mod(const Hobject ContIn, Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio, const char *Edit);
LIntExport Herror T_draw_xld(Hobject *ContOut, const Htuple WindowHandle, const Htuple Rotate, const Htuple Move, const Htuple Scale, const Htuple KeepRatio);
LIntExport Herror draw_xld(Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio);
LIntExport Herror T_draw_rectangle2_mod(const Htuple WindowHandle, const Htuple RowIn, const Htuple ColumnIn, const Htuple PhiIn, const Htuple Length1In, const Htuple Length2In, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2);
LIntExport Herror draw_rectangle2_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Length1In, double Length2In, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror T_draw_rectangle2(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2);
LIntExport Herror draw_rectangle2(Hlong WindowHandle, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror T_draw_rectangle1_mod(const Htuple WindowHandle, const Htuple Row1In, const Htuple Column1In, const Htuple Row2In, const Htuple Column2In, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror draw_rectangle1_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror T_draw_rectangle1(const Htuple WindowHandle, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror draw_rectangle1(Hlong WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror T_draw_point_mod(const Htuple WindowHandle, const Htuple RowIn, const Htuple ColumnIn, Htuple *Row, Htuple *Column);
LIntExport Herror draw_point_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double *Row, double *Column);
LIntExport Herror T_draw_point(const Htuple WindowHandle, Htuple *Row, Htuple *Column);
LIntExport Herror draw_point(Hlong WindowHandle, double *Row, double *Column);
LIntExport Herror T_draw_line_mod(const Htuple WindowHandle, const Htuple Row1In, const Htuple Column1In, const Htuple Row2In, const Htuple Column2In, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror draw_line_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror T_draw_line(const Htuple WindowHandle, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror draw_line(Hlong WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror T_draw_ellipse_mod(const Htuple WindowHandle, const Htuple RowIn, const Htuple ColumnIn, const Htuple PhiIn, const Htuple Radius1In, const Htuple Radius2In, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Radius1, Htuple *Radius2);
LIntExport Herror draw_ellipse_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Radius1In, double Radius2In, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror T_draw_ellipse(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Radius1, Htuple *Radius2);
LIntExport Herror draw_ellipse(Hlong WindowHandle, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror T_draw_circle_mod(const Htuple WindowHandle, const Htuple RowIn, const Htuple ColumnIn, const Htuple RadiusIn, Htuple *Row, Htuple *Column, Htuple *Radius);
LIntExport Herror draw_circle_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double RadiusIn, double *Row, double *Column, double *Radius);
LIntExport Herror T_draw_circle(const Htuple WindowHandle, Htuple *Row, Htuple *Column, Htuple *Radius);
LIntExport Herror draw_circle(Hlong WindowHandle, double *Row, double *Column, double *Radius);
LIntExport Herror T_draw_region(Hobject *Region, const Htuple WindowHandle);
LIntExport Herror draw_region(Hobject *Region, Hlong WindowHandle);
LIntExport Herror T_draw_polygon(Hobject *PolygonRegion, const Htuple WindowHandle);
LIntExport Herror draw_polygon(Hobject *PolygonRegion, Hlong WindowHandle);
LIntExport Herror T_projection_pl(const Htuple Row, const Htuple Column, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *RowProj, Htuple *ColProj);
LIntExport Herror projection_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *RowProj, double *ColProj);
LIntExport Herror T_get_points_ellipse(const Htuple Angle, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Radius1, const Htuple Radius2, Htuple *RowPoint, Htuple *ColPoint);
LIntExport Herror get_points_ellipse(double Angle, double Row, double Column, double Phi, double Radius1, double Radius2, double *RowPoint, double *ColPoint);
LIntExport Herror T_intersection_ll(const Htuple RowA1, const Htuple ColumnA1, const Htuple RowA2, const Htuple ColumnA2, const Htuple RowB1, const Htuple ColumnB1, const Htuple RowB2, const Htuple ColumnB2, Htuple *Row, Htuple *Column, Htuple *IsParallel);
LIntExport Herror intersection_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *Row, double *Column, Hlong *IsParallel);
LIntExport Herror T_intersection_contours_xld(const Hobject Contour1, const Hobject Contour2, const Htuple IntersectionType, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_contours_xld(const Hobject Contour1, const Hobject Contour2, const char *IntersectionType, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_circle_contour_xld(const Hobject Contour, const Htuple CircleRow, const Htuple CircleColumn, const Htuple CircleRadius, const Htuple CircleStartPhi, const Htuple CircleEndPhi, const Htuple CirclePointOrder, Htuple *Row, Htuple *Column);
LIntExport Herror intersection_circle_contour_xld(const Hobject Contour, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror T_intersection_circles(const Htuple Circle1Row, const Htuple Circle1Column, const Htuple Circle1Radius, const Htuple Circle1StartPhi, const Htuple Circle1EndPhi, const Htuple Circle1PointOrder, const Htuple Circle2Row, const Htuple Circle2Column, const Htuple Circle2Radius, const Htuple Circle2StartPhi, const Htuple Circle2EndPhi, const Htuple Circle2PointOrder, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_circles(double Circle1Row, double Circle1Column, double Circle1Radius, double Circle1StartPhi, double Circle1EndPhi, const char *Circle1PointOrder, double Circle2Row, double Circle2Column, double Circle2Radius, double Circle2StartPhi, double Circle2EndPhi, const char *Circle2PointOrder, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_line_contour_xld(const Hobject Contour, const Htuple LineRow1, const Htuple LineColumn1, const Htuple LineRow2, const Htuple LineColumn2, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_line_contour_xld(const Hobject Contour, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_line_circle(const Htuple LineRow1, const Htuple LineColumn1, const Htuple LineRow2, const Htuple LineColumn2, const Htuple CircleRow, const Htuple CircleColumn, const Htuple CircleRadius, const Htuple CircleStartPhi, const Htuple CircleEndPhi, const Htuple CirclePointOrder, Htuple *Row, Htuple *Column);
LIntExport Herror intersection_line_circle(double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror T_intersection_lines(const Htuple Line1Row1, const Htuple Line1Column1, const Htuple Line1Row2, const Htuple Line1Column2, const Htuple Line2Row1, const Htuple Line2Column1, const Htuple Line2Row2, const Htuple Line2Column2, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_lines(double Line1Row1, double Line1Column1, double Line1Row2, double Line1Column2, double Line2Row1, double Line2Column1, double Line2Row2, double Line2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_segment_contour_xld(const Hobject Contour, const Htuple SegmentRow1, const Htuple SegmentColumn1, const Htuple SegmentRow2, const Htuple SegmentColumn2, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_segment_contour_xld(const Hobject Contour, double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_segment_circle(const Htuple SegmentRow1, const Htuple SegmentColumn1, const Htuple SegmentRow2, const Htuple SegmentColumn2, const Htuple CircleRow, const Htuple CircleColumn, const Htuple CircleRadius, const Htuple CircleStartPhi, const Htuple CircleEndPhi, const Htuple CirclePointOrder, Htuple *Row, Htuple *Column);
LIntExport Herror intersection_segment_circle(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror T_intersection_segment_line(const Htuple SegmentRow1, const Htuple SegmentColumn1, const Htuple SegmentRow2, const Htuple SegmentColumn2, const Htuple LineRow1, const Htuple LineColumn1, const Htuple LineRow2, const Htuple LineColumn2, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_segment_line(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_intersection_segments(const Htuple Segment1Row1, const Htuple Segment1Column1, const Htuple Segment1Row2, const Htuple Segment1Column2, const Htuple Segment2Row1, const Htuple Segment2Column1, const Htuple Segment2Row2, const Htuple Segment2Column2, Htuple *Row, Htuple *Column, Htuple *IsOverlapping);
LIntExport Herror intersection_segments(double Segment1Row1, double Segment1Column1, double Segment1Row2, double Segment1Column2, double Segment2Row1, double Segment2Column1, double Segment2Row2, double Segment2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror T_clear_distance_transform_xld(const Htuple DistanceTransformID);
LIntExport Herror clear_distance_transform_xld(Hlong DistanceTransformID);
LIntExport Herror T_apply_distance_transform_xld(const Hobject Contour, Hobject *ContourOut, const Htuple DistanceTransformID);
LIntExport Herror apply_distance_transform_xld(const Hobject Contour, Hobject *ContourOut, Hlong DistanceTransformID);
LIntExport Herror T_read_distance_transform_xld(const Htuple FileName, Htuple *DistanceTransformID);
LIntExport Herror read_distance_transform_xld(const char *FileName, Hlong *DistanceTransformID);
LIntExport Herror T_deserialize_distance_transform_xld(const Htuple SerializedItemHandle, Htuple *DistanceTransformID);
LIntExport Herror deserialize_distance_transform_xld(Hlong SerializedItemHandle, Hlong *DistanceTransformID);
LIntExport Herror T_serialize_distance_transform_xld(const Htuple DistanceTransformID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_distance_transform_xld(Hlong DistanceTransformID, Hlong *SerializedItemHandle);
LIntExport Herror T_write_distance_transform_xld(const Htuple DistanceTransformID, const Htuple FileName);
LIntExport Herror write_distance_transform_xld(Hlong DistanceTransformID, const char *FileName);
LIntExport Herror T_set_distance_transform_xld_param(const Htuple DistanceTransformID, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_distance_transform_xld_param(Hlong DistanceTransformID, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_get_distance_transform_xld_param(const Htuple DistanceTransformID, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_distance_transform_xld_param(Hlong DistanceTransformID, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_get_distance_transform_xld_contour(Hobject *Contour, const Htuple DistanceTransformID);
LIntExport Herror get_distance_transform_xld_contour(Hobject *Contour, Hlong DistanceTransformID);
LIntExport Herror T_create_distance_transform_xld(const Hobject Contour, const Htuple Mode, const Htuple MaxDistance, Htuple *DistanceTransformID);
LIntExport Herror create_distance_transform_xld(const Hobject Contour, const char *Mode, double MaxDistance, Hlong *DistanceTransformID);
LIntExport Herror T_distance_contours_xld(const Hobject ContourFrom, const Hobject ContourTo, Hobject *ContourOut, const Htuple Mode);
LIntExport Herror distance_contours_xld(const Hobject ContourFrom, const Hobject ContourTo, Hobject *ContourOut, const char *Mode);
LIntExport Herror T_distance_cc_min(const Hobject Contour1, const Hobject Contour2, const Htuple Mode, Htuple *DistanceMin);
LIntExport Herror distance_cc_min(const Hobject Contour1, const Hobject Contour2, const char *Mode, double *DistanceMin);
LIntExport Herror T_distance_cc(const Hobject Contour1, const Hobject Contour2, const Htuple Mode, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_cc(const Hobject Contour1, const Hobject Contour2, const char *Mode, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_sc(const Hobject Contour, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_sc(const Hobject Contour, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_lc(const Hobject Contour, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_lc(const Hobject Contour, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_pc(const Hobject Contour, const Htuple Row, const Htuple Column, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_pc(const Hobject Contour, double Row, double Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_sr(const Hobject Region, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_sr(const Hobject Region, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_lr(const Hobject Region, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_lr(const Hobject Region, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_pr(const Hobject Region, const Htuple Row, const Htuple Column, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_pr(const Hobject Region, double Row, double Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_angle_lx(const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *Angle);
LIntExport Herror angle_lx(double Row1, double Column1, double Row2, double Column2, double *Angle);
LIntExport Herror T_angle_ll(const Htuple RowA1, const Htuple ColumnA1, const Htuple RowA2, const Htuple ColumnA2, const Htuple RowB1, const Htuple ColumnB1, const Htuple RowB2, const Htuple ColumnB2, Htuple *Angle);
LIntExport Herror angle_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *Angle);
LIntExport Herror T_distance_sl(const Htuple RowA1, const Htuple ColumnA1, const Htuple RowA2, const Htuple ColumnA2, const Htuple RowB1, const Htuple ColumnB1, const Htuple RowB2, const Htuple ColumnB2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_sl(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_ss(const Htuple RowA1, const Htuple ColumnA1, const Htuple RowA2, const Htuple ColumnA2, const Htuple RowB1, const Htuple ColumnB1, const Htuple RowB2, const Htuple ColumnB2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_ss(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_ps(const Htuple Row, const Htuple Column, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *DistanceMin, Htuple *DistanceMax);
LIntExport Herror distance_ps(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror T_distance_pl(const Htuple Row, const Htuple Column, const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *Distance);
LIntExport Herror distance_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *Distance);
LIntExport Herror T_distance_pp(const Htuple Row1, const Htuple Column1, const Htuple Row2, const Htuple Column2, Htuple *Distance);
LIntExport Herror distance_pp(double Row1, double Column1, double Row2, double Column2, double *Distance);
LIntExport Herror T_compose_funct_1d(const Htuple Function1, const Htuple Function2, const Htuple Border, Htuple *ComposedFunction);
LIntExport Herror T_invert_funct_1d(const Htuple Function, Htuple *InverseFunction);
LIntExport Herror T_derivate_funct_1d(const Htuple Function, const Htuple Mode, Htuple *Derivative);
LIntExport Herror T_local_min_max_funct_1d(const Htuple Function, const Htuple Mode, const Htuple Interpolation, Htuple *Min, Htuple *Max);
LIntExport Herror T_zero_crossings_funct_1d(const Htuple Function, Htuple *ZeroCrossings);
LIntExport Herror T_scale_y_funct_1d(const Htuple Function, const Htuple Mult, const Htuple Add, Htuple *FunctionScaled);
LIntExport Herror T_negate_funct_1d(const Htuple Function, Htuple *FunctionInverted);
LIntExport Herror T_abs_funct_1d(const Htuple Function, Htuple *FunctionAbsolute);
LIntExport Herror T_get_y_value_funct_1d(const Htuple Function, const Htuple X, const Htuple Border, Htuple *Y);
LIntExport Herror T_get_pair_funct_1d(const Htuple Function, const Htuple Index, Htuple *X, Htuple *Y);
LIntExport Herror T_num_points_funct_1d(const Htuple Function, Htuple *Length);
LIntExport Herror T_y_range_funct_1d(const Htuple Function, Htuple *YMin, Htuple *YMax);
LIntExport Herror T_x_range_funct_1d(const Htuple Function, Htuple *XMin, Htuple *XMax);
LIntExport Herror T_funct_1d_to_pairs(const Htuple Function, Htuple *XValues, Htuple *YValues);
LIntExport Herror T_sample_funct_1d(const Htuple Function, const Htuple XMin, const Htuple XMax, const Htuple XDist, const Htuple Border, Htuple *SampledFunction);
LIntExport Herror T_transform_funct_1d(const Htuple Function, const Htuple Params, Htuple *TransformedFunction);
LIntExport Herror T_match_funct_1d_trans(const Htuple Function1, const Htuple Function2, const Htuple Border, const Htuple ParamsConst, const Htuple UseParams, Htuple *Params, Htuple *ChiSquare, Htuple *Covar);
LIntExport Herror T_distance_funct_1d(const Htuple Function1, const Htuple Function2, const Htuple Mode, const Htuple Sigma, Htuple *Distance);
LIntExport Herror T_smooth_funct_1d_gauss(const Htuple Function, const Htuple Sigma, Htuple *SmoothedFunction);
LIntExport Herror T_integrate_funct_1d(const Htuple Function, Htuple *Positive, Htuple *Negative);
LIntExport Herror T_read_funct_1d(const Htuple FileName, Htuple *Function);
LIntExport Herror read_funct_1d(const char *FileName, double *Function);
LIntExport Herror T_write_funct_1d(const Htuple Function, const Htuple FileName);
LIntExport Herror T_create_funct_1d_array(const Htuple YValues, Htuple *Function);
LIntExport Herror T_create_funct_1d_pairs(const Htuple XValues, const Htuple YValues, Htuple *Function);
LIntExport Herror T_smooth_funct_1d_mean(const Htuple Function, const Htuple SmoothSize, const Htuple Iterations, Htuple *SmoothedFunction);
LIntExport Herror T_match_fourier_coeff(const Htuple RealCoef1, const Htuple ImaginaryCoef1, const Htuple RealCoef2, const Htuple ImaginaryCoef2, const Htuple MaxCoef, const Htuple Damping, Htuple *Distance);
LIntExport Herror T_fourier_1dim_inv(const Htuple RealCoef, const Htuple ImaginaryCoef, const Htuple MaxCoef, Htuple *Rows, Htuple *Columns);
LIntExport Herror T_abs_invar_fourier_coeff(const Htuple RealInvar, const Htuple ImaginaryInvar, const Htuple CoefP, const Htuple CoefQ, const Htuple AZInvar, Htuple *RealAbsInvar, Htuple *ImaginaryAbsInvar);
LIntExport Herror T_invar_fourier_coeff(const Htuple RealCoef, const Htuple ImaginaryCoef, const Htuple NormPar, const Htuple InvarType, Htuple *RealInvar, Htuple *ImaginaryInvar);
LIntExport Herror T_fourier_1dim(const Htuple Rows, const Htuple Columns, const Htuple ParContour, const Htuple MaxCoef, Htuple *RealCoef, Htuple *ImaginaryCoef);
LIntExport Herror T_prep_contour_fourier(const Htuple Rows, const Htuple Columns, const Htuple TransMode, Htuple *ParContour);
LIntExport Herror T_move_contour_orig(const Htuple Rows, const Htuple Columns, Htuple *RowsMoved, Htuple *ColumnsMoved);
LIntExport Herror T_texture_laws(const Hobject Image, Hobject *ImageTexture, const Htuple FilterTypes, const Htuple Shift, const Htuple FilterSize);
LIntExport Herror texture_laws(const Hobject Image, Hobject *ImageTexture, const char *FilterTypes, Hlong Shift, Hlong FilterSize);
LIntExport Herror T_deviation_image(const Hobject Image, Hobject *ImageDeviation, const Htuple Width, const Htuple Height);
LIntExport Herror deviation_image(const Hobject Image, Hobject *ImageDeviation, Hlong Width, Hlong Height);
LIntExport Herror T_entropy_image(const Hobject Image, Hobject *ImageEntropy, const Htuple Width, const Htuple Height);
LIntExport Herror entropy_image(const Hobject Image, Hobject *ImageEntropy, Hlong Width, Hlong Height);
LIntExport Herror T_isotropic_diffusion(const Hobject Image, Hobject *SmoothedImage, const Htuple Sigma, const Htuple Iterations);
LIntExport Herror isotropic_diffusion(const Hobject Image, Hobject *SmoothedImage, double Sigma, Hlong Iterations);
LIntExport Herror T_anisotropic_diffusion(const Hobject Image, Hobject *ImageAniso, const Htuple Mode, const Htuple Contrast, const Htuple Theta, const Htuple Iterations);
LIntExport Herror anisotropic_diffusion(const Hobject Image, Hobject *ImageAniso, const char *Mode, double Contrast, double Theta, Hlong Iterations);
LIntExport Herror T_smooth_image(const Hobject Image, Hobject *ImageSmooth, const Htuple Filter, const Htuple Alpha);
LIntExport Herror smooth_image(const Hobject Image, Hobject *ImageSmooth, const char *Filter, double Alpha);
LIntExport Herror T_sigma_image(const Hobject Image, Hobject *ImageSigma, const Htuple MaskHeight, const Htuple MaskWidth, const Htuple Sigma);
LIntExport Herror sigma_image(const Hobject Image, Hobject *ImageSigma, Hlong MaskHeight, Hlong MaskWidth, Hlong Sigma);
LIntExport Herror T_midrange_image(const Hobject Image, const Hobject Mask, Hobject *ImageMidrange, const Htuple Margin);
LIntExport Herror midrange_image(const Hobject Image, const Hobject Mask, Hobject *ImageMidrange, const char *Margin);
LIntExport Herror T_trimmed_mean(const Hobject Image, const Hobject Mask, Hobject *ImageTMean, const Htuple Number, const Htuple Margin);
LIntExport Herror trimmed_mean(const Hobject Image, const Hobject Mask, Hobject *ImageTMean, Hlong Number, const char *Margin);
LIntExport Herror T_median_separate(const Hobject Image, Hobject *ImageSMedian, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple Margin);
LIntExport Herror median_separate(const Hobject Image, Hobject *ImageSMedian, Hlong MaskWidth, Hlong MaskHeight, const char *Margin);
LIntExport Herror T_median_rect(const Hobject Image, Hobject *ImageMedian, const Htuple MaskWidth, const Htuple MaskHeight);
LIntExport Herror median_rect(const Hobject Image, Hobject *ImageMedian, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror T_median_image(const Hobject Image, Hobject *ImageMedian, const Htuple MaskType, const Htuple Radius, const Htuple Margin);
LIntExport Herror median_image(const Hobject Image, Hobject *ImageMedian, const char *MaskType, Hlong Radius, const char *Margin);
LIntExport Herror T_median_weighted(const Hobject Image, Hobject *ImageWMedian, const Htuple MaskType, const Htuple MaskSize);
LIntExport Herror median_weighted(const Hobject Image, Hobject *ImageWMedian, const char *MaskType, Hlong MaskSize);
LIntExport Herror T_rank_rect(const Hobject Image, Hobject *ImageRank, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple Rank);
LIntExport Herror rank_rect(const Hobject Image, Hobject *ImageRank, Hlong MaskWidth, Hlong MaskHeight, Hlong Rank);
LIntExport Herror T_rank_image(const Hobject Image, const Hobject Mask, Hobject *ImageRank, const Htuple Rank, const Htuple Margin);
LIntExport Herror rank_image(const Hobject Image, const Hobject Mask, Hobject *ImageRank, Hlong Rank, const char *Margin);
LIntExport Herror T_dual_rank(const Hobject Image, Hobject *ImageRank, const Htuple MaskType, const Htuple Radius, const Htuple ModePercent, const Htuple Margin);
LIntExport Herror dual_rank(const Hobject Image, Hobject *ImageRank, const char *MaskType, Hlong Radius, Hlong ModePercent, const char *Margin);
LIntExport Herror T_mean_image(const Hobject Image, Hobject *ImageMean, const Htuple MaskWidth, const Htuple MaskHeight);
LIntExport Herror mean_image(const Hobject Image, Hobject *ImageMean, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror T_info_smooth(const Htuple Filter, const Htuple Alpha, Htuple *Size, Htuple *Coeffs);
LIntExport Herror T_binomial_filter(const Hobject Image, Hobject *ImageBinomial, const Htuple MaskWidth, const Htuple MaskHeight);
LIntExport Herror binomial_filter(const Hobject Image, Hobject *ImageBinomial, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror T_gauss_image(const Hobject Image, Hobject *ImageGauss, const Htuple Size);
LIntExport Herror gauss_image(const Hobject Image, Hobject *ImageGauss, Hlong Size);
LIntExport Herror T_gauss_filter(const Hobject Image, Hobject *ImageGauss, const Htuple Size);
LIntExport Herror gauss_filter(const Hobject Image, Hobject *ImageGauss, Hlong Size);
LIntExport Herror T_eliminate_min_max(const Hobject Image, Hobject *FilteredImage, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple Gap, const Htuple Mode);
LIntExport Herror eliminate_min_max(const Hobject Image, Hobject *FilteredImage, Hlong MaskWidth, Hlong MaskHeight, double Gap, Hlong Mode);
LIntExport Herror T_anisotrope_diff(const Hobject Image, Hobject *ImageAniso, const Htuple Percent, const Htuple Mode, const Htuple Iteration, const Htuple NeighborhoodType);
LIntExport Herror anisotrope_diff(const Hobject Image, Hobject *ImageAniso, Hlong Percent, Hlong Mode, Hlong Iteration, Hlong NeighborhoodType);
LIntExport Herror T_fill_interlace(const Hobject ImageCamera, Hobject *ImageFilled, const Htuple Mode);
LIntExport Herror fill_interlace(const Hobject ImageCamera, Hobject *ImageFilled, const char *Mode);
LIntExport Herror T_rank_n(const Hobject Image, Hobject *RankImage, const Htuple RankIndex);
LIntExport Herror rank_n(const Hobject Image, Hobject *RankImage, Hlong RankIndex);
LIntExport Herror T_mean_n(const Hobject Image, Hobject *ImageMean);
LIntExport Herror mean_n(const Hobject Image, Hobject *ImageMean);
LIntExport Herror T_eliminate_sp(const Hobject Image, Hobject *ImageFillSP, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple MinThresh, const Htuple MaxThresh);
LIntExport Herror eliminate_sp(const Hobject Image, Hobject *ImageFillSP, Hlong MaskWidth, Hlong MaskHeight, Hlong MinThresh, Hlong MaxThresh);
LIntExport Herror T_mean_sp(const Hobject Image, Hobject *ImageSPMean, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple MinThresh, const Htuple MaxThresh);
LIntExport Herror mean_sp(const Hobject Image, Hobject *ImageSPMean, Hlong MaskWidth, Hlong MaskHeight, Hlong MinThresh, Hlong MaxThresh);
LIntExport Herror T_points_sojka(const Hobject Image, const Htuple MaskSize, const Htuple SigmaW, const Htuple SigmaD, const Htuple MinGrad, const Htuple MinApparentness, const Htuple MinAngle, const Htuple Subpix, Htuple *Row, Htuple *Column);
LIntExport Herror T_dots_image(const Hobject Image, Hobject *DotImage, const Htuple Diameter, const Htuple FilterType, const Htuple PixelShift);
LIntExport Herror dots_image(const Hobject Image, Hobject *DotImage, Hlong Diameter, const char *FilterType, Hlong PixelShift);
LIntExport Herror T_local_min_sub_pix(const Hobject Image, const Htuple Filter, const Htuple Sigma, const Htuple Threshold, Htuple *Row, Htuple *Column);
LIntExport Herror T_local_max_sub_pix(const Hobject Image, const Htuple Filter, const Htuple Sigma, const Htuple Threshold, Htuple *Row, Htuple *Column);
LIntExport Herror T_saddle_points_sub_pix(const Hobject Image, const Htuple Filter, const Htuple Sigma, const Htuple Threshold, Htuple *Row, Htuple *Column);
LIntExport Herror T_critical_points_sub_pix(const Hobject Image, const Htuple Filter, const Htuple Sigma, const Htuple Threshold, Htuple *RowMin, Htuple *ColumnMin, Htuple *RowMax, Htuple *ColumnMax, Htuple *RowSaddle, Htuple *ColumnSaddle);
LIntExport Herror T_points_harris(const Hobject Image, const Htuple SigmaGrad, const Htuple SigmaSmooth, const Htuple Alpha, const Htuple Threshold, Htuple *Row, Htuple *Column);
LIntExport Herror T_points_harris_binomial(const Hobject Image, const Htuple MaskSizeGrad, const Htuple MaskSizeSmooth, const Htuple Alpha, const Htuple Threshold, const Htuple Subpix, Htuple *Row, Htuple *Column);
LIntExport Herror T_points_lepetit(const Hobject Image, const Htuple Radius, const Htuple CheckNeighbor, const Htuple MinCheckNeighborDiff, const Htuple MinScore, const Htuple Subpix, Htuple *Row, Htuple *Column);
LIntExport Herror T_points_foerstner(const Hobject Image, const Htuple SigmaGrad, const Htuple SigmaInt, const Htuple SigmaPoints, const Htuple ThreshInhom, const Htuple ThreshShape, const Htuple Smoothing, const Htuple EliminateDoublets, Htuple *RowJunctions, Htuple *ColumnJunctions, Htuple *CoRRJunctions, Htuple *CoRCJunctions, Htuple *CoCCJunctions, Htuple *RowArea, Htuple *ColumnArea, Htuple *CoRRArea, Htuple *CoRCArea, Htuple *CoCCArea);
LIntExport Herror T_estimate_noise(const Hobject Image, const Htuple Method, const Htuple Percent, Htuple *Sigma);
LIntExport Herror estimate_noise(const Hobject Image, const char *Method, double Percent, double *Sigma);
LIntExport Herror T_noise_distribution_mean(const Hobject ConstRegion, const Hobject Image, const Htuple FilterSize, Htuple *Distribution);
LIntExport Herror T_add_noise_white(const Hobject Image, Hobject *ImageNoise, const Htuple Amp);
LIntExport Herror add_noise_white(const Hobject Image, Hobject *ImageNoise, double Amp);
LIntExport Herror T_add_noise_distribution(const Hobject Image, Hobject *ImageNoise, const Htuple Distribution);
LIntExport Herror T_gauss_distribution(const Htuple Sigma, Htuple *Distribution);
LIntExport Herror T_sp_distribution(const Htuple PercentSalt, const Htuple PercentPepper, Htuple *Distribution);
LIntExport Herror T_deviation_n(const Hobject Image, Hobject *ImageDeviation);
LIntExport Herror deviation_n(const Hobject Image, Hobject *ImageDeviation);
LIntExport Herror T_inpainting_texture(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple MaskSize, const Htuple SearchSize, const Htuple Anisotropy, const Htuple PostIteration, const Htuple Smoothness);
LIntExport Herror inpainting_texture(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, Hlong MaskSize, Hlong SearchSize, double Anisotropy, const char *PostIteration, double Smoothness);
LIntExport Herror T_inpainting_ct(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple Epsilon, const Htuple Kappa, const Htuple Sigma, const Htuple Rho, const Htuple ChannelCoefficients);
LIntExport Herror inpainting_ct(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, double Epsilon, double Kappa, double Sigma, double Rho, double ChannelCoefficients);
LIntExport Herror T_inpainting_mcf(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple Sigma, const Htuple Theta, const Htuple Iterations);
LIntExport Herror inpainting_mcf(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, double Sigma, double Theta, Hlong Iterations);
LIntExport Herror T_inpainting_ced(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple Sigma, const Htuple Rho, const Htuple Theta, const Htuple Iterations);
LIntExport Herror inpainting_ced(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, double Sigma, double Rho, double Theta, Hlong Iterations);
LIntExport Herror T_inpainting_aniso(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple Mode, const Htuple Contrast, const Htuple Theta, const Htuple Iterations, const Htuple Rho);
LIntExport Herror inpainting_aniso(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const char *Mode, double Contrast, double Theta, Hlong Iterations, double Rho);
LIntExport Herror T_harmonic_interpolation(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, const Htuple Precision);
LIntExport Herror harmonic_interpolation(const Hobject Image, const Hobject Region, Hobject *InpaintedImage, double Precision);
LIntExport Herror T_expand_domain_gray(const Hobject InputImage, Hobject *ExpandedImage, const Htuple ExpansionRange);
LIntExport Herror expand_domain_gray(const Hobject InputImage, Hobject *ExpandedImage, Hlong ExpansionRange);
LIntExport Herror T_topographic_sketch(const Hobject Image, Hobject *Sketch);
LIntExport Herror topographic_sketch(const Hobject Image, Hobject *Sketch);
LIntExport Herror T_linear_trans_color(const Hobject Image, Hobject *ImageTrans, const Htuple TransMat);
LIntExport Herror T_gen_principal_comp_trans(const Hobject MultichannelImage, Htuple *Trans, Htuple *TransInv, Htuple *Mean, Htuple *Cov, Htuple *InfoPerComp);
LIntExport Herror T_principal_comp(const Hobject MultichannelImage, Hobject *PCAImage, Htuple *InfoPerComp);
LIntExport Herror T_fuzzy_entropy(const Hobject Regions, const Hobject Image, const Htuple Apar, const Htuple Cpar, Htuple *Entropy);
LIntExport Herror fuzzy_entropy(const Hobject Regions, const Hobject Image, Hlong Apar, Hlong Cpar, double *Entropy);
LIntExport Herror T_fuzzy_perimeter(const Hobject Regions, const Hobject Image, const Htuple Apar, const Htuple Cpar, Htuple *Perimeter);
LIntExport Herror fuzzy_perimeter(const Hobject Regions, const Hobject Image, Hlong Apar, Hlong Cpar, double *Perimeter);
LIntExport Herror T_gray_closing_shape(const Hobject Image, Hobject *ImageClosing, const Htuple MaskHeight, const Htuple MaskWidth, const Htuple MaskShape);
LIntExport Herror gray_closing_shape(const Hobject Image, Hobject *ImageClosing, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror T_gray_opening_shape(const Hobject Image, Hobject *ImageOpening, const Htuple MaskHeight, const Htuple MaskWidth, const Htuple MaskShape);
LIntExport Herror gray_opening_shape(const Hobject Image, Hobject *ImageOpening, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror T_gray_erosion_shape(const Hobject Image, Hobject *ImageMin, const Htuple MaskHeight, const Htuple MaskWidth, const Htuple MaskShape);
LIntExport Herror gray_erosion_shape(const Hobject Image, Hobject *ImageMin, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror T_gray_dilation_shape(const Hobject Image, Hobject *ImageMax, const Htuple MaskHeight, const Htuple MaskWidth, const Htuple MaskShape);
LIntExport Herror gray_dilation_shape(const Hobject Image, Hobject *ImageMax, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror T_gray_range_rect(const Hobject Image, Hobject *ImageResult, const Htuple MaskHeight, const Htuple MaskWidth);
LIntExport Herror gray_range_rect(const Hobject Image, Hobject *ImageResult, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror T_gray_closing_rect(const Hobject Image, Hobject *ImageClosing, const Htuple MaskHeight, const Htuple MaskWidth);
LIntExport Herror gray_closing_rect(const Hobject Image, Hobject *ImageClosing, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror T_gray_opening_rect(const Hobject Image, Hobject *ImageOpening, const Htuple MaskHeight, const Htuple MaskWidth);
LIntExport Herror gray_opening_rect(const Hobject Image, Hobject *ImageOpening, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror T_gray_erosion_rect(const Hobject Image, Hobject *ImageMin, const Htuple MaskHeight, const Htuple MaskWidth);
LIntExport Herror gray_erosion_rect(const Hobject Image, Hobject *ImageMin, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror T_gray_dilation_rect(const Hobject Image, Hobject *ImageMax, const Htuple MaskHeight, const Htuple MaskWidth);
LIntExport Herror gray_dilation_rect(const Hobject Image, Hobject *ImageMax, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror T_gray_skeleton(const Hobject Image, Hobject *GraySkeleton);
LIntExport Herror gray_skeleton(const Hobject Image, Hobject *GraySkeleton);
LIntExport Herror T_lut_trans(const Hobject Image, Hobject *ImageResult, const Htuple Lut);
LIntExport Herror T_convol_image(const Hobject Image, Hobject *ImageResult, const Htuple FilterMask, const Htuple Margin);
LIntExport Herror convol_image(const Hobject Image, Hobject *ImageResult, const char *FilterMask, const char *Margin);
LIntExport Herror T_convert_image_type(const Hobject Image, Hobject *ImageConverted, const Htuple NewType);
LIntExport Herror convert_image_type(const Hobject Image, Hobject *ImageConverted, const char *NewType);
LIntExport Herror T_real_to_vector_field(const Hobject Row, const Hobject Col, Hobject *VectorField, const Htuple Type);
LIntExport Herror real_to_vector_field(const Hobject Row, const Hobject Col, Hobject *VectorField, const char *Type);
LIntExport Herror T_vector_field_to_real(const Hobject VectorField, Hobject *Row, Hobject *Col);
LIntExport Herror vector_field_to_real(const Hobject VectorField, Hobject *Row, Hobject *Col);
LIntExport Herror T_real_to_complex(const Hobject ImageReal, const Hobject ImageImaginary, Hobject *ImageComplex);
LIntExport Herror real_to_complex(const Hobject ImageReal, const Hobject ImageImaginary, Hobject *ImageComplex);
LIntExport Herror T_complex_to_real(const Hobject ImageComplex, Hobject *ImageReal, Hobject *ImageImaginary);
LIntExport Herror complex_to_real(const Hobject ImageComplex, Hobject *ImageReal, Hobject *ImageImaginary);
LIntExport Herror T_region_to_mean(const Hobject Regions, const Hobject Image, Hobject *ImageMean);
LIntExport Herror region_to_mean(const Hobject Regions, const Hobject Image, Hobject *ImageMean);
LIntExport Herror T_gray_inside(const Hobject Image, Hobject *ImageDist);
LIntExport Herror gray_inside(const Hobject Image, Hobject *ImageDist);
LIntExport Herror T_symmetry(const Hobject Image, Hobject *ImageSymmetry, const Htuple MaskSize, const Htuple Direction, const Htuple Exponent);
LIntExport Herror symmetry(const Hobject Image, Hobject *ImageSymmetry, Hlong MaskSize, double Direction, double Exponent);
LIntExport Herror T_select_grayvalues_from_channels(const Hobject MultichannelImage, const Hobject IndexImage, Hobject *Selected);
LIntExport Herror select_grayvalues_from_channels(const Hobject MultichannelImage, const Hobject IndexImage, Hobject *Selected);
LIntExport Herror T_depth_from_focus(const Hobject MultiFocusImage, Hobject *Depth, Hobject *Confidence, const Htuple Filter, const Htuple Selection);
LIntExport Herror depth_from_focus(const Hobject MultiFocusImage, Hobject *Depth, Hobject *Confidence, const char *Filter, const char *Selection);
LIntExport Herror T_scene_flow_calib(const Hobject ImageRect1T1, const Hobject ImageRect2T1, const Hobject ImageRect1T2, const Hobject ImageRect2T2, const Hobject Disparity, const Htuple SmoothingFlow, const Htuple SmoothingDisparity, const Htuple GenParamName, const Htuple GenParamValue, const Htuple CamParamRect1, const Htuple CamParamRect2, const Htuple RelPoseRect, Htuple *ObjectModel3D);
LIntExport Herror T_scene_flow_uncalib(const Hobject ImageRect1T1, const Hobject ImageRect2T1, const Hobject ImageRect1T2, const Hobject ImageRect2T2, const Hobject Disparity, Hobject *OpticalFlow, Hobject *DisparityChange, const Htuple SmoothingFlow, const Htuple SmoothingDisparity, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror scene_flow_uncalib(const Hobject ImageRect1T1, const Hobject ImageRect2T1, const Hobject ImageRect1T2, const Hobject ImageRect2T2, const Hobject Disparity, Hobject *OpticalFlow, Hobject *DisparityChange, double SmoothingFlow, double SmoothingDisparity, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_unwarp_image_vector_field(const Hobject Image, const Hobject VectorField, Hobject *ImageUnwarped);
LIntExport Herror unwarp_image_vector_field(const Hobject Image, const Hobject VectorField, Hobject *ImageUnwarped);
LIntExport Herror T_derivate_vector_field(const Hobject VectorField, Hobject *Result, const Htuple Sigma, const Htuple Component);
LIntExport Herror derivate_vector_field(const Hobject VectorField, Hobject *Result, double Sigma, const char *Component);
LIntExport Herror T_vector_field_length(const Hobject VectorField, Hobject *Length, const Htuple Mode);
LIntExport Herror vector_field_length(const Hobject VectorField, Hobject *Length, const char *Mode);
LIntExport Herror T_optical_flow_mg(const Hobject ImageT1, const Hobject ImageT2, Hobject *VectorField, const Htuple Algorithm, const Htuple SmoothingSigma, const Htuple IntegrationSigma, const Htuple FlowSmoothness, const Htuple GradientConstancy, const Htuple MGParamName, const Htuple MGParamValue);
LIntExport Herror optical_flow_mg(const Hobject ImageT1, const Hobject ImageT2, Hobject *VectorField, const char *Algorithm, double SmoothingSigma, double IntegrationSigma, double FlowSmoothness, double GradientConstancy, const char *MGParamName, const char *MGParamValue);
LIntExport Herror T_exhaustive_match_mg(const Hobject Image, const Hobject ImageTemplate, Hobject *ImageMatch, const Htuple Mode, const Htuple Level, const Htuple Threshold);
LIntExport Herror exhaustive_match_mg(const Hobject Image, const Hobject ImageTemplate, Hobject *ImageMatch, const char *Mode, Hlong Level, Hlong Threshold);
LIntExport Herror T_create_template_rot(const Hobject Template, const Htuple NumLevel, const Htuple AngleStart, const Htuple AngleExtend, const Htuple AngleStep, const Htuple Optimize, const Htuple GrayValues, Htuple *TemplateID);
LIntExport Herror create_template_rot(const Hobject Template, Hlong NumLevel, double AngleStart, double AngleExtend, double AngleStep, const char *Optimize, const char *GrayValues, Hlong *TemplateID);
LIntExport Herror T_create_template(const Hobject Template, const Htuple FirstError, const Htuple NumLevel, const Htuple Optimize, const Htuple GrayValues, Htuple *TemplateID);
LIntExport Herror create_template(const Hobject Template, Hlong FirstError, Hlong NumLevel, const char *Optimize, const char *GrayValues, Hlong *TemplateID);
LIntExport Herror T_serialize_template(const Htuple TemplateID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_template(Hlong TemplateID, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_template(const Htuple SerializedItemHandle, Htuple *TemplateID);
LIntExport Herror deserialize_template(Hlong SerializedItemHandle, Hlong *TemplateID);
LIntExport Herror T_write_template(const Htuple TemplateID, const Htuple FileName);
LIntExport Herror write_template(Hlong TemplateID, const char *FileName);
LIntExport Herror T_read_template(const Htuple FileName, Htuple *TemplateID);
LIntExport Herror read_template(const char *FileName, Hlong *TemplateID);
LIntExport Herror T_clear_all_templates(void);
LIntExport Herror clear_all_templates(void);
LIntExport Herror T_clear_template(const Htuple TemplateID);
LIntExport Herror clear_template(Hlong TemplateID);
LIntExport Herror T_set_offset_template(const Htuple TemplateID, const Htuple GrayOffset);
LIntExport Herror set_offset_template(Hlong TemplateID, Hlong GrayOffset);
LIntExport Herror T_set_reference_template(const Htuple TemplateID, const Htuple Row, const Htuple Column);
LIntExport Herror set_reference_template(Hlong TemplateID, double Row, double Column);
LIntExport Herror T_adapt_template(const Hobject Image, const Htuple TemplateID);
LIntExport Herror adapt_template(const Hobject Image, Hlong TemplateID);
LIntExport Herror T_fast_match_mg(const Hobject Image, Hobject *Matches, const Htuple TemplateID, const Htuple MaxError, const Htuple NumLevel);
LIntExport Herror fast_match_mg(const Hobject Image, Hobject *Matches, Hlong TemplateID, double MaxError, Hlong NumLevel);
LIntExport Herror T_best_match_pre_mg(const Hobject ImagePyramid, const Htuple TemplateID, const Htuple MaxError, const Htuple SubPixel, const Htuple NumLevels, const Htuple WhichLevels, Htuple *Row, Htuple *Column, Htuple *Error);
LIntExport Herror best_match_pre_mg(const Hobject ImagePyramid, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror T_best_match_mg(const Hobject Image, const Htuple TemplateID, const Htuple MaxError, const Htuple SubPixel, const Htuple NumLevels, const Htuple WhichLevels, Htuple *Row, Htuple *Column, Htuple *Error);
LIntExport Herror best_match_mg(const Hobject Image, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror T_fast_match(const Hobject Image, Hobject *Matches, const Htuple TemplateID, const Htuple MaxError);
LIntExport Herror fast_match(const Hobject Image, Hobject *Matches, Hlong TemplateID, double MaxError);
LIntExport Herror T_best_match_rot_mg(const Hobject Image, const Htuple TemplateID, const Htuple AngleStart, const Htuple AngleExtend, const Htuple MaxError, const Htuple SubPixel, const Htuple NumLevels, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Error);
LIntExport Herror best_match_rot_mg(const Hobject Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, Hlong NumLevels, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror T_best_match_rot(const Hobject Image, const Htuple TemplateID, const Htuple AngleStart, const Htuple AngleExtend, const Htuple MaxError, const Htuple SubPixel, Htuple *Row, Htuple *Column, Htuple *Angle, Htuple *Error);
LIntExport Herror best_match_rot(const Hobject Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror T_best_match(const Hobject Image, const Htuple TemplateID, const Htuple MaxError, const Htuple SubPixel, Htuple *Row, Htuple *Column, Htuple *Error);
LIntExport Herror best_match(const Hobject Image, Hlong TemplateID, double MaxError, const char *SubPixel, double *Row, double *Column, double *Error);
LIntExport Herror T_exhaustive_match(const Hobject Image, const Hobject RegionOfInterest, const Hobject ImageTemplate, Hobject *ImageMatch, const Htuple Mode);
LIntExport Herror exhaustive_match(const Hobject Image, const Hobject RegionOfInterest, const Hobject ImageTemplate, Hobject *ImageMatch, const char *Mode);
LIntExport Herror T_corner_response(const Hobject Image, Hobject *ImageCorner, const Htuple Size, const Htuple Weight);
LIntExport Herror corner_response(const Hobject Image, Hobject *ImageCorner, Hlong Size, double Weight);
LIntExport Herror T_gen_gauss_pyramid(const Hobject Image, Hobject *ImagePyramid, const Htuple Mode, const Htuple Scale);
LIntExport Herror gen_gauss_pyramid(const Hobject Image, Hobject *ImagePyramid, const char *Mode, double Scale);
LIntExport Herror T_monotony(const Hobject Image, Hobject *ImageMonotony);
LIntExport Herror monotony(const Hobject Image, Hobject *ImageMonotony);
LIntExport Herror T_bandpass_image(const Hobject Image, Hobject *ImageBandpass, const Htuple FilterType);
LIntExport Herror bandpass_image(const Hobject Image, Hobject *ImageBandpass, const char *FilterType);
LIntExport Herror T_lines_color(const Hobject Image, Hobject *Lines, const Htuple Sigma, const Htuple Low, const Htuple High, const Htuple ExtractWidth, const Htuple CompleteJunctions);
LIntExport Herror lines_color(const Hobject Image, Hobject *Lines, double Sigma, double Low, double High, const char *ExtractWidth, const char *CompleteJunctions);
LIntExport Herror T_lines_gauss(const Hobject Image, Hobject *Lines, const Htuple Sigma, const Htuple Low, const Htuple High, const Htuple LightDark, const Htuple ExtractWidth, const Htuple LineModel, const Htuple CompleteJunctions);
LIntExport Herror lines_gauss(const Hobject Image, Hobject *Lines, double Sigma, double Low, double High, const char *LightDark, const char *ExtractWidth, const char *LineModel, const char *CompleteJunctions);
LIntExport Herror T_lines_facet(const Hobject Image, Hobject *Lines, const Htuple MaskSize, const Htuple Low, const Htuple High, const Htuple LightDark);
LIntExport Herror lines_facet(const Hobject Image, Hobject *Lines, Hlong MaskSize, double Low, double High, const char *LightDark);
LIntExport Herror T_gen_filter_mask(Hobject *ImageFilter, const Htuple FilterMask, const Htuple Scale, const Htuple Width, const Htuple Height);
LIntExport Herror gen_filter_mask(Hobject *ImageFilter, const char *FilterMask, double Scale, Hlong Width, Hlong Height);
LIntExport Herror T_gen_mean_filter(Hobject *ImageMean, const Htuple MaskShape, const Htuple Diameter1, const Htuple Diameter2, const Htuple Phi, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_mean_filter(Hobject *ImageMean, const char *MaskShape, double Diameter1, double Diameter2, double Phi, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_gauss_filter(Hobject *ImageGauss, const Htuple Sigma1, const Htuple Sigma2, const Htuple Phi, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_gauss_filter(Hobject *ImageGauss, double Sigma1, double Sigma2, double Phi, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_derivative_filter(Hobject *ImageDerivative, const Htuple Derivative, const Htuple Exponent, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_derivative_filter(Hobject *ImageDerivative, const char *Derivative, Hlong Exponent, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_std_bandpass(Hobject *ImageFilter, const Htuple Frequency, const Htuple Sigma, const Htuple Type, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_std_bandpass(Hobject *ImageFilter, double Frequency, double Sigma, const char *Type, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_sin_bandpass(Hobject *ImageFilter, const Htuple Frequency, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_sin_bandpass(Hobject *ImageFilter, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_bandfilter(Hobject *ImageFilter, const Htuple MinFrequency, const Htuple MaxFrequency, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_bandfilter(Hobject *ImageFilter, double MinFrequency, double MaxFrequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_bandpass(Hobject *ImageBandpass, const Htuple MinFrequency, const Htuple MaxFrequency, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_bandpass(Hobject *ImageBandpass, double MinFrequency, double MaxFrequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_lowpass(Hobject *ImageLowpass, const Htuple Frequency, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_lowpass(Hobject *ImageLowpass, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_gen_highpass(Hobject *ImageHighpass, const Htuple Frequency, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_highpass(Hobject *ImageHighpass, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_power_ln(const Hobject Image, Hobject *ImageResult);
LIntExport Herror power_ln(const Hobject Image, Hobject *ImageResult);
LIntExport Herror T_power_real(const Hobject Image, Hobject *ImageResult);
LIntExport Herror power_real(const Hobject Image, Hobject *ImageResult);
LIntExport Herror T_power_byte(const Hobject Image, Hobject *PowerByte);
LIntExport Herror power_byte(const Hobject Image, Hobject *PowerByte);
LIntExport Herror T_phase_deg(const Hobject ImageComplex, Hobject *ImagePhase);
LIntExport Herror phase_deg(const Hobject ImageComplex, Hobject *ImagePhase);
LIntExport Herror T_phase_rad(const Hobject ImageComplex, Hobject *ImagePhase);
LIntExport Herror phase_rad(const Hobject ImageComplex, Hobject *ImagePhase);
LIntExport Herror T_energy_gabor(const Hobject ImageGabor, const Hobject ImageHilbert, Hobject *Energy);
LIntExport Herror energy_gabor(const Hobject ImageGabor, const Hobject ImageHilbert, Hobject *Energy);
LIntExport Herror T_convol_gabor(const Hobject ImageFFT, const Hobject GaborFilter, Hobject *ImageResultGabor, Hobject *ImageResultHilbert);
LIntExport Herror convol_gabor(const Hobject ImageFFT, const Hobject GaborFilter, Hobject *ImageResultGabor, Hobject *ImageResultHilbert);
LIntExport Herror T_gen_gabor(Hobject *ImageFilter, const Htuple Angle, const Htuple Frequency, const Htuple Bandwidth, const Htuple Orientation, const Htuple Norm, const Htuple Mode, const Htuple Width, const Htuple Height);
LIntExport Herror gen_gabor(Hobject *ImageFilter, double Angle, double Frequency, double Bandwidth, double Orientation, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror T_phase_correlation_fft(const Hobject ImageFFT1, const Hobject ImageFFT2, Hobject *ImagePhaseCorrelation);
LIntExport Herror phase_correlation_fft(const Hobject ImageFFT1, const Hobject ImageFFT2, Hobject *ImagePhaseCorrelation);
LIntExport Herror T_correlation_fft(const Hobject ImageFFT1, const Hobject ImageFFT2, Hobject *ImageCorrelation);
LIntExport Herror correlation_fft(const Hobject ImageFFT1, const Hobject ImageFFT2, Hobject *ImageCorrelation);
LIntExport Herror T_convol_fft(const Hobject ImageFFT, const Hobject ImageFilter, Hobject *ImageConvol);
LIntExport Herror convol_fft(const Hobject ImageFFT, const Hobject ImageFilter, Hobject *ImageConvol);
LIntExport Herror T_deserialize_fft_optimization_data(const Htuple SerializedItemHandle);
LIntExport Herror deserialize_fft_optimization_data(Hlong SerializedItemHandle);
LIntExport Herror T_serialize_fft_optimization_data(Htuple *SerializedItemHandle);
LIntExport Herror serialize_fft_optimization_data(Hlong *SerializedItemHandle);
LIntExport Herror T_read_fft_optimization_data(const Htuple FileName);
LIntExport Herror read_fft_optimization_data(const char *FileName);
LIntExport Herror T_write_fft_optimization_data(const Htuple FileName);
LIntExport Herror write_fft_optimization_data(const char *FileName);
LIntExport Herror T_optimize_rft_speed(const Htuple Width, const Htuple Height, const Htuple Mode);
LIntExport Herror optimize_rft_speed(Hlong Width, Hlong Height, const char *Mode);
LIntExport Herror T_optimize_fft_speed(const Htuple Width, const Htuple Height, const Htuple Mode);
LIntExport Herror optimize_fft_speed(Hlong Width, Hlong Height, const char *Mode);
LIntExport Herror T_rft_generic(const Hobject Image, Hobject *ImageFFT, const Htuple Direction, const Htuple Norm, const Htuple ResultType, const Htuple Width);
LIntExport Herror rft_generic(const Hobject Image, Hobject *ImageFFT, const char *Direction, const char *Norm, const char *ResultType, Hlong Width);
LIntExport Herror T_fft_image_inv(const Hobject Image, Hobject *ImageFFTInv);
LIntExport Herror fft_image_inv(const Hobject Image, Hobject *ImageFFTInv);
LIntExport Herror T_fft_image(const Hobject Image, Hobject *ImageFFT);
LIntExport Herror fft_image(const Hobject Image, Hobject *ImageFFT);
LIntExport Herror T_fft_generic(const Hobject Image, Hobject *ImageFFT, const Htuple Direction, const Htuple Exponent, const Htuple Norm, const Htuple Mode, const Htuple ResultType);
LIntExport Herror fft_generic(const Hobject Image, Hobject *ImageFFT, const char *Direction, Hlong Exponent, const char *Norm, const char *Mode, const char *ResultType);
LIntExport Herror T_shock_filter(const Hobject Image, Hobject *SharpenedImage, const Htuple Theta, const Htuple Iterations, const Htuple Mode, const Htuple Sigma);
LIntExport Herror shock_filter(const Hobject Image, Hobject *SharpenedImage, double Theta, Hlong Iterations, const char *Mode, double Sigma);
LIntExport Herror T_mean_curvature_flow(const Hobject Image, Hobject *ImageMCF, const Htuple Sigma, const Htuple Theta, const Htuple Iterations);
LIntExport Herror mean_curvature_flow(const Hobject Image, Hobject *ImageMCF, double Sigma, double Theta, Hlong Iterations);
LIntExport Herror T_coherence_enhancing_diff(const Hobject Image, Hobject *ImageCED, const Htuple Sigma, const Htuple Rho, const Htuple Theta, const Htuple Iterations);
LIntExport Herror coherence_enhancing_diff(const Hobject Image, Hobject *ImageCED, double Sigma, double Rho, double Theta, Hlong Iterations);
LIntExport Herror T_equ_histo_image(const Hobject Image, Hobject *ImageEquHisto);
LIntExport Herror equ_histo_image(const Hobject Image, Hobject *ImageEquHisto);
LIntExport Herror T_illuminate(const Hobject Image, Hobject *ImageIlluminate, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple Factor);
LIntExport Herror illuminate(const Hobject Image, Hobject *ImageIlluminate, Hlong MaskWidth, Hlong MaskHeight, double Factor);
LIntExport Herror T_emphasize(const Hobject Image, Hobject *ImageEmphasize, const Htuple MaskWidth, const Htuple MaskHeight, const Htuple Factor);
LIntExport Herror emphasize(const Hobject Image, Hobject *ImageEmphasize, Hlong MaskWidth, Hlong MaskHeight, double Factor);
LIntExport Herror T_scale_image_max(const Hobject Image, Hobject *ImageScaleMax);
LIntExport Herror scale_image_max(const Hobject Image, Hobject *ImageScaleMax);
LIntExport Herror T_robinson_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror robinson_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror T_robinson_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror robinson_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror T_kirsch_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror kirsch_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror T_kirsch_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror kirsch_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror T_frei_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror frei_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror T_frei_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror frei_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror T_prewitt_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror prewitt_dir(const Hobject Image, Hobject *ImageEdgeAmp, Hobject *ImageEdgeDir);
LIntExport Herror T_prewitt_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror prewitt_amp(const Hobject Image, Hobject *ImageEdgeAmp);
LIntExport Herror T_sobel_amp(const Hobject Image, Hobject *EdgeAmplitude, const Htuple FilterType, const Htuple Size);
LIntExport Herror sobel_amp(const Hobject Image, Hobject *EdgeAmplitude, const char *FilterType, Hlong Size);
LIntExport Herror T_sobel_dir(const Hobject Image, Hobject *EdgeAmplitude, Hobject *EdgeDirection, const Htuple FilterType, const Htuple Size);
LIntExport Herror sobel_dir(const Hobject Image, Hobject *EdgeAmplitude, Hobject *EdgeDirection, const char *FilterType, Hlong Size);
LIntExport Herror T_roberts(const Hobject Image, Hobject *ImageRoberts, const Htuple FilterType);
LIntExport Herror roberts(const Hobject Image, Hobject *ImageRoberts, const char *FilterType);
LIntExport Herror T_laplace(const Hobject Image, Hobject *ImageLaplace, const Htuple ResultType, const Htuple MaskSize, const Htuple FilterMask);
LIntExport Herror laplace(const Hobject Image, Hobject *ImageLaplace, const char *ResultType, Hlong MaskSize, const char *FilterMask);
LIntExport Herror T_highpass_image(const Hobject Image, Hobject *Highpass, const Htuple Width, const Htuple Height);
LIntExport Herror highpass_image(const Hobject Image, Hobject *Highpass, Hlong Width, Hlong Height);
LIntExport Herror T_info_edges(const Htuple Filter, const Htuple Mode, const Htuple Alpha, Htuple *Size, Htuple *Coeffs);
LIntExport Herror T_edges_color_sub_pix(const Hobject Image, Hobject *Edges, const Htuple Filter, const Htuple Alpha, const Htuple Low, const Htuple High);
LIntExport Herror edges_color_sub_pix(const Hobject Image, Hobject *Edges, const char *Filter, double Alpha, double Low, double High);
LIntExport Herror T_edges_color(const Hobject Image, Hobject *ImaAmp, Hobject *ImaDir, const Htuple Filter, const Htuple Alpha, const Htuple NMS, const Htuple Low, const Htuple High);
LIntExport Herror edges_color(const Hobject Image, Hobject *ImaAmp, Hobject *ImaDir, const char *Filter, double Alpha, const char *NMS, Hlong Low, Hlong High);
LIntExport Herror T_edges_sub_pix(const Hobject Image, Hobject *Edges, const Htuple Filter, const Htuple Alpha, const Htuple Low, const Htuple High);
LIntExport Herror edges_sub_pix(const Hobject Image, Hobject *Edges, const char *Filter, double Alpha, Hlong Low, Hlong High);
LIntExport Herror T_edges_image(const Hobject Image, Hobject *ImaAmp, Hobject *ImaDir, const Htuple Filter, const Htuple Alpha, const Htuple NMS, const Htuple Low, const Htuple High);
LIntExport Herror edges_image(const Hobject Image, Hobject *ImaAmp, Hobject *ImaDir, const char *Filter, double Alpha, const char *NMS, Hlong Low, Hlong High);
LIntExport Herror T_derivate_gauss(const Hobject Image, Hobject *DerivGauss, const Htuple Sigma, const Htuple Component);
LIntExport Herror derivate_gauss(const Hobject Image, Hobject *DerivGauss, double Sigma, const char *Component);
LIntExport Herror T_laplace_of_gauss(const Hobject Image, Hobject *ImageLaplace, const Htuple Sigma);
LIntExport Herror laplace_of_gauss(const Hobject Image, Hobject *ImageLaplace, double Sigma);
LIntExport Herror T_diff_of_gauss(const Hobject Image, Hobject *DiffOfGauss, const Htuple Sigma, const Htuple SigFactor);
LIntExport Herror diff_of_gauss(const Hobject Image, Hobject *DiffOfGauss, double Sigma, double SigFactor);
LIntExport Herror T_close_edges_length(const Hobject Edges, const Hobject Gradient, Hobject *ClosedEdges, const Htuple MinAmplitude, const Htuple MaxGapLength);
LIntExport Herror close_edges_length(const Hobject Edges, const Hobject Gradient, Hobject *ClosedEdges, Hlong MinAmplitude, Hlong MaxGapLength);
LIntExport Herror T_close_edges(const Hobject Edges, const Hobject EdgeImage, Hobject *RegionResult, const Htuple MinAmplitude);
LIntExport Herror close_edges(const Hobject Edges, const Hobject EdgeImage, Hobject *RegionResult, Hlong MinAmplitude);
LIntExport Herror T_detect_edge_segments(const Hobject Image, const Htuple SobelSize, const Htuple MinAmplitude, const Htuple MaxDistance, const Htuple MinLength, Htuple *BeginRow, Htuple *BeginCol, Htuple *EndRow, Htuple *EndCol);
LIntExport Herror T_clear_all_color_trans_luts(void);
LIntExport Herror clear_all_color_trans_luts(void);
LIntExport Herror T_clear_color_trans_lut(const Htuple ColorTransLUTHandle);
LIntExport Herror clear_color_trans_lut(Hlong ColorTransLUTHandle);
LIntExport Herror T_apply_color_trans_lut(const Hobject Image1, const Hobject Image2, const Hobject Image3, Hobject *ImageResult1, Hobject *ImageResult2, Hobject *ImageResult3, const Htuple ColorTransLUTHandle);
LIntExport Herror apply_color_trans_lut(const Hobject Image1, const Hobject Image2, const Hobject Image3, Hobject *ImageResult1, Hobject *ImageResult2, Hobject *ImageResult3, Hlong ColorTransLUTHandle);
LIntExport Herror T_create_color_trans_lut(const Htuple ColorSpace, const Htuple TransDirection, const Htuple NumBits, Htuple *ColorTransLUTHandle);
LIntExport Herror create_color_trans_lut(const char *ColorSpace, const char *TransDirection, Hlong NumBits, Hlong *ColorTransLUTHandle);
LIntExport Herror T_cfa_to_rgb(const Hobject CFAImage, Hobject *RGBImage, const Htuple CFAType, const Htuple Interpolation);
LIntExport Herror cfa_to_rgb(const Hobject CFAImage, Hobject *RGBImage, const char *CFAType, const char *Interpolation);
LIntExport Herror T_rgb1_to_gray(const Hobject RGBImage, Hobject *GrayImage);
LIntExport Herror rgb1_to_gray(const Hobject RGBImage, Hobject *GrayImage);
LIntExport Herror T_rgb3_to_gray(const Hobject ImageRed, const Hobject ImageGreen, const Hobject ImageBlue, Hobject *ImageGray);
LIntExport Herror rgb3_to_gray(const Hobject ImageRed, const Hobject ImageGreen, const Hobject ImageBlue, Hobject *ImageGray);
LIntExport Herror T_trans_from_rgb(const Hobject ImageRed, const Hobject ImageGreen, const Hobject ImageBlue, Hobject *ImageResult1, Hobject *ImageResult2, Hobject *ImageResult3, const Htuple ColorSpace);
LIntExport Herror trans_from_rgb(const Hobject ImageRed, const Hobject ImageGreen, const Hobject ImageBlue, Hobject *ImageResult1, Hobject *ImageResult2, Hobject *ImageResult3, const char *ColorSpace);
LIntExport Herror T_trans_to_rgb(const Hobject ImageInput1, const Hobject ImageInput2, const Hobject ImageInput3, Hobject *ImageRed, Hobject *ImageGreen, Hobject *ImageBlue, const Htuple ColorSpace);
LIntExport Herror trans_to_rgb(const Hobject ImageInput1, const Hobject ImageInput2, const Hobject ImageInput3, Hobject *ImageRed, Hobject *ImageGreen, Hobject *ImageBlue, const char *ColorSpace);
LIntExport Herror T_bit_mask(const Hobject Image, Hobject *ImageMask, const Htuple BitMask);
LIntExport Herror bit_mask(const Hobject Image, Hobject *ImageMask, Hlong BitMask);
LIntExport Herror T_bit_slice(const Hobject Image, Hobject *ImageSlice, const Htuple Bit);
LIntExport Herror bit_slice(const Hobject Image, Hobject *ImageSlice, Hlong Bit);
LIntExport Herror T_bit_rshift(const Hobject Image, Hobject *ImageRShift, const Htuple Shift);
LIntExport Herror bit_rshift(const Hobject Image, Hobject *ImageRShift, Hlong Shift);
LIntExport Herror T_bit_lshift(const Hobject Image, Hobject *ImageLShift, const Htuple Shift);
LIntExport Herror bit_lshift(const Hobject Image, Hobject *ImageLShift, Hlong Shift);
LIntExport Herror T_bit_not(const Hobject Image, Hobject *ImageNot);
LIntExport Herror bit_not(const Hobject Image, Hobject *ImageNot);
LIntExport Herror T_bit_xor(const Hobject Image1, const Hobject Image2, Hobject *ImageXor);
LIntExport Herror bit_xor(const Hobject Image1, const Hobject Image2, Hobject *ImageXor);
LIntExport Herror T_bit_or(const Hobject Image1, const Hobject Image2, Hobject *ImageOr);
LIntExport Herror bit_or(const Hobject Image1, const Hobject Image2, Hobject *ImageOr);
LIntExport Herror T_bit_and(const Hobject Image1, const Hobject Image2, Hobject *ImageAnd);
LIntExport Herror bit_and(const Hobject Image1, const Hobject Image2, Hobject *ImageAnd);
LIntExport Herror T_gamma_image(const Hobject Image, Hobject *GammaImage, const Htuple Gamma, const Htuple Offset, const Htuple Threshold, const Htuple MaxGray, const Htuple Encode);
LIntExport Herror gamma_image(const Hobject Image, Hobject *GammaImage, double Gamma, double Offset, double Threshold, double MaxGray, const char *Encode);
LIntExport Herror T_pow_image(const Hobject Image, Hobject *PowImage, const Htuple Exponent);
LIntExport Herror pow_image(const Hobject Image, Hobject *PowImage, double Exponent);
LIntExport Herror T_exp_image(const Hobject Image, Hobject *ExpImage, const Htuple Base);
LIntExport Herror exp_image(const Hobject Image, Hobject *ExpImage, const char *Base);
LIntExport Herror T_log_image(const Hobject Image, Hobject *LogImage, const Htuple Base);
LIntExport Herror log_image(const Hobject Image, Hobject *LogImage, const char *Base);
LIntExport Herror T_atan2_image(const Hobject ImageY, const Hobject ImageX, Hobject *ArctanImage);
LIntExport Herror atan2_image(const Hobject ImageY, const Hobject ImageX, Hobject *ArctanImage);
LIntExport Herror T_atan_image(const Hobject Image, Hobject *ArctanImage);
LIntExport Herror atan_image(const Hobject Image, Hobject *ArctanImage);
LIntExport Herror T_acos_image(const Hobject Image, Hobject *ArccosImage);
LIntExport Herror acos_image(const Hobject Image, Hobject *ArccosImage);
LIntExport Herror T_asin_image(const Hobject Image, Hobject *ArcsinImage);
LIntExport Herror asin_image(const Hobject Image, Hobject *ArcsinImage);
LIntExport Herror T_tan_image(const Hobject Image, Hobject *TanImage);
LIntExport Herror tan_image(const Hobject Image, Hobject *TanImage);
LIntExport Herror T_cos_image(const Hobject Image, Hobject *CosImage);
LIntExport Herror cos_image(const Hobject Image, Hobject *CosImage);
LIntExport Herror T_sin_image(const Hobject Image, Hobject *SinImage);
LIntExport Herror sin_image(const Hobject Image, Hobject *SinImage);
LIntExport Herror T_abs_diff_image(const Hobject Image1, const Hobject Image2, Hobject *ImageAbsDiff, const Htuple Mult);
LIntExport Herror abs_diff_image(const Hobject Image1, const Hobject Image2, Hobject *ImageAbsDiff, double Mult);
LIntExport Herror T_sqrt_image(const Hobject Image, Hobject *SqrtImage);
LIntExport Herror sqrt_image(const Hobject Image, Hobject *SqrtImage);
LIntExport Herror T_sub_image(const Hobject ImageMinuend, const Hobject ImageSubtrahend, Hobject *ImageSub, const Htuple Mult, const Htuple Add);
LIntExport Herror sub_image(const Hobject ImageMinuend, const Hobject ImageSubtrahend, Hobject *ImageSub, double Mult, double Add);
LIntExport Herror T_scale_image(const Hobject Image, Hobject *ImageScaled, const Htuple Mult, const Htuple Add);
LIntExport Herror scale_image(const Hobject Image, Hobject *ImageScaled, double Mult, double Add);
LIntExport Herror T_div_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, const Htuple Mult, const Htuple Add);
LIntExport Herror div_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, double Mult, double Add);
LIntExport Herror T_mult_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, const Htuple Mult, const Htuple Add);
LIntExport Herror mult_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, double Mult, double Add);
LIntExport Herror T_add_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, const Htuple Mult, const Htuple Add);
LIntExport Herror add_image(const Hobject Image1, const Hobject Image2, Hobject *ImageResult, double Mult, double Add);
LIntExport Herror T_abs_image(const Hobject Image, Hobject *ImageAbs);
LIntExport Herror abs_image(const Hobject Image, Hobject *ImageAbs);
LIntExport Herror T_min_image(const Hobject Image1, const Hobject Image2, Hobject *ImageMin);
LIntExport Herror min_image(const Hobject Image1, const Hobject Image2, Hobject *ImageMin);
LIntExport Herror T_max_image(const Hobject Image1, const Hobject Image2, Hobject *ImageMax);
LIntExport Herror max_image(const Hobject Image1, const Hobject Image2, Hobject *ImageMax);
LIntExport Herror T_invert_image(const Hobject Image, Hobject *ImageInvert);
LIntExport Herror invert_image(const Hobject Image, Hobject *ImageInvert);
LIntExport Herror T_adjust_mosaic_images(const Hobject Images, Hobject *CorrectedImages, const Htuple From, const Htuple To, const Htuple ReferenceImage, const Htuple HomMatrices2D, const Htuple EstimationMethod, const Htuple EstimateParameters, const Htuple OECFModel);
LIntExport Herror T_gen_cube_map_mosaic(const Hobject Images, Hobject *Front, Hobject *Rear, Hobject *Left, Hobject *Right, Hobject *Top, Hobject *Bottom, const Htuple CameraMatrices, const Htuple RotationMatrices, const Htuple CubeMapDimension, const Htuple StackingOrder, const Htuple Interpolation);
LIntExport Herror T_gen_spherical_mosaic(const Hobject Images, Hobject *MosaicImage, const Htuple CameraMatrices, const Htuple RotationMatrices, const Htuple LatMin, const Htuple LatMax, const Htuple LongMin, const Htuple LongMax, const Htuple LatLongStep, const Htuple StackingOrder, const Htuple Interpolation);
LIntExport Herror T_gen_bundle_adjusted_mosaic(const Hobject Images, Hobject *MosaicImage, const Htuple HomMatrices2D, const Htuple StackingOrder, const Htuple TransformDomain, Htuple *TransMat2D);
LIntExport Herror T_gen_projective_mosaic(const Hobject Images, Hobject *MosaicImage, const Htuple StartImage, const Htuple MappingSource, const Htuple MappingDest, const Htuple HomMatrices2D, const Htuple StackingOrder, const Htuple TransformDomain, Htuple *MosaicMatrices2D);
LIntExport Herror T_projective_trans_image_size(const Hobject Image, Hobject *TransImage, const Htuple HomMat2D, const Htuple Interpolation, const Htuple Width, const Htuple Height, const Htuple TransformDomain);
LIntExport Herror T_projective_trans_image(const Hobject Image, Hobject *TransImage, const Htuple HomMat2D, const Htuple Interpolation, const Htuple AdaptImageSize, const Htuple TransformDomain);
LIntExport Herror T_affine_trans_image_size(const Hobject Image, Hobject *ImageAffinTrans, const Htuple HomMat2D, const Htuple Interpolation, const Htuple Width, const Htuple Height);
LIntExport Herror T_affine_trans_image(const Hobject Image, Hobject *ImageAffinTrans, const Htuple HomMat2D, const Htuple Interpolation, const Htuple AdaptImageSize);
LIntExport Herror T_zoom_image_factor(const Hobject Image, Hobject *ImageZoomed, const Htuple ScaleWidth, const Htuple ScaleHeight, const Htuple Interpolation);
LIntExport Herror zoom_image_factor(const Hobject Image, Hobject *ImageZoomed, double ScaleWidth, double ScaleHeight, const char *Interpolation);
LIntExport Herror T_zoom_image_size(const Hobject Image, Hobject *ImageZoom, const Htuple Width, const Htuple Height, const Htuple Interpolation);
LIntExport Herror zoom_image_size(const Hobject Image, Hobject *ImageZoom, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror T_mirror_image(const Hobject Image, Hobject *ImageMirror, const Htuple Mode);
LIntExport Herror mirror_image(const Hobject Image, Hobject *ImageMirror, const char *Mode);
LIntExport Herror T_rotate_image(const Hobject Image, Hobject *ImageRotate, const Htuple Phi, const Htuple Interpolation);
LIntExport Herror rotate_image(const Hobject Image, Hobject *ImageRotate, double Phi, const char *Interpolation);
LIntExport Herror T_polar_trans_image_inv(const Hobject PolarImage, Hobject *XYTransImage, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple Width, const Htuple Height, const Htuple Interpolation);
LIntExport Herror polar_trans_image_inv(const Hobject PolarImage, Hobject *XYTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror T_polar_trans_image_ext(const Hobject Image, Hobject *PolarTransImage, const Htuple Row, const Htuple Column, const Htuple AngleStart, const Htuple AngleEnd, const Htuple RadiusStart, const Htuple RadiusEnd, const Htuple Width, const Htuple Height, const Htuple Interpolation);
LIntExport Herror polar_trans_image_ext(const Hobject Image, Hobject *PolarTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror T_polar_trans_image(const Hobject ImageXY, Hobject *ImagePolar, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror polar_trans_image(const Hobject ImageXY, Hobject *ImagePolar, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror T_vector_field_to_hom_mat2d(const Hobject VectorField, Htuple *HomMat2D);
LIntExport Herror T_deserialize_xld(Hobject *XLD, const Htuple SerializedItemHandle);
LIntExport Herror deserialize_xld(Hobject *XLD, Hlong SerializedItemHandle);
LIntExport Herror T_serialize_xld(const Hobject XLD, Htuple *SerializedItemHandle);
LIntExport Herror serialize_xld(const Hobject XLD, Hlong *SerializedItemHandle);
LIntExport Herror T_read_polygon_xld_dxf(Hobject *Polygons, const Htuple FileName, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *DxfStatus);
LIntExport Herror read_polygon_xld_dxf(Hobject *Polygons, const char *FileName, const char *GenParamNames, double GenParamValues, char *DxfStatus);
LIntExport Herror T_write_polygon_xld_dxf(const Hobject Polygons, const Htuple FileName);
LIntExport Herror write_polygon_xld_dxf(const Hobject Polygons, const char *FileName);
LIntExport Herror T_read_contour_xld_dxf(Hobject *Contours, const Htuple FileName, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *DxfStatus);
LIntExport Herror read_contour_xld_dxf(Hobject *Contours, const char *FileName, const char *GenParamNames, double GenParamValues, char *DxfStatus);
LIntExport Herror T_write_contour_xld_dxf(const Hobject Contours, const Htuple FileName);
LIntExport Herror write_contour_xld_dxf(const Hobject Contours, const char *FileName);
LIntExport Herror T_copy_file(const Htuple SourceFile, const Htuple DestinationFile);
LIntExport Herror copy_file(const char *SourceFile, const char *DestinationFile);
LIntExport Herror T_set_current_dir(const Htuple DirName);
LIntExport Herror set_current_dir(const char *DirName);
LIntExport Herror T_get_current_dir(Htuple *DirName);
LIntExport Herror get_current_dir(char *DirName);
LIntExport Herror T_remove_dir(const Htuple DirName);
LIntExport Herror remove_dir(const char *DirName);
LIntExport Herror T_make_dir(const Htuple DirName);
LIntExport Herror make_dir(const char *DirName);
LIntExport Herror T_list_files(const Htuple Directory, const Htuple Options, Htuple *Files);
LIntExport Herror T_delete_file(const Htuple FileName);
LIntExport Herror delete_file(const char *FileName);
LIntExport Herror T_file_exists(const Htuple FileName, Htuple *FileExists);
LIntExport Herror file_exists(const char *FileName, Hlong *FileExists);
LIntExport Herror T_read_object(Hobject *Object, const Htuple FileName);
LIntExport Herror read_object(Hobject *Object, const char *FileName);
LIntExport Herror T_write_object(const Hobject Object, const Htuple FileName);
LIntExport Herror write_object(const Hobject Object, const char *FileName);
LIntExport Herror T_deserialize_object(Hobject *Object, const Htuple SerializedItemHandle);
LIntExport Herror deserialize_object(Hobject *Object, Hlong SerializedItemHandle);
LIntExport Herror T_serialize_object(const Hobject Object, Htuple *SerializedItemHandle);
LIntExport Herror serialize_object(const Hobject Object, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_image(Hobject *Image, const Htuple SerializedItemHandle);
LIntExport Herror deserialize_image(Hobject *Image, Hlong SerializedItemHandle);
LIntExport Herror T_serialize_image(const Hobject Image, Htuple *SerializedItemHandle);
LIntExport Herror serialize_image(const Hobject Image, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_region(Hobject *Region, const Htuple SerializedItemHandle);
LIntExport Herror deserialize_region(Hobject *Region, Hlong SerializedItemHandle);
LIntExport Herror T_serialize_region(const Hobject Region, Htuple *SerializedItemHandle);
LIntExport Herror serialize_region(const Hobject Region, Hlong *SerializedItemHandle);
LIntExport Herror T_write_region(const Hobject Region, const Htuple FileName);
LIntExport Herror write_region(const Hobject Region, const char *FileName);
LIntExport Herror T_write_image(const Hobject Image, const Htuple Format, const Htuple FillColor, const Htuple FileName);
LIntExport Herror write_image(const Hobject Image, const char *Format, Hlong FillColor, const char *FileName);
LIntExport Herror T_read_sequence(Hobject *Image, const Htuple HeaderSize, const Htuple SourceWidth, const Htuple SourceHeight, const Htuple StartRow, const Htuple StartColumn, const Htuple DestWidth, const Htuple DestHeight, const Htuple PixelType, const Htuple BitOrder, const Htuple ByteOrder, const Htuple Pad, const Htuple Index, const Htuple FileName);
LIntExport Herror read_sequence(Hobject *Image, Hlong HeaderSize, Hlong SourceWidth, Hlong SourceHeight, Hlong StartRow, Hlong StartColumn, Hlong DestWidth, Hlong DestHeight, const char *PixelType, const char *BitOrder, const char *ByteOrder, const char *Pad, Hlong Index, const char *FileName);
LIntExport Herror T_read_region(Hobject *Region, const Htuple FileName);
LIntExport Herror read_region(Hobject *Region, const char *FileName);
LIntExport Herror T_read_image(Hobject *Image, const Htuple FileName);
LIntExport Herror read_image(Hobject *Image, const char *FileName);
LIntExport Herror T_open_file(const Htuple FileName, const Htuple FileType, Htuple *FileHandle);
LIntExport Herror open_file(const char *FileName, const char *FileType, Hlong *FileHandle);
LIntExport Herror T_fwrite_string(const Htuple FileHandle, const Htuple String);
LIntExport Herror fwrite_string(Hlong FileHandle, const char *String);
LIntExport Herror T_fread_line(const Htuple FileHandle, Htuple *OutLine, Htuple *IsEOF);
LIntExport Herror fread_line(Hlong FileHandle, char *OutLine, Hlong *IsEOF);
LIntExport Herror T_fread_string(const Htuple FileHandle, Htuple *OutString, Htuple *IsEOF);
LIntExport Herror fread_string(Hlong FileHandle, char *OutString, Hlong *IsEOF);
LIntExport Herror T_fread_char(const Htuple FileHandle, Htuple *Char);
LIntExport Herror fread_char(Hlong FileHandle, char *Char);
LIntExport Herror T_fnew_line(const Htuple FileHandle);
LIntExport Herror fnew_line(Hlong FileHandle);
LIntExport Herror T_close_file(const Htuple FileHandle);
LIntExport Herror close_file(Hlong FileHandle);
LIntExport Herror T_close_all_files(void);
LIntExport Herror close_all_files(void);
LIntExport Herror T_test_closed_xld(const Hobject XLD, Htuple *IsClosed);
LIntExport Herror test_closed_xld(const Hobject XLD, Hlong *IsClosed);
LIntExport Herror T_get_grayval_contour_xld(const Hobject Image, const Hobject Contour, const Htuple Interpolation, Htuple *Grayval);
LIntExport Herror get_grayval_contour_xld(const Hobject Image, const Hobject Contour, const char *Interpolation, double *Grayval);
LIntExport Herror T_moments_any_points_xld(const Hobject XLD, const Htuple Mode, const Htuple Area, const Htuple CenterRow, const Htuple CenterCol, const Htuple P, const Htuple Q, Htuple *M);
LIntExport Herror moments_any_points_xld(const Hobject XLD, const char *Mode, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, double *M);
LIntExport Herror T_eccentricity_points_xld(const Hobject XLD, Htuple *Anisometry);
LIntExport Herror eccentricity_points_xld(const Hobject XLD, double *Anisometry);
LIntExport Herror T_elliptic_axis_points_xld(const Hobject XLD, Htuple *Ra, Htuple *Rb, Htuple *Phi);
LIntExport Herror elliptic_axis_points_xld(const Hobject XLD, double *Ra, double *Rb, double *Phi);
LIntExport Herror T_orientation_points_xld(const Hobject XLD, Htuple *Phi);
LIntExport Herror orientation_points_xld(const Hobject XLD, double *Phi);
LIntExport Herror T_moments_points_xld(const Hobject XLD, Htuple *M11, Htuple *M20, Htuple *M02);
LIntExport Herror moments_points_xld(const Hobject XLD, double *M11, double *M20, double *M02);
LIntExport Herror T_area_center_points_xld(const Hobject XLD, Htuple *Area, Htuple *Row, Htuple *Column);
LIntExport Herror area_center_points_xld(const Hobject XLD, double *Area, double *Row, double *Column);
LIntExport Herror T_test_self_intersection_xld(const Hobject XLD, const Htuple CloseXLD, Htuple *DoesIntersect);
LIntExport Herror test_self_intersection_xld(const Hobject XLD, const char *CloseXLD, Hlong *DoesIntersect);
LIntExport Herror T_select_xld_point(const Hobject XLDs, Hobject *DestXLDs, const Htuple Row, const Htuple Column);
LIntExport Herror select_xld_point(const Hobject XLDs, Hobject *DestXLDs, double Row, double Column);
LIntExport Herror T_test_xld_point(const Hobject XLD, const Htuple Row, const Htuple Column, Htuple *IsInside);
LIntExport Herror test_xld_point(const Hobject XLD, double Row, double Column, Hlong *IsInside);
LIntExport Herror T_select_shape_xld(const Hobject XLD, Hobject *SelectedXLD, const Htuple Features, const Htuple Operation, const Htuple Min, const Htuple Max);
LIntExport Herror select_shape_xld(const Hobject XLD, Hobject *SelectedXLD, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror T_orientation_xld(const Hobject XLD, Htuple *Phi);
LIntExport Herror orientation_xld(const Hobject XLD, double *Phi);
LIntExport Herror T_eccentricity_xld(const Hobject XLD, Htuple *Anisometry, Htuple *Bulkiness, Htuple *StructureFactor);
LIntExport Herror eccentricity_xld(const Hobject XLD, double *Anisometry, double *Bulkiness, double *StructureFactor);
LIntExport Herror T_compactness_xld(const Hobject XLD, Htuple *Compactness);
LIntExport Herror compactness_xld(const Hobject XLD, double *Compactness);
LIntExport Herror T_diameter_xld(const Hobject XLD, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2, Htuple *Diameter);
LIntExport Herror diameter_xld(const Hobject XLD, double *Row1, double *Column1, double *Row2, double *Column2, double *Diameter);
LIntExport Herror T_convexity_xld(const Hobject XLD, Htuple *Convexity);
LIntExport Herror convexity_xld(const Hobject XLD, double *Convexity);
LIntExport Herror T_circularity_xld(const Hobject XLD, Htuple *Circularity);
LIntExport Herror circularity_xld(const Hobject XLD, double *Circularity);
LIntExport Herror T_elliptic_axis_xld(const Hobject XLD, Htuple *Ra, Htuple *Rb, Htuple *Phi);
LIntExport Herror elliptic_axis_xld(const Hobject XLD, double *Ra, double *Rb, double *Phi);
LIntExport Herror T_smallest_rectangle2_xld(const Hobject XLD, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2);
LIntExport Herror smallest_rectangle2_xld(const Hobject XLD, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror T_smallest_rectangle1_xld(const Hobject XLD, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror smallest_rectangle1_xld(const Hobject XLD, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror T_smallest_circle_xld(const Hobject XLD, Htuple *Row, Htuple *Column, Htuple *Radius);
LIntExport Herror smallest_circle_xld(const Hobject XLD, double *Row, double *Column, double *Radius);
LIntExport Herror T_shape_trans_xld(const Hobject XLD, Hobject *XLDTrans, const Htuple Type);
LIntExport Herror shape_trans_xld(const Hobject XLD, Hobject *XLDTrans, const char *Type);
LIntExport Herror T_length_xld(const Hobject XLD, Htuple *Length);
LIntExport Herror length_xld(const Hobject XLD, double *Length);
LIntExport Herror T_moments_any_xld(const Hobject XLD, const Htuple Mode, const Htuple PointOrder, const Htuple Area, const Htuple CenterRow, const Htuple CenterCol, const Htuple P, const Htuple Q, Htuple *M);
LIntExport Herror moments_any_xld(const Hobject XLD, const char *Mode, const char *PointOrder, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, double *M);
LIntExport Herror T_moments_xld(const Hobject XLD, Htuple *M11, Htuple *M20, Htuple *M02);
LIntExport Herror moments_xld(const Hobject XLD, double *M11, double *M20, double *M02);
LIntExport Herror T_area_center_xld(const Hobject XLD, Htuple *Area, Htuple *Row, Htuple *Column, Htuple *PointOrder);
LIntExport Herror area_center_xld(const Hobject XLD, double *Area, double *Row, double *Column, char *PointOrder);
LIntExport Herror T_moments_region_central_invar(const Hobject Regions, Htuple *PSI1, Htuple *PSI2, Htuple *PSI3, Htuple *PSI4);
LIntExport Herror moments_region_central_invar(const Hobject Regions, double *PSI1, double *PSI2, double *PSI3, double *PSI4);
LIntExport Herror T_moments_region_central(const Hobject Regions, Htuple *I1, Htuple *I2, Htuple *I3, Htuple *I4);
LIntExport Herror moments_region_central(const Hobject Regions, double *I1, double *I2, double *I3, double *I4);
LIntExport Herror T_moments_region_3rd_invar(const Hobject Regions, Htuple *M21, Htuple *M12, Htuple *M03, Htuple *M30);
LIntExport Herror moments_region_3rd_invar(const Hobject Regions, double *M21, double *M12, double *M03, double *M30);
LIntExport Herror T_moments_region_3rd(const Hobject Regions, Htuple *M21, Htuple *M12, Htuple *M03, Htuple *M30);
LIntExport Herror moments_region_3rd(const Hobject Regions, double *M21, double *M12, double *M03, double *M30);
LIntExport Herror T_smallest_rectangle2(const Hobject Regions, Htuple *Row, Htuple *Column, Htuple *Phi, Htuple *Length1, Htuple *Length2);
LIntExport Herror smallest_rectangle2(const Hobject Regions, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror T_smallest_rectangle1(const Hobject Regions, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror smallest_rectangle1(const Hobject Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror T_smallest_circle(const Hobject Regions, Htuple *Row, Htuple *Column, Htuple *Radius);
LIntExport Herror smallest_circle(const Hobject Regions, double *Row, double *Column, double *Radius);
LIntExport Herror T_select_shape_proto(const Hobject Regions, const Hobject Pattern, Hobject *SelectedRegions, const Htuple Feature, const Htuple Min, const Htuple Max);
LIntExport Herror select_shape_proto(const Hobject Regions, const Hobject Pattern, Hobject *SelectedRegions, const char *Feature, double Min, double Max);
LIntExport Herror T_region_features(const Hobject Regions, const Htuple Features, Htuple *Value);
LIntExport Herror region_features(const Hobject Regions, const char *Features, double *Value);
LIntExport Herror T_select_shape(const Hobject Regions, Hobject *SelectedRegions, const Htuple Features, const Htuple Operation, const Htuple Min, const Htuple Max);
LIntExport Herror select_shape(const Hobject Regions, Hobject *SelectedRegions, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror T_runlength_features(const Hobject Regions, Htuple *NumRuns, Htuple *KFactor, Htuple *LFactor, Htuple *MeanLength, Htuple *Bytes);
LIntExport Herror runlength_features(const Hobject Regions, Hlong *NumRuns, double *KFactor, double *LFactor, double *MeanLength, Hlong *Bytes);
LIntExport Herror T_find_neighbors(const Hobject Regions1, const Hobject Regions2, const Htuple MaxDistance, Htuple *RegionIndex1, Htuple *RegionIndex2);
LIntExport Herror T_moments_region_2nd_rel_invar(const Hobject Regions, Htuple *PHI1, Htuple *PHI2);
LIntExport Herror moments_region_2nd_rel_invar(const Hobject Regions, double *PHI1, double *PHI2);
LIntExport Herror T_moments_region_2nd_invar(const Hobject Regions, Htuple *M11, Htuple *M20, Htuple *M02);
LIntExport Herror moments_region_2nd_invar(const Hobject Regions, double *M11, double *M20, double *M02);
LIntExport Herror T_moments_region_2nd(const Hobject Regions, Htuple *M11, Htuple *M20, Htuple *M02, Htuple *Ia, Htuple *Ib);
LIntExport Herror moments_region_2nd(const Hobject Regions, double *M11, double *M20, double *M02, double *Ia, double *Ib);
LIntExport Herror T_distance_rr_min(const Hobject Regions1, const Hobject Regions2, Htuple *MinDistance, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror distance_rr_min(const Hobject Regions1, const Hobject Regions2, double *MinDistance, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror T_distance_rr_min_dil(const Hobject Regions1, const Hobject Regions2, Htuple *MinDistance);
LIntExport Herror distance_rr_min_dil(const Hobject Regions1, const Hobject Regions2, Hlong *MinDistance);
LIntExport Herror T_diameter_region(const Hobject Regions, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2, Htuple *Diameter);
LIntExport Herror diameter_region(const Hobject Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2, double *Diameter);
LIntExport Herror T_test_region_point(const Hobject Regions, const Htuple Row, const Htuple Column, Htuple *IsInside);
LIntExport Herror test_region_point(const Hobject Regions, Hlong Row, Hlong Column, Hlong *IsInside);
LIntExport Herror T_get_region_index(const Hobject Regions, const Htuple Row, const Htuple Column, Htuple *Index);
LIntExport Herror get_region_index(const Hobject Regions, Hlong Row, Hlong Column, Hlong *Index);
LIntExport Herror T_select_region_point(const Hobject Regions, Hobject *DestRegions, const Htuple Row, const Htuple Column);
LIntExport Herror select_region_point(const Hobject Regions, Hobject *DestRegions, Hlong Row, Hlong Column);
LIntExport Herror T_select_shape_std(const Hobject Regions, Hobject *SelectedRegions, const Htuple Shape, const Htuple Percent);
LIntExport Herror select_shape_std(const Hobject Regions, Hobject *SelectedRegions, const char *Shape, double Percent);
LIntExport Herror T_hamming_distance_norm(const Hobject Regions1, const Hobject Regions2, const Htuple Norm, Htuple *Distance, Htuple *Similarity);
LIntExport Herror hamming_distance_norm(const Hobject Regions1, const Hobject Regions2, const char *Norm, Hlong *Distance, double *Similarity);
LIntExport Herror T_hamming_distance(const Hobject Regions1, const Hobject Regions2, Htuple *Distance, Htuple *Similarity);
LIntExport Herror hamming_distance(const Hobject Regions1, const Hobject Regions2, Hlong *Distance, double *Similarity);
LIntExport Herror T_eccentricity(const Hobject Regions, Htuple *Anisometry, Htuple *Bulkiness, Htuple *StructureFactor);
LIntExport Herror eccentricity(const Hobject Regions, double *Anisometry, double *Bulkiness, double *StructureFactor);
LIntExport Herror T_euler_number(const Hobject Regions, Htuple *EulerNumber);
LIntExport Herror euler_number(const Hobject Regions, Hlong *EulerNumber);
LIntExport Herror T_orientation_region(const Hobject Regions, Htuple *Phi);
LIntExport Herror orientation_region(const Hobject Regions, double *Phi);
LIntExport Herror T_elliptic_axis(const Hobject Regions, Htuple *Ra, Htuple *Rb, Htuple *Phi);
LIntExport Herror elliptic_axis(const Hobject Regions, double *Ra, double *Rb, double *Phi);
LIntExport Herror T_select_region_spatial(const Hobject Regions1, const Hobject Regions2, const Htuple Direction, Htuple *RegionIndex1, Htuple *RegionIndex2);
LIntExport Herror T_spatial_relation(const Hobject Regions1, const Hobject Regions2, const Htuple Percent, Htuple *RegionIndex1, Htuple *RegionIndex2, Htuple *Relation1, Htuple *Relation2);
LIntExport Herror T_convexity(const Hobject Regions, Htuple *Convexity);
LIntExport Herror convexity(const Hobject Regions, double *Convexity);
LIntExport Herror T_contlength(const Hobject Regions, Htuple *ContLength);
LIntExport Herror contlength(const Hobject Regions, double *ContLength);
LIntExport Herror T_connect_and_holes(const Hobject Regions, Htuple *NumConnected, Htuple *NumHoles);
LIntExport Herror connect_and_holes(const Hobject Regions, Hlong *NumConnected, Hlong *NumHoles);
LIntExport Herror T_rectangularity(const Hobject Regions, Htuple *Rectangularity);
LIntExport Herror rectangularity(const Hobject Regions, double *Rectangularity);
LIntExport Herror T_compactness(const Hobject Regions, Htuple *Compactness);
LIntExport Herror compactness(const Hobject Regions, double *Compactness);
LIntExport Herror T_circularity(const Hobject Regions, Htuple *Circularity);
LIntExport Herror circularity(const Hobject Regions, double *Circularity);
LIntExport Herror T_area_holes(const Hobject Regions, Htuple *Area);
LIntExport Herror area_holes(const Hobject Regions, Hlong *Area);
LIntExport Herror T_area_center(const Hobject Regions, Htuple *Area, Htuple *Row, Htuple *Column);
LIntExport Herror area_center(const Hobject Regions, Hlong *Area, double *Row, double *Column);
LIntExport Herror T_runlength_distribution(const Hobject Region, Htuple *Foreground, Htuple *Background);
LIntExport Herror T_roundness(const Hobject Regions, Htuple *Distance, Htuple *Sigma, Htuple *Roundness, Htuple *Sides);
LIntExport Herror roundness(const Hobject Regions, double *Distance, double *Sigma, double *Roundness, double *Sides);
LIntExport Herror T_inner_rectangle1(const Hobject Regions, Htuple *Row1, Htuple *Column1, Htuple *Row2, Htuple *Column2);
LIntExport Herror inner_rectangle1(const Hobject Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror T_inner_circle(const Hobject Regions, Htuple *Row, Htuple *Column, Htuple *Radius);
LIntExport Herror inner_circle(const Hobject Regions, double *Row, double *Column, double *Radius);
LIntExport Herror T_select_lines_longest(const Htuple RowBeginIn, const Htuple ColBeginIn, const Htuple RowEndIn, const Htuple ColEndIn, const Htuple Num, Htuple *RowBeginOut, Htuple *ColBeginOut, Htuple *RowEndOut, Htuple *ColEndOut);
LIntExport Herror T_partition_lines(const Htuple RowBeginIn, const Htuple ColBeginIn, const Htuple RowEndIn, const Htuple ColEndIn, const Htuple Feature, const Htuple Operation, const Htuple Min, const Htuple Max, Htuple *RowBeginOut, Htuple *ColBeginOut, Htuple *RowEndOut, Htuple *ColEndOut, Htuple *FailRowBOut, Htuple *FailColBOut, Htuple *FailRowEOut, Htuple *FailColEOut);
LIntExport Herror T_select_lines(const Htuple RowBeginIn, const Htuple ColBeginIn, const Htuple RowEndIn, const Htuple ColEndIn, const Htuple Feature, const Htuple Operation, const Htuple Min, const Htuple Max, Htuple *RowBeginOut, Htuple *ColBeginOut, Htuple *RowEndOut, Htuple *ColEndOut);
LIntExport Herror T_line_position(const Htuple RowBegin, const Htuple ColBegin, const Htuple RowEnd, const Htuple ColEnd, Htuple *RowCenter, Htuple *ColCenter, Htuple *Length, Htuple *Phi);
LIntExport Herror line_position(Hlong RowBegin, Hlong ColBegin, Hlong RowEnd, Hlong ColEnd, double *RowCenter, double *ColCenter, double *Length, double *Phi);
LIntExport Herror T_line_orientation(const Htuple RowBegin, const Htuple ColBegin, const Htuple RowEnd, const Htuple ColEnd, Htuple *Phi);
LIntExport Herror line_orientation(double RowBegin, double ColBegin, double RowEnd, double ColEnd, double *Phi);
LIntExport Herror T_approx_chain_simple(const Htuple Row, const Htuple Column, Htuple *ArcCenterRow, Htuple *ArcCenterCol, Htuple *ArcAngle, Htuple *ArcBeginRow, Htuple *ArcBeginCol, Htuple *LineBeginRow, Htuple *LineBeginCol, Htuple *LineEndRow, Htuple *LineEndCol, Htuple *Order);
LIntExport Herror T_approx_chain(const Htuple Row, const Htuple Column, const Htuple MinWidthCoord, const Htuple MaxWidthCoord, const Htuple ThreshStart, const Htuple ThreshEnd, const Htuple ThreshStep, const Htuple MinWidthSmooth, const Htuple MaxWidthSmooth, const Htuple MinWidthCurve, const Htuple MaxWidthCurve, const Htuple Weight1, const Htuple Weight2, const Htuple Weight3, Htuple *ArcCenterRow, Htuple *ArcCenterCol, Htuple *ArcAngle, Htuple *ArcBeginRow, Htuple *ArcBeginCol, Htuple *LineBeginRow, Htuple *LineBeginCol, Htuple *LineEndRow, Htuple *LineEndCol, Htuple *Order);
LIntExport Herror T_fit_surface_first_order(const Hobject Regions, const Hobject Image, const Htuple Algorithm, const Htuple Iterations, const Htuple ClippingFactor, Htuple *Alpha, Htuple *Beta, Htuple *Gamma);
LIntExport Herror fit_surface_first_order(const Hobject Regions, const Hobject Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, double *Alpha, double *Beta, double *Gamma);
LIntExport Herror T_fit_surface_second_order(const Hobject Regions, const Hobject Image, const Htuple Algorithm, const Htuple Iterations, const Htuple ClippingFactor, Htuple *Alpha, Htuple *Beta, Htuple *Gamma, Htuple *Delta, Htuple *Epsilon, Htuple *Zeta);
LIntExport Herror fit_surface_second_order(const Hobject Regions, const Hobject Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, double *Alpha, double *Beta, double *Gamma, double *Delta, double *Epsilon, double *Zeta);
LIntExport Herror T_gen_image_surface_second_order(Hobject *ImageSurface, const Htuple Type, const Htuple Alpha, const Htuple Beta, const Htuple Gamma, const Htuple Delta, const Htuple Epsilon, const Htuple Zeta, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror gen_image_surface_second_order(Hobject *ImageSurface, const char *Type, double Alpha, double Beta, double Gamma, double Delta, double Epsilon, double Zeta, double Row, double Column, Hlong Width, Hlong Height);
LIntExport Herror T_gen_image_surface_first_order(Hobject *ImageSurface, const Htuple Type, const Htuple Alpha, const Htuple Beta, const Htuple Gamma, const Htuple Row, const Htuple Column, const Htuple Width, const Htuple Height);
LIntExport Herror gen_image_surface_first_order(Hobject *ImageSurface, const char *Type, double Alpha, double Beta, double Gamma, double Row, double Column, Hlong Width, Hlong Height);
LIntExport Herror T_shape_histo_point(const Hobject Region, const Hobject Image, const Htuple Feature, const Htuple Row, const Htuple Column, Htuple *AbsoluteHisto, Htuple *RelativeHisto);
LIntExport Herror T_shape_histo_all(const Hobject Region, const Hobject Image, const Htuple Feature, Htuple *AbsoluteHisto, Htuple *RelativeHisto);
LIntExport Herror T_gray_features(const Hobject Regions, const Hobject Image, const Htuple Features, Htuple *Value);
LIntExport Herror gray_features(const Hobject Regions, const Hobject Image, const char *Features, double *Value);
LIntExport Herror T_select_gray(const Hobject Regions, const Hobject Image, Hobject *SelectedRegions, const Htuple Features, const Htuple Operation, const Htuple Min, const Htuple Max);
LIntExport Herror select_gray(const Hobject Regions, const Hobject Image, Hobject *SelectedRegions, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror T_min_max_gray(const Hobject Regions, const Hobject Image, const Htuple Percent, Htuple *Min, Htuple *Max, Htuple *Range);
LIntExport Herror min_max_gray(const Hobject Regions, const Hobject Image, double Percent, double *Min, double *Max, double *Range);
LIntExport Herror T_intensity(const Hobject Regions, const Hobject Image, Htuple *Mean, Htuple *Deviation);
LIntExport Herror intensity(const Hobject Regions, const Hobject Image, double *Mean, double *Deviation);
LIntExport Herror T_gray_histo_range(const Hobject Regions, const Hobject Image, const Htuple Min, const Htuple Max, const Htuple NumBins, Htuple *Histo, Htuple *BinSize);
LIntExport Herror gray_histo_range(const Hobject Regions, const Hobject Image, double Min, double Max, Hlong NumBins, Hlong *Histo, double *BinSize);
LIntExport Herror T_histo_2dim(const Hobject Regions, const Hobject ImageCol, const Hobject ImageRow, Hobject *Histo2Dim);
LIntExport Herror histo_2dim(const Hobject Regions, const Hobject ImageCol, const Hobject ImageRow, Hobject *Histo2Dim);
LIntExport Herror T_gray_histo_abs(const Hobject Regions, const Hobject Image, const Htuple Quantization, Htuple *AbsoluteHisto);
LIntExport Herror T_gray_histo(const Hobject Regions, const Hobject Image, Htuple *AbsoluteHisto, Htuple *RelativeHisto);
LIntExport Herror T_entropy_gray(const Hobject Regions, const Hobject Image, Htuple *Entropy, Htuple *Anisotropy);
LIntExport Herror entropy_gray(const Hobject Regions, const Hobject Image, double *Entropy, double *Anisotropy);
LIntExport Herror T_cooc_feature_matrix(const Hobject CoocMatrix, Htuple *Energy, Htuple *Correlation, Htuple *Homogeneity, Htuple *Contrast);
LIntExport Herror cooc_feature_matrix(const Hobject CoocMatrix, double *Energy, double *Correlation, double *Homogeneity, double *Contrast);
LIntExport Herror T_cooc_feature_image(const Hobject Regions, const Hobject Image, const Htuple LdGray, const Htuple Direction, Htuple *Energy, Htuple *Correlation, Htuple *Homogeneity, Htuple *Contrast);
LIntExport Herror cooc_feature_image(const Hobject Regions, const Hobject Image, Hlong LdGray, Hlong Direction, double *Energy, double *Correlation, double *Homogeneity, double *Contrast);
LIntExport Herror T_gen_cooc_matrix(const Hobject Regions, const Hobject Image, Hobject *Matrix, const Htuple LdGray, const Htuple Direction);
LIntExport Herror gen_cooc_matrix(const Hobject Regions, const Hobject Image, Hobject *Matrix, Hlong LdGray, Hlong Direction);
LIntExport Herror T_moments_gray_plane(const Hobject Regions, const Hobject Image, Htuple *MRow, Htuple *MCol, Htuple *Alpha, Htuple *Beta, Htuple *Mean);
LIntExport Herror moments_gray_plane(const Hobject Regions, const Hobject Image, double *MRow, double *MCol, double *Alpha, double *Beta, double *Mean);
LIntExport Herror T_plane_deviation(const Hobject Regions, const Hobject Image, Htuple *Deviation);
LIntExport Herror plane_deviation(const Hobject Regions, const Hobject Image, double *Deviation);
LIntExport Herror T_elliptic_axis_gray(const Hobject Regions, const Hobject Image, Htuple *Ra, Htuple *Rb, Htuple *Phi);
LIntExport Herror elliptic_axis_gray(const Hobject Regions, const Hobject Image, double *Ra, double *Rb, double *Phi);
LIntExport Herror T_area_center_gray(const Hobject Regions, const Hobject Image, Htuple *Area, Htuple *Row, Htuple *Column);
LIntExport Herror area_center_gray(const Hobject Regions, const Hobject Image, double *Area, double *Row, double *Column);
LIntExport Herror T_gray_projections(const Hobject Region, const Hobject Image, const Htuple Mode, Htuple *HorProjection, Htuple *VertProjection);
LIntExport Herror T_get_data_code_2d_objects(Hobject *DataCodeObjects, const Htuple DataCodeHandle, const Htuple CandidateHandle, const Htuple ObjectName);
LIntExport Herror get_data_code_2d_objects(Hobject *DataCodeObjects, Hlong DataCodeHandle, Hlong CandidateHandle, const char *ObjectName);
LIntExport Herror T_get_data_code_2d_results(const Htuple DataCodeHandle, const Htuple CandidateHandle, const Htuple ResultNames, Htuple *ResultValues);
LIntExport Herror get_data_code_2d_results(Hlong DataCodeHandle, const char *CandidateHandle, const char *ResultNames, char *ResultValues);
LIntExport Herror T_find_data_code_2d(const Hobject Image, Hobject *SymbolXLDs, const Htuple DataCodeHandle, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ResultHandles, Htuple *DecodedDataStrings);
LIntExport Herror find_data_code_2d(const Hobject Image, Hobject *SymbolXLDs, Hlong DataCodeHandle, const char *GenParamNames, Hlong GenParamValues, Hlong *ResultHandles, char *DecodedDataStrings);
LIntExport Herror T_set_data_code_2d_param(const Htuple DataCodeHandle, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror set_data_code_2d_param(Hlong DataCodeHandle, const char *GenParamNames, const char *GenParamValues);
LIntExport Herror T_get_data_code_2d_param(const Htuple DataCodeHandle, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror get_data_code_2d_param(Hlong DataCodeHandle, const char *GenParamNames, char *GenParamValues);
LIntExport Herror T_query_data_code_2d_params(const Htuple DataCodeHandle, const Htuple QueryName, Htuple *GenParamNames);
LIntExport Herror T_deserialize_data_code_2d_model(const Htuple SerializedItemHandle, Htuple *DataCodeHandle);
LIntExport Herror deserialize_data_code_2d_model(Hlong SerializedItemHandle, Hlong *DataCodeHandle);
LIntExport Herror T_serialize_data_code_2d_model(const Htuple DataCodeHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_data_code_2d_model(Hlong DataCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_data_code_2d_model(const Htuple FileName, Htuple *DataCodeHandle);
LIntExport Herror read_data_code_2d_model(const char *FileName, Hlong *DataCodeHandle);
LIntExport Herror T_write_data_code_2d_model(const Htuple DataCodeHandle, const Htuple FileName);
LIntExport Herror write_data_code_2d_model(Hlong DataCodeHandle, const char *FileName);
LIntExport Herror T_clear_all_data_code_2d_models(void);
LIntExport Herror clear_all_data_code_2d_models(void);
LIntExport Herror T_clear_data_code_2d_model(const Htuple DataCodeHandle);
LIntExport Herror clear_data_code_2d_model(Hlong DataCodeHandle);
LIntExport Herror T_create_data_code_2d_model(const Htuple SymbolType, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *DataCodeHandle);
LIntExport Herror create_data_code_2d_model(const char *SymbolType, const char *GenParamNames, const char *GenParamValues, Hlong *DataCodeHandle);
LIntExport Herror T_deserialize_class_train_data(const Htuple SerializedItemHandle, Htuple *ClassTrainDataHandle);
LIntExport Herror deserialize_class_train_data(Hlong SerializedItemHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror T_serialize_class_train_data(const Htuple ClassTrainDataHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_train_data(Hlong ClassTrainDataHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_class_train_data(const Htuple FileName, Htuple *ClassTrainDataHandle);
LIntExport Herror read_class_train_data(const char *FileName, Hlong *ClassTrainDataHandle);
LIntExport Herror T_write_class_train_data(const Htuple ClassTrainDataHandle, const Htuple FileName);
LIntExport Herror write_class_train_data(Hlong ClassTrainDataHandle, const char *FileName);
LIntExport Herror T_select_sub_feature_class_train_data(const Htuple ClassTrainDataHandle, const Htuple SubFeatureIndices, Htuple *SelectedClassTrainDataHandle);
LIntExport Herror T_set_feature_lengths_class_train_data(const Htuple ClassTrainDataHandle, const Htuple SubFeatureLength, const Htuple Names);
LIntExport Herror T_get_class_train_data_gmm(const Htuple GMMHandle, Htuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_gmm(Hlong GMMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror T_add_class_train_data_gmm(const Htuple GMMHandle, const Htuple ClassTrainDataHandle);
LIntExport Herror add_class_train_data_gmm(Hlong GMMHandle, Hlong ClassTrainDataHandle);
LIntExport Herror T_get_class_train_data_mlp(const Htuple MLPHandle, Htuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_mlp(Hlong MLPHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror T_add_class_train_data_mlp(const Htuple MLPHandle, const Htuple ClassTrainDataHandle);
LIntExport Herror add_class_train_data_mlp(Hlong MLPHandle, Hlong ClassTrainDataHandle);
LIntExport Herror T_get_class_train_data_knn(const Htuple KNNHandle, Htuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_knn(Hlong KNNHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror T_add_class_train_data_knn(const Htuple KNNHandle, const Htuple ClassTrainDataHandle);
LIntExport Herror add_class_train_data_knn(Hlong KNNHandle, Hlong ClassTrainDataHandle);
LIntExport Herror T_get_class_train_data_svm(const Htuple SVMHandle, Htuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_svm(Hlong SVMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror T_add_class_train_data_svm(const Htuple SVMHandle, const Htuple ClassTrainDataHandle);
LIntExport Herror add_class_train_data_svm(Hlong SVMHandle, Hlong ClassTrainDataHandle);
LIntExport Herror T_get_sample_num_class_train_data(const Htuple ClassTrainDataHandle, Htuple *NumSamples);
LIntExport Herror get_sample_num_class_train_data(Hlong ClassTrainDataHandle, Hlong *NumSamples);
LIntExport Herror T_get_sample_class_train_data(const Htuple ClassTrainDataHandle, const Htuple IndexSample, Htuple *Features, Htuple *ClassID);
LIntExport Herror T_clear_all_class_train_data(void);
LIntExport Herror clear_all_class_train_data(void);
LIntExport Herror T_clear_class_train_data(const Htuple ClassTrainDataHandle);
LIntExport Herror clear_class_train_data(Hlong ClassTrainDataHandle);
LIntExport Herror T_add_sample_class_train_data(const Htuple ClassTrainDataHandle, const Htuple Order, const Htuple Features, const Htuple ClassID);
LIntExport Herror T_create_class_train_data(const Htuple NumDim, Htuple *ClassTrainDataHandle);
LIntExport Herror create_class_train_data(Hlong NumDim, Hlong *ClassTrainDataHandle);
LIntExport Herror T_select_feature_set_mlp(const Htuple ClassTrainDataHandle, const Htuple SelectionMethod, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *MLPHandle, Htuple *SelectedFeatureIndices, Htuple *Score);
LIntExport Herror T_select_feature_set_svm(const Htuple ClassTrainDataHandle, const Htuple SelectionMethod, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *SVMHandle, Htuple *SelectedFeatureIndices, Htuple *Score);
LIntExport Herror T_select_feature_set_gmm(const Htuple ClassTrainDataHandle, const Htuple SelectionMethod, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *GMMHandle, Htuple *SelectedFeatureIndices, Htuple *Score);
LIntExport Herror T_select_feature_set_knn(const Htuple ClassTrainDataHandle, const Htuple SelectionMethod, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *KNNHandle, Htuple *SelectedFeatureIndices, Htuple *Score);
LIntExport Herror T_clear_all_class_knn(void);
LIntExport Herror clear_all_class_knn(void);
LIntExport Herror T_clear_class_knn(const Htuple KNNHandle);
LIntExport Herror clear_class_knn(Hlong KNNHandle);
LIntExport Herror T_get_sample_num_class_knn(const Htuple KNNHandle, Htuple *NumSamples);
LIntExport Herror get_sample_num_class_knn(Hlong KNNHandle, Hlong *NumSamples);
LIntExport Herror T_get_sample_class_knn(const Htuple KNNHandle, const Htuple IndexSample, Htuple *Features, Htuple *ClassID);
LIntExport Herror T_deserialize_class_knn(const Htuple SerializedItemHandle, Htuple *KNNHandle);
LIntExport Herror deserialize_class_knn(Hlong SerializedItemHandle, Hlong *KNNHandle);
LIntExport Herror T_serialize_class_knn(const Htuple KNNHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_knn(Hlong KNNHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_class_knn(const Htuple FileName, Htuple *KNNHandle);
LIntExport Herror read_class_knn(const char *FileName, Hlong *KNNHandle);
LIntExport Herror T_write_class_knn(const Htuple KNNHandle, const Htuple FileName);
LIntExport Herror write_class_knn(Hlong KNNHandle, const char *FileName);
LIntExport Herror T_get_params_class_knn(const Htuple KNNHandle, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror T_set_params_class_knn(const Htuple KNNHandle, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_classify_class_knn(const Htuple KNNHandle, const Htuple Features, Htuple *Result, Htuple *Rating);
LIntExport Herror T_train_class_knn(const Htuple KNNHandle, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror T_add_sample_class_knn(const Htuple KNNHandle, const Htuple Features, const Htuple ClassID);
LIntExport Herror add_sample_class_knn(Hlong KNNHandle, double Features, Hlong ClassID);
LIntExport Herror T_create_class_knn(const Htuple NumDim, Htuple *KNNHandle);
LIntExport Herror T_clear_all_class_lut(void);
LIntExport Herror clear_all_class_lut(void);
LIntExport Herror T_clear_class_lut(const Htuple ClassLUTHandle);
LIntExport Herror clear_class_lut(Hlong ClassLUTHandle);
LIntExport Herror T_create_class_lut_knn(const Htuple KNNHandle, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ClassLUTHandle);
LIntExport Herror T_create_class_lut_gmm(const Htuple GMMHandle, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ClassLUTHandle);
LIntExport Herror T_create_class_lut_svm(const Htuple SVMHandle, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ClassLUTHandle);
LIntExport Herror T_create_class_lut_mlp(const Htuple MLPHandle, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *ClassLUTHandle);
LIntExport Herror T_clear_all_class_gmm(void);
LIntExport Herror clear_all_class_gmm(void);
LIntExport Herror T_clear_class_gmm(const Htuple GMMHandle);
LIntExport Herror clear_class_gmm(Hlong GMMHandle);
LIntExport Herror T_clear_samples_class_gmm(const Htuple GMMHandle);
LIntExport Herror clear_samples_class_gmm(Hlong GMMHandle);
LIntExport Herror T_deserialize_class_gmm(const Htuple SerializedItemHandle, Htuple *GMMHandle);
LIntExport Herror deserialize_class_gmm(Hlong SerializedItemHandle, Hlong *GMMHandle);
LIntExport Herror T_serialize_class_gmm(const Htuple GMMHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_gmm(Hlong GMMHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_class_gmm(const Htuple FileName, Htuple *GMMHandle);
LIntExport Herror read_class_gmm(const char *FileName, Hlong *GMMHandle);
LIntExport Herror T_write_class_gmm(const Htuple GMMHandle, const Htuple FileName);
LIntExport Herror write_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror T_read_samples_class_gmm(const Htuple GMMHandle, const Htuple FileName);
LIntExport Herror read_samples_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror T_write_samples_class_gmm(const Htuple GMMHandle, const Htuple FileName);
LIntExport Herror write_samples_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror T_classify_class_gmm(const Htuple GMMHandle, const Htuple Features, const Htuple Num, Htuple *ClassID, Htuple *ClassProb, Htuple *Density, Htuple *KSigmaProb);
LIntExport Herror T_evaluate_class_gmm(const Htuple GMMHandle, const Htuple Features, Htuple *ClassProb, Htuple *Density, Htuple *KSigmaProb);
LIntExport Herror T_train_class_gmm(const Htuple GMMHandle, const Htuple MaxIter, const Htuple Threshold, const Htuple ClassPriors, const Htuple Regularize, Htuple *Centers, Htuple *Iter);
LIntExport Herror T_get_prep_info_class_gmm(const Htuple GMMHandle, const Htuple Preprocessing, Htuple *InformationCont, Htuple *CumInformationCont);
LIntExport Herror T_get_sample_num_class_gmm(const Htuple GMMHandle, Htuple *NumSamples);
LIntExport Herror get_sample_num_class_gmm(Hlong GMMHandle, Hlong *NumSamples);
LIntExport Herror T_get_sample_class_gmm(const Htuple GMMHandle, const Htuple NumSample, Htuple *Features, Htuple *ClassID);
LIntExport Herror T_add_sample_class_gmm(const Htuple GMMHandle, const Htuple Features, const Htuple ClassID, const Htuple Randomize);
LIntExport Herror T_get_params_class_gmm(const Htuple GMMHandle, Htuple *NumDim, Htuple *NumClasses, Htuple *MinCenters, Htuple *MaxCenters, Htuple *CovarType);
LIntExport Herror T_create_class_gmm(const Htuple NumDim, const Htuple NumClasses, const Htuple NumCenters, const Htuple CovarType, const Htuple Preprocessing, const Htuple NumComponents, const Htuple RandSeed, Htuple *GMMHandle);
LIntExport Herror create_class_gmm(Hlong NumDim, Hlong NumClasses, Hlong NumCenters, const char *CovarType, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Hlong *GMMHandle);
LIntExport Herror T_clear_all_class_svm(void);
LIntExport Herror clear_all_class_svm(void);
LIntExport Herror T_clear_class_svm(const Htuple SVMHandle);
LIntExport Herror clear_class_svm(Hlong SVMHandle);
LIntExport Herror T_clear_samples_class_svm(const Htuple SVMHandle);
LIntExport Herror clear_samples_class_svm(Hlong SVMHandle);
LIntExport Herror T_deserialize_class_svm(const Htuple SerializedItemHandle, Htuple *SVMHandle);
LIntExport Herror deserialize_class_svm(Hlong SerializedItemHandle, Hlong *SVMHandle);
LIntExport Herror T_serialize_class_svm(const Htuple SVMHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_svm(Hlong SVMHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_class_svm(const Htuple FileName, Htuple *SVMHandle);
LIntExport Herror read_class_svm(const char *FileName, Hlong *SVMHandle);
LIntExport Herror T_write_class_svm(const Htuple SVMHandle, const Htuple FileName);
LIntExport Herror write_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror T_read_samples_class_svm(const Htuple SVMHandle, const Htuple FileName);
LIntExport Herror read_samples_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror T_write_samples_class_svm(const Htuple SVMHandle, const Htuple FileName);
LIntExport Herror write_samples_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror T_evaluate_class_svm(const Htuple SVMHandle, const Htuple Features, Htuple *Result);
LIntExport Herror T_classify_class_svm(const Htuple SVMHandle, const Htuple Features, const Htuple Num, Htuple *Class);
LIntExport Herror T_reduce_class_svm(const Htuple SVMHandle, const Htuple Method, const Htuple MinRemainingSV, const Htuple MaxError, Htuple *SVMHandleReduced);
LIntExport Herror reduce_class_svm(Hlong SVMHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Hlong *SVMHandleReduced);
LIntExport Herror T_train_class_svm(const Htuple SVMHandle, const Htuple Epsilon, const Htuple TrainMode);
LIntExport Herror train_class_svm(Hlong SVMHandle, double Epsilon, const char *TrainMode);
LIntExport Herror T_get_prep_info_class_svm(const Htuple SVMHandle, const Htuple Preprocessing, Htuple *InformationCont, Htuple *CumInformationCont);
LIntExport Herror T_get_support_vector_num_class_svm(const Htuple SVMHandle, Htuple *NumSupportVectors, Htuple *NumSVPerSVM);
LIntExport Herror T_get_support_vector_class_svm(const Htuple SVMHandle, const Htuple IndexSupportVector, Htuple *Index);
LIntExport Herror T_get_sample_num_class_svm(const Htuple SVMHandle, Htuple *NumSamples);
LIntExport Herror get_sample_num_class_svm(Hlong SVMHandle, Hlong *NumSamples);
LIntExport Herror T_get_sample_class_svm(const Htuple SVMHandle, const Htuple IndexSample, Htuple *Features, Htuple *Target);
LIntExport Herror T_add_sample_class_svm(const Htuple SVMHandle, const Htuple Features, const Htuple Class);
LIntExport Herror T_get_params_class_svm(const Htuple SVMHandle, Htuple *NumFeatures, Htuple *KernelType, Htuple *KernelParam, Htuple *Nu, Htuple *NumClasses, Htuple *Mode, Htuple *Preprocessing, Htuple *NumComponents);
LIntExport Herror get_params_class_svm(Hlong SVMHandle, Hlong *NumFeatures, char *KernelType, double *KernelParam, double *Nu, Hlong *NumClasses, char *Mode, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror T_create_class_svm(const Htuple NumFeatures, const Htuple KernelType, const Htuple KernelParam, const Htuple Nu, const Htuple NumClasses, const Htuple Mode, const Htuple Preprocessing, const Htuple NumComponents, Htuple *SVMHandle);
LIntExport Herror create_class_svm(Hlong NumFeatures, const char *KernelType, double KernelParam, double Nu, Hlong NumClasses, const char *Mode, const char *Preprocessing, Hlong NumComponents, Hlong *SVMHandle);
LIntExport Herror T_clear_all_class_mlp(void);
LIntExport Herror clear_all_class_mlp(void);
LIntExport Herror T_clear_class_mlp(const Htuple MLPHandle);
LIntExport Herror clear_class_mlp(Hlong MLPHandle);
LIntExport Herror T_clear_samples_class_mlp(const Htuple MLPHandle);
LIntExport Herror clear_samples_class_mlp(Hlong MLPHandle);
LIntExport Herror T_deserialize_class_mlp(const Htuple SerializedItemHandle, Htuple *MLPHandle);
LIntExport Herror deserialize_class_mlp(Hlong SerializedItemHandle, Hlong *MLPHandle);
LIntExport Herror T_serialize_class_mlp(const Htuple MLPHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_mlp(Hlong MLPHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_class_mlp(const Htuple FileName, Htuple *MLPHandle);
LIntExport Herror read_class_mlp(const char *FileName, Hlong *MLPHandle);
LIntExport Herror T_write_class_mlp(const Htuple MLPHandle, const Htuple FileName);
LIntExport Herror write_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror T_read_samples_class_mlp(const Htuple MLPHandle, const Htuple FileName);
LIntExport Herror read_samples_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror T_write_samples_class_mlp(const Htuple MLPHandle, const Htuple FileName);
LIntExport Herror write_samples_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror T_classify_class_mlp(const Htuple MLPHandle, const Htuple Features, const Htuple Num, Htuple *Class, Htuple *Confidence);
LIntExport Herror T_evaluate_class_mlp(const Htuple MLPHandle, const Htuple Features, Htuple *Result);
LIntExport Herror T_train_class_mlp(const Htuple MLPHandle, const Htuple MaxIterations, const Htuple WeightTolerance, const Htuple ErrorTolerance, Htuple *Error, Htuple *ErrorLog);
LIntExport Herror T_get_prep_info_class_mlp(const Htuple MLPHandle, const Htuple Preprocessing, Htuple *InformationCont, Htuple *CumInformationCont);
LIntExport Herror T_get_sample_num_class_mlp(const Htuple MLPHandle, Htuple *NumSamples);
LIntExport Herror get_sample_num_class_mlp(Hlong MLPHandle, Hlong *NumSamples);
LIntExport Herror T_get_sample_class_mlp(const Htuple MLPHandle, const Htuple IndexSample, Htuple *Features, Htuple *Target);
LIntExport Herror T_get_rejection_params_class_mlp(const Htuple MLPHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_rejection_params_class_mlp(Hlong MLPHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror T_set_rejection_params_class_mlp(const Htuple MLPHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_rejection_params_class_mlp(Hlong MLPHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror T_add_sample_class_mlp(const Htuple MLPHandle, const Htuple Features, const Htuple Target);
LIntExport Herror T_get_regularization_params_class_mlp(const Htuple MLPHandle, const Htuple GenParamName, Htuple *GenParamValue);
LIntExport Herror get_regularization_params_class_mlp(Hlong MLPHandle, const char *GenParamName, double *GenParamValue);
LIntExport Herror T_set_regularization_params_class_mlp(const Htuple MLPHandle, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror set_regularization_params_class_mlp(Hlong MLPHandle, const char *GenParamName, double GenParamValue);
LIntExport Herror T_get_params_class_mlp(const Htuple MLPHandle, Htuple *NumInput, Htuple *NumHidden, Htuple *NumOutput, Htuple *OutputFunction, Htuple *Preprocessing, Htuple *NumComponents);
LIntExport Herror get_params_class_mlp(Hlong MLPHandle, Hlong *NumInput, Hlong *NumHidden, Hlong *NumOutput, char *OutputFunction, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror T_create_class_mlp(const Htuple NumInput, const Htuple NumHidden, const Htuple NumOutput, const Htuple OutputFunction, const Htuple Preprocessing, const Htuple NumComponents, const Htuple RandSeed, Htuple *MLPHandle);
LIntExport Herror create_class_mlp(Hlong NumInput, Hlong NumHidden, Hlong NumOutput, const char *OutputFunction, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Hlong *MLPHandle);
LIntExport Herror T_deserialize_class_box(const Htuple ClassifHandle, const Htuple SerializedItemHandle);
LIntExport Herror deserialize_class_box(Hlong ClassifHandle, Hlong SerializedItemHandle);
LIntExport Herror T_serialize_class_box(const Htuple ClassifHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_class_box(Hlong ClassifHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_write_class_box(const Htuple ClassifHandle, const Htuple FileName);
LIntExport Herror write_class_box(Hlong ClassifHandle, const char *FileName);
LIntExport Herror T_set_class_box_param(const Htuple ClassifHandle, const Htuple Flag, const Htuple Value);
LIntExport Herror set_class_box_param(Hlong ClassifHandle, const char *Flag, double Value);
LIntExport Herror T_read_sampset(const Htuple FileName, Htuple *SampKey);
LIntExport Herror read_sampset(const char *FileName, Hlong *SampKey);
LIntExport Herror T_read_class_box(const Htuple ClassifHandle, const Htuple FileName);
LIntExport Herror read_class_box(Hlong ClassifHandle, const char *FileName);
LIntExport Herror T_learn_sampset_box(const Htuple ClassifHandle, const Htuple SampKey, const Htuple Outfile, const Htuple NSamples, const Htuple StopError, const Htuple ErrorN);
LIntExport Herror learn_sampset_box(Hlong ClassifHandle, Hlong SampKey, const char *Outfile, Hlong NSamples, double StopError, Hlong ErrorN);
LIntExport Herror T_learn_class_box(const Htuple ClassifHandle, const Htuple Features, const Htuple Class);
LIntExport Herror T_get_class_box_param(const Htuple ClassifHandle, const Htuple Flag, Htuple *Value);
LIntExport Herror get_class_box_param(Hlong ClassifHandle, const char *Flag, double *Value);
LIntExport Herror T_clear_sampset(const Htuple SampKey);
LIntExport Herror clear_sampset(Hlong SampKey);
LIntExport Herror T_close_class_box(const Htuple ClassifHandle);
LIntExport Herror close_class_box(Hlong ClassifHandle);
LIntExport Herror T_create_class_box(Htuple *ClassifHandle);
LIntExport Herror create_class_box(Hlong *ClassifHandle);
LIntExport Herror T_descript_class_box(const Htuple ClassifHandle, const Htuple Dimensions, Htuple *ClassIdx, Htuple *BoxIdx, Htuple *BoxLowerBound, Htuple *BoxHigherBound, Htuple *BoxNumSamplesTrain, Htuple *BoxNumSamplesWrong);
LIntExport Herror descript_class_box(Hlong ClassifHandle, Hlong Dimensions, Hlong *ClassIdx, Hlong *BoxIdx, Hlong *BoxLowerBound, Hlong *BoxHigherBound, Hlong *BoxNumSamplesTrain, Hlong *BoxNumSamplesWrong);
LIntExport Herror T_test_sampset_box(const Htuple ClassifHandle, const Htuple SampKey, Htuple *Error);
LIntExport Herror test_sampset_box(Hlong ClassifHandle, Hlong SampKey, double *Error);
LIntExport Herror T_enquire_reject_class_box(const Htuple ClassifHandle, const Htuple FeatureList, Htuple *Class);
LIntExport Herror T_enquire_class_box(const Htuple ClassifHandle, const Htuple FeatureList, Htuple *Class);
LIntExport Herror T_close_all_class_box(void);
LIntExport Herror close_all_class_box(void);
LIntExport Herror T_convert_map_type(const Hobject Map, Hobject *MapConverted, const Htuple NewType, const Htuple ImageWidth);
LIntExport Herror convert_map_type(const Hobject Map, Hobject *MapConverted, const char *NewType, Hlong ImageWidth);
LIntExport Herror T_vector_to_pose(const Htuple WorldX, const Htuple WorldY, const Htuple WorldZ, const Htuple ImageRow, const Htuple ImageColumn, const Htuple CameraParam, const Htuple Method, const Htuple QualityType, Htuple *Pose, Htuple *Quality);
LIntExport Herror T_proj_hom_mat2d_to_pose(const Htuple Homography, const Htuple CameraMatrix, const Htuple Method, Htuple *Pose);
LIntExport Herror T_radial_distortion_self_calibration(const Hobject Contours, Hobject *SelectedContours, const Htuple Width, const Htuple Height, const Htuple InlierThreshold, const Htuple RandSeed, const Htuple DistortionModel, const Htuple DistortionCenter, const Htuple PrincipalPointVar, Htuple *CameraParam);
LIntExport Herror T_cam_par_to_cam_mat(const Htuple CameraParam, Htuple *CameraMatrix, Htuple *ImageWidth, Htuple *ImageHeight);
LIntExport Herror T_cam_mat_to_cam_par(const Htuple CameraMatrix, const Htuple Kappa, const Htuple ImageWidth, const Htuple ImageHeight, Htuple *CameraParam);
LIntExport Herror T_stationary_camera_self_calibration(const Htuple NumImages, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple ReferenceImage, const Htuple MappingSource, const Htuple MappingDest, const Htuple HomMatrices2D, const Htuple Rows1, const Htuple Cols1, const Htuple Rows2, const Htuple Cols2, const Htuple NumCorrespondences, const Htuple EstimationMethod, const Htuple CameraModel, const Htuple FixedCameraParams, Htuple *CameraMatrices, Htuple *Kappa, Htuple *RotationMatrices, Htuple *X, Htuple *Y, Htuple *Z, Htuple *Error);
LIntExport Herror T_get_rectangle_pose(const Hobject Contour, const Htuple CameraParam, const Htuple Width, const Htuple Height, const Htuple WeightingMode, const Htuple ClippingFactor, Htuple *Pose, Htuple *CovPose, Htuple *Error);
LIntExport Herror T_get_circle_pose(const Hobject Contour, const Htuple CameraParam, const Htuple Radius, const Htuple OutputType, Htuple *Pose1, Htuple *Pose2);
LIntExport Herror T_radiometric_self_calibration(const Hobject Images, const Htuple ExposureRatios, const Htuple Features, const Htuple FunctionType, const Htuple Smoothness, const Htuple PolynomialDegree, Htuple *InverseResponse);
LIntExport Herror T_map_image(const Hobject Image, const Hobject Map, Hobject *ImageMapped);
LIntExport Herror map_image(const Hobject Image, const Hobject Map, Hobject *ImageMapped);
LIntExport Herror T_gen_radial_distortion_map(Hobject *Map, const Htuple CamParamIn, const Htuple CamParamOut, const Htuple MapType);
LIntExport Herror T_gen_image_to_world_plane_map(Hobject *Map, const Htuple CameraParam, const Htuple WorldPose, const Htuple WidthIn, const Htuple HeightIn, const Htuple WidthMapped, const Htuple HeightMapped, const Htuple Scale, const Htuple MapType);
LIntExport Herror T_image_to_world_plane(const Hobject Image, Hobject *ImageWorld, const Htuple CameraParam, const Htuple WorldPose, const Htuple Width, const Htuple Height, const Htuple Scale, const Htuple Interpolation);
LIntExport Herror T_contour_to_world_plane_xld(const Hobject Contours, Hobject *ContoursTrans, const Htuple CameraParam, const Htuple WorldPose, const Htuple Scale);
LIntExport Herror T_image_points_to_world_plane(const Htuple CameraParam, const Htuple WorldPose, const Htuple Rows, const Htuple Cols, const Htuple Scale, Htuple *X, Htuple *Y);
LIntExport Herror T_set_origin_pose(const Htuple PoseIn, const Htuple DX, const Htuple DY, const Htuple DZ, Htuple *PoseNewOrigin);
LIntExport Herror T_hand_eye_calibration(const Htuple X, const Htuple Y, const Htuple Z, const Htuple Row, const Htuple Col, const Htuple NumPoints, const Htuple RobotPoses, const Htuple CameraParam, const Htuple Method, const Htuple QualityType, Htuple *CameraPose, Htuple *CalibrationPose, Htuple *Quality);
LIntExport Herror T_get_pose_type(const Htuple Pose, Htuple *OrderOfTransform, Htuple *OrderOfRotation, Htuple *ViewOfTransform);
LIntExport Herror T_convert_pose_type(const Htuple PoseIn, const Htuple OrderOfTransform, const Htuple OrderOfRotation, const Htuple ViewOfTransform, Htuple *PoseOut);
LIntExport Herror T_create_pose(const Htuple TransX, const Htuple TransY, const Htuple TransZ, const Htuple RotX, const Htuple RotY, const Htuple RotZ, const Htuple OrderOfTransform, const Htuple OrderOfRotation, const Htuple ViewOfTransform, Htuple *Pose);
LIntExport Herror T_change_radial_distortion_contours_xld(const Hobject Contours, Hobject *ContoursRectified, const Htuple CamParamIn, const Htuple CamParamOut);
LIntExport Herror T_change_radial_distortion_points(const Htuple Row, const Htuple Col, const Htuple CamParamIn, const Htuple CamParamOut, Htuple *RowChanged, Htuple *ColChanged);
LIntExport Herror T_change_radial_distortion_image(const Hobject Image, const Hobject Region, Hobject *ImageRectified, const Htuple CamParamIn, const Htuple CamParamOut);
LIntExport Herror T_change_radial_distortion_cam_par(const Htuple Mode, const Htuple CamParamIn, const Htuple DistortionCoeffs, Htuple *CamParamOut);
LIntExport Herror T_gen_caltab(const Htuple XNum, const Htuple YNum, const Htuple MarkDist, const Htuple DiameterRatio, const Htuple CalPlateDescr, const Htuple CalPlatePSFile);
LIntExport Herror gen_caltab(Hlong XNum, Hlong YNum, double MarkDist, double DiameterRatio, const char *CalPlateDescr, const char *CalPlatePSFile);
LIntExport Herror T_create_caltab(const Htuple NumRows, const Htuple MarksPerRow, const Htuple Diameter, const Htuple FinderRow, const Htuple FinderColumn, const Htuple Polarity, const Htuple CalPlateDescr, const Htuple CalPlatePSFile);
LIntExport Herror create_caltab(Hlong NumRows, Hlong MarksPerRow, double Diameter, Hlong FinderRow, Hlong FinderColumn, const char *Polarity, const char *CalPlateDescr, const char *CalPlatePSFile);
LIntExport Herror T_caltab_points(const Htuple CalPlateDescr, Htuple *X, Htuple *Y, Htuple *Z);
LIntExport Herror T_get_line_of_sight(const Htuple Row, const Htuple Column, const Htuple CameraParam, Htuple *PX, Htuple *PY, Htuple *PZ, Htuple *QX, Htuple *QY, Htuple *QZ);
LIntExport Herror T_project_hom_point_hom_mat3d(const Htuple HomMat3D, const Htuple Px, const Htuple Py, const Htuple Pz, const Htuple Pw, Htuple *Qx, Htuple *Qy, Htuple *Qw);
LIntExport Herror T_project_point_hom_mat3d(const Htuple HomMat3D, const Htuple Px, const Htuple Py, const Htuple Pz, Htuple *Qx, Htuple *Qy);
LIntExport Herror T_project_3d_point(const Htuple X, const Htuple Y, const Htuple Z, const Htuple CameraParam, Htuple *Row, Htuple *Column);
LIntExport Herror T_cam_par_pose_to_hom_mat3d(const Htuple CameraParam, const Htuple Pose, Htuple *HomMat3D);
LIntExport Herror T_hom_mat3d_to_pose(const Htuple HomMat3D, Htuple *Pose);
LIntExport Herror T_pose_to_hom_mat3d(const Htuple Pose, Htuple *HomMat3D);
LIntExport Herror T_deserialize_cam_par(const Htuple SerializedItemHandle, Htuple *CameraParam);
LIntExport Herror T_serialize_cam_par(const Htuple CameraParam, Htuple *SerializedItemHandle);
LIntExport Herror T_deserialize_pose(const Htuple SerializedItemHandle, Htuple *Pose);
LIntExport Herror T_serialize_pose(const Htuple Pose, Htuple *SerializedItemHandle);
LIntExport Herror T_read_pose(const Htuple PoseFile, Htuple *Pose);
LIntExport Herror T_write_pose(const Htuple Pose, const Htuple PoseFile);
LIntExport Herror T_read_cam_par(const Htuple CamParFile, Htuple *CameraParam);
LIntExport Herror T_write_cam_par(const Htuple CameraParam, const Htuple CamParFile);
LIntExport Herror T_sim_caltab(Hobject *SimImage, const Htuple CalPlateDescr, const Htuple CameraParam, const Htuple CalPlatePose, const Htuple GrayBackground, const Htuple GrayPlate, const Htuple GrayMarks, const Htuple ScaleFac);
LIntExport Herror T_disp_caltab(const Htuple WindowHandle, const Htuple CalPlateDescr, const Htuple CameraParam, const Htuple CalPlatePose, const Htuple ScaleFac);
LIntExport Herror T_camera_calibration(const Htuple NX, const Htuple NY, const Htuple NZ, const Htuple NRow, const Htuple NCol, const Htuple StartCamParam, const Htuple NStartPose, const Htuple EstimateParams, Htuple *CameraParam, Htuple *NFinalPose, Htuple *Errors);
LIntExport Herror T_find_marks_and_pose(const Hobject Image, const Hobject CalPlateRegion, const Htuple CalPlateDescr, const Htuple StartCamParam, const Htuple StartThresh, const Htuple DeltaThresh, const Htuple MinThresh, const Htuple Alpha, const Htuple MinContLength, const Htuple MaxDiamMarks, Htuple *RCoord, Htuple *CCoord, Htuple *StartPose);
LIntExport Herror T_find_caltab(const Hobject Image, Hobject *CalPlate, const Htuple CalPlateDescr, const Htuple SizeGauss, const Htuple MarkThresh, const Htuple MinDiamMarks);
LIntExport Herror find_caltab(const Hobject Image, Hobject *CalPlate, const char *CalPlateDescr, Hlong SizeGauss, Hlong MarkThresh, Hlong MinDiamMarks);
LIntExport Herror T_clear_all_camera_setup_models(void);
LIntExport Herror clear_all_camera_setup_models(void);
LIntExport Herror T_clear_camera_setup_model(const Htuple CameraSetupModelID);
LIntExport Herror clear_camera_setup_model(Hlong CameraSetupModelID);
LIntExport Herror T_serialize_camera_setup_model(const Htuple CameraSetupModelID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_camera_setup_model(Hlong CameraSetupModelID, Hlong *SerializedItemHandle);
LIntExport Herror T_deserialize_camera_setup_model(const Htuple SerializedItemHandle, Htuple *CameraSetupModelID);
LIntExport Herror deserialize_camera_setup_model(Hlong SerializedItemHandle, Hlong *CameraSetupModelID);
LIntExport Herror T_write_camera_setup_model(const Htuple CameraSetupModelID, const Htuple FileName);
LIntExport Herror write_camera_setup_model(Hlong CameraSetupModelID, const char *FileName);
LIntExport Herror T_read_camera_setup_model(const Htuple FileName, Htuple *CameraSetupModelID);
LIntExport Herror read_camera_setup_model(const char *FileName, Hlong *CameraSetupModelID);
LIntExport Herror T_get_camera_setup_param(const Htuple CameraSetupModelID, const Htuple CameraIdx, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_camera_setup_param(Hlong CameraSetupModelID, Hlong CameraIdx, const char *ParamName, double *ParamValue);
LIntExport Herror T_set_camera_setup_param(const Htuple CameraSetupModelID, const Htuple CameraIdx, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_camera_setup_param(Hlong CameraSetupModelID, Hlong CameraIdx, const char *ParamName, double ParamValue);
LIntExport Herror T_set_camera_setup_cam_param(const Htuple CameraSetupModelID, const Htuple CameraIdx, const Htuple CameraType, const Htuple CameraParam, const Htuple CameraPose);
LIntExport Herror T_create_camera_setup_model(const Htuple NumCameras, Htuple *CameraSetupModelID);
LIntExport Herror create_camera_setup_model(Hlong NumCameras, Hlong *CameraSetupModelID);
LIntExport Herror T_clear_all_calib_data(void);
LIntExport Herror clear_all_calib_data(void);
LIntExport Herror T_clear_calib_data(const Htuple CalibDataID);
LIntExport Herror clear_calib_data(Hlong CalibDataID);
LIntExport Herror T_deserialize_calib_data(const Htuple SerializedItemHandle, Htuple *CalibDataID);
LIntExport Herror deserialize_calib_data(Hlong SerializedItemHandle, Hlong *CalibDataID);
LIntExport Herror T_serialize_calib_data(const Htuple CalibDataID, Htuple *SerializedItemHandle);
LIntExport Herror serialize_calib_data(Hlong CalibDataID, Hlong *SerializedItemHandle);
LIntExport Herror T_read_calib_data(const Htuple FileName, Htuple *CalibDataID);
LIntExport Herror read_calib_data(const char *FileName, Hlong *CalibDataID);
LIntExport Herror T_write_calib_data(const Htuple CalibDataID, const Htuple FileName);
LIntExport Herror write_calib_data(Hlong CalibDataID, const char *FileName);
LIntExport Herror T_calibrate_hand_eye(const Htuple CalibDataID, Htuple *Errors);
LIntExport Herror T_calibrate_cameras(const Htuple CalibDataID, Htuple *Error);
LIntExport Herror calibrate_cameras(Hlong CalibDataID, double *Error);
LIntExport Herror T_remove_calib_data(const Htuple CalibDataID, const Htuple ItemType, const Htuple ItemIdx);
LIntExport Herror remove_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx);
LIntExport Herror T_set_calib_data(const Htuple CalibDataID, const Htuple ItemType, const Htuple ItemIdx, const Htuple DataName, const Htuple DataValue);
LIntExport Herror set_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx, const char *DataName, const char *DataValue);
LIntExport Herror T_find_calib_object(const Hobject Image, const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx, const Htuple GenParamName, const Htuple GenParamValue);
LIntExport Herror T_remove_calib_data_observ(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx);
LIntExport Herror remove_calib_data_observ(Hlong CalibDataID, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx);
LIntExport Herror T_get_calib_data_observ_contours(Hobject *Contours, const Htuple CalibDataID, const Htuple ContourName, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx);
LIntExport Herror get_calib_data_observ_contours(Hobject *Contours, Hlong CalibDataID, const char *ContourName, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx);
LIntExport Herror T_get_calib_data_observ_pose(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx, Htuple *ObjInCameraPose);
LIntExport Herror T_set_calib_data_observ_pose(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx, const Htuple ObjInCameraPose);
LIntExport Herror T_get_calib_data_observ_points(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx, Htuple *Row, Htuple *Column, Htuple *Index, Htuple *Pose);
LIntExport Herror T_set_calib_data_observ_points(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CalibObjIdx, const Htuple CalibObjPoseIdx, const Htuple Row, const Htuple Column, const Htuple Index, const Htuple Pose);
LIntExport Herror T_query_calib_data_observ_indices(const Htuple CalibDataID, const Htuple ItemType, const Htuple ItemIdx, Htuple *Index1, Htuple *Index2);
LIntExport Herror T_get_calib_data(const Htuple CalibDataID, const Htuple ItemType, const Htuple ItemIdx, const Htuple DataName, Htuple *DataValue);
LIntExport Herror get_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx, const char *DataName, double *DataValue);
LIntExport Herror T_set_calib_data_calib_object(const Htuple CalibDataID, const Htuple CalibObjIdx, const Htuple CalibObjDescr);
LIntExport Herror set_calib_data_calib_object(Hlong CalibDataID, Hlong CalibObjIdx, double CalibObjDescr);
LIntExport Herror T_set_calib_data_cam_param(const Htuple CalibDataID, const Htuple CameraIdx, const Htuple CameraType, const Htuple CameraParam);
LIntExport Herror T_create_calib_data(const Htuple CalibSetup, const Htuple NumCameras, const Htuple NumCalibObjects, Htuple *CalibDataID);
LIntExport Herror create_calib_data(const char *CalibSetup, Hlong NumCameras, Hlong NumCalibObjects, Hlong *CalibDataID);
LIntExport Herror T_get_bead_inspection_param(const Htuple BeadInspectionModel, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_bead_inspection_param(Hlong BeadInspectionModel, const char *ParamName, Hlong *ParamValue);
LIntExport Herror T_set_bead_inspection_param(const Htuple BeadInspectionModel, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_bead_inspection_param(Hlong BeadInspectionModel, const char *ParamName, const char *ParamValue);
LIntExport Herror T_apply_bead_inspection_model(const Hobject Image, Hobject *LeftContour, Hobject *RightContour, Hobject *ErrorSegment, const Htuple BeadInspectionModel, Htuple *ErrorType);
LIntExport Herror T_clear_bead_inspection_model(const Htuple BeadInspectionModel);
LIntExport Herror clear_bead_inspection_model(Hlong BeadInspectionModel);
LIntExport Herror T_create_bead_inspection_model(const Hobject BeadContour, const Htuple TargetThickness, const Htuple ThicknessTolerance, const Htuple PositionTolerance, const Htuple Polarity, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *BeadInspectionModel);
LIntExport Herror create_bead_inspection_model(const Hobject BeadContour, Hlong TargetThickness, Hlong ThicknessTolerance, Hlong PositionTolerance, const char *Polarity, const char *GenParamNames, Hlong GenParamValues, Hlong *BeadInspectionModel);
LIntExport Herror T_deserialize_bar_code_model(const Htuple SerializedItemHandle, Htuple *BarCodeHandle);
LIntExport Herror deserialize_bar_code_model(Hlong SerializedItemHandle, Hlong *BarCodeHandle);
LIntExport Herror T_serialize_bar_code_model(const Htuple BarCodeHandle, Htuple *SerializedItemHandle);
LIntExport Herror serialize_bar_code_model(Hlong BarCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror T_read_bar_code_model(const Htuple FileName, Htuple *BarCodeHandle);
LIntExport Herror read_bar_code_model(const char *FileName, Hlong *BarCodeHandle);
LIntExport Herror T_write_bar_code_model(const Htuple BarCodeHandle, const Htuple FileName);
LIntExport Herror write_bar_code_model(Hlong BarCodeHandle, const char *FileName);
LIntExport Herror T_get_bar_code_object(Hobject *BarCodeObjects, const Htuple BarCodeHandle, const Htuple CandidateHandle, const Htuple ObjectName);
LIntExport Herror get_bar_code_object(Hobject *BarCodeObjects, Hlong BarCodeHandle, const char *CandidateHandle, const char *ObjectName);
LIntExport Herror T_get_bar_code_result(const Htuple BarCodeHandle, const Htuple CandidateHandle, const Htuple ResultName, Htuple *BarCodeResults);
LIntExport Herror get_bar_code_result(Hlong BarCodeHandle, const char *CandidateHandle, const char *ResultName, char *BarCodeResults);
LIntExport Herror T_decode_bar_code_rectangle2(const Hobject Image, const Htuple BarCodeHandle, const Htuple CodeType, const Htuple Row, const Htuple Column, const Htuple Phi, const Htuple Length1, const Htuple Length2, Htuple *DecodedDataStrings);
LIntExport Herror decode_bar_code_rectangle2(const Hobject Image, Hlong BarCodeHandle, const char *CodeType, double Row, double Column, double Phi, double Length1, double Length2, char *DecodedDataStrings);
LIntExport Herror T_find_bar_code(const Hobject Image, Hobject *SymbolRegions, const Htuple BarCodeHandle, const Htuple CodeType, Htuple *DecodedDataStrings);
LIntExport Herror find_bar_code(const Hobject Image, Hobject *SymbolRegions, Hlong BarCodeHandle, const char *CodeType, char *DecodedDataStrings);
LIntExport Herror T_query_bar_code_params(const Htuple BarCodeHandle, const Htuple Properties, Htuple *GenParamNames);
LIntExport Herror query_bar_code_params(Hlong BarCodeHandle, const char *Properties, char *GenParamNames);
LIntExport Herror T_get_bar_code_param_specific(const Htuple BarCodeHandle, const Htuple CodeTypes, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror get_bar_code_param_specific(Hlong BarCodeHandle, const char *CodeTypes, const char *GenParamNames, double *GenParamValues);
LIntExport Herror T_get_bar_code_param(const Htuple BarCodeHandle, const Htuple GenParamNames, Htuple *GenParamValues);
LIntExport Herror get_bar_code_param(Hlong BarCodeHandle, const char *GenParamNames, double *GenParamValues);
LIntExport Herror T_set_bar_code_param_specific(const Htuple BarCodeHandle, const Htuple CodeTypes, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror set_bar_code_param_specific(Hlong BarCodeHandle, const char *CodeTypes, const char *GenParamNames, double GenParamValues);
LIntExport Herror T_set_bar_code_param(const Htuple BarCodeHandle, const Htuple GenParamNames, const Htuple GenParamValues);
LIntExport Herror set_bar_code_param(Hlong BarCodeHandle, const char *GenParamNames, double GenParamValues);
LIntExport Herror T_clear_all_bar_code_models(void);
LIntExport Herror clear_all_bar_code_models(void);
LIntExport Herror T_clear_bar_code_model(const Htuple BarCodeHandle);
LIntExport Herror clear_bar_code_model(Hlong BarCodeHandle);
LIntExport Herror T_create_bar_code_model(const Htuple GenParamNames, const Htuple GenParamValues, Htuple *BarCodeHandle);
LIntExport Herror create_bar_code_model(const char *GenParamNames, double GenParamValues, Hlong *BarCodeHandle);
LIntExport Herror T_decode_2d_bar_code(const Htuple BarCodeDescr, const Htuple BarCodeDimension, const Htuple BarCodeData, Htuple *SymbolCharacters, Htuple *CorrSymbolData, Htuple *DecodedData, Htuple *DecodingError, Htuple *StructuredAppend);
LIntExport Herror T_get_2d_bar_code_pos(const Hobject BarCodeRegion, const Hobject Image, const Htuple BarCodeDescr, const Htuple CodeRegDescr, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *BarCodeDimension, Htuple *BarCodeData, Htuple *DataElementRow, Htuple *DataElementCol);
LIntExport Herror T_get_2d_bar_code(const Hobject BarCodeRegion, const Hobject Image, const Htuple BarCodeDescr, const Htuple CodeRegDescr, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *BarCodeDimension, Htuple *BarCodeData);
LIntExport Herror T_find_2d_bar_code(const Hobject Image, Hobject *CodeRegion, const Htuple BarCodeDescr, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *CodeRegDescr);
LIntExport Herror T_gen_2d_bar_code_descr(const Htuple CodeType, const Htuple GenParamNames, const Htuple GenParamValues, Htuple *BarCodeDescr);
LIntExport Herror T_discrete_1d_bar_code(const Htuple Elements, const Htuple BarCodeDescr, Htuple *DiscreteBarCode);
LIntExport Herror T_decode_1d_bar_code(const Htuple BarCodeElements, const Htuple BarCodeDescr, Htuple *Characters, Htuple *Reference, Htuple *IsCorrect);
LIntExport Herror T_get_1d_bar_code_scanline(const Hobject BarCodeRegion, const Htuple BarCodeDescr, const Htuple GenericName, const Htuple GenericValue, const Htuple Orientation, const Htuple StopIfFound, Htuple *BarCodeElements, Htuple *ScanlineNumPoints, Htuple *ScanlineDecoded, Htuple *ScanlinePointsRow, Htuple *ScanlinePointsColumn);
LIntExport Herror T_get_1d_bar_code(const Hobject BarCodeRegion, const Htuple BarCodeDescr, const Htuple GenericName, const Htuple GenericValue, const Htuple Orientation, Htuple *BarCodeElements);
LIntExport Herror T_find_1d_bar_code_region(const Hobject Image, Hobject *CodeRegion, const Htuple BarCodeDescr, const Htuple GenericName, const Htuple GenericValue, Htuple *Orientation);
LIntExport Herror T_find_1d_bar_code_scanline(const Hobject Image, Hobject *CodeRegion, const Htuple BarCodeDescr, const Htuple GenericName, const Htuple GenericValue, const Htuple StopIfFound, Htuple *BarcodeFound, Htuple *BarCodeElements, Htuple *Orientation, Htuple *ScanlineNumPoints, Htuple *ScanlineDecoded, Htuple *ScanlinePointsRow, Htuple *ScanlinePointsColumn);
LIntExport Herror T_find_1d_bar_code(const Hobject Image, Hobject *CodeRegion, const Htuple BarCodeDescr, const Htuple GenericName, const Htuple GenericValue, Htuple *BarcodeFound, Htuple *BarCodeElements, Htuple *Orientation);
LIntExport Herror T_gen_1d_bar_code_descr(const Htuple CodeName, const Htuple MinCharacters, const Htuple MaxCharacters, Htuple *BarCodeDescr);
LIntExport Herror T_gen_1d_bar_code_descr_gen(const Htuple MinCodeLength, const Htuple MaxCodeLength, const Htuple ElementSizes, const Htuple StartElement, const Htuple StopElement, const Htuple MaxSizeRatio, const Htuple DiscreteCode, Htuple *BarCodeDescr);
LIntExport Herror T_close_bg_esti(const Htuple BgEstiHandle);
LIntExport Herror close_bg_esti(Hlong BgEstiHandle);
LIntExport Herror T_give_bg_esti(Hobject *BackgroundImage, const Htuple BgEstiHandle);
LIntExport Herror give_bg_esti(Hobject *BackgroundImage, Hlong BgEstiHandle);
LIntExport Herror T_update_bg_esti(const Hobject PresentImage, const Hobject UpDateRegion, const Htuple BgEstiHandle);
LIntExport Herror update_bg_esti(const Hobject PresentImage, const Hobject UpDateRegion, Hlong BgEstiHandle);
LIntExport Herror T_run_bg_esti(const Hobject PresentImage, Hobject *ForegroundRegion, const Htuple BgEstiHandle);
LIntExport Herror run_bg_esti(const Hobject PresentImage, Hobject *ForegroundRegion, Hlong BgEstiHandle);
LIntExport Herror T_get_bg_esti_params(const Htuple BgEstiHandle, Htuple *Syspar1, Htuple *Syspar2, Htuple *GainMode, Htuple *Gain1, Htuple *Gain2, Htuple *AdaptMode, Htuple *MinDiff, Htuple *StatNum, Htuple *ConfidenceC, Htuple *TimeC);
LIntExport Herror get_bg_esti_params(Hlong BgEstiHandle, double *Syspar1, double *Syspar2, char *GainMode, double *Gain1, double *Gain2, char *AdaptMode, double *MinDiff, Hlong *StatNum, double *ConfidenceC, double *TimeC);
LIntExport Herror T_set_bg_esti_params(const Htuple BgEstiHandle, const Htuple Syspar1, const Htuple Syspar2, const Htuple GainMode, const Htuple Gain1, const Htuple Gain2, const Htuple AdaptMode, const Htuple MinDiff, const Htuple StatNum, const Htuple ConfidenceC, const Htuple TimeC);
LIntExport Herror set_bg_esti_params(Hlong BgEstiHandle, double Syspar1, double Syspar2, const char *GainMode, double Gain1, double Gain2, const char *AdaptMode, double MinDiff, Hlong StatNum, double ConfidenceC, double TimeC);
LIntExport Herror T_create_bg_esti(const Hobject InitializeImage, const Htuple Syspar1, const Htuple Syspar2, const Htuple GainMode, const Htuple Gain1, const Htuple Gain2, const Htuple AdaptMode, const Htuple MinDiff, const Htuple StatNum, const Htuple ConfidenceC, const Htuple TimeC, Htuple *BgEstiHandle);
LIntExport Herror create_bg_esti(const Hobject InitializeImage, double Syspar1, double Syspar2, const char *GainMode, double Gain1, double Gain2, const char *AdaptMode, double MinDiff, Hlong StatNum, double ConfidenceC, double TimeC, Hlong *BgEstiHandle);
LIntExport Herror T_close_all_bg_esti(void);
LIntExport Herror close_all_bg_esti(void);
LIntExport Herror T_control_io_channel(const Htuple IOChannelHandle, const Htuple ParamAction, const Htuple ParamArgument, Htuple *ParamValue);
LIntExport Herror T_write_io_channel(const Htuple IOChannelHandle, const Htuple Value, Htuple *Status);
LIntExport Herror T_read_io_channel(const Htuple IOChannelHandle, Htuple *Value, Htuple *Status);
LIntExport Herror T_set_io_channel_param(const Htuple IOChannelHandle, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror T_get_io_channel_param(const Htuple IOChannelHandle, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror T_close_io_channel(const Htuple IOChannelHandle);
LIntExport Herror close_io_channel(Hlong IOChannelHandle);
LIntExport Herror T_open_io_channel(const Htuple IODeviceHandle, const Htuple IOChannelName, const Htuple GenParamName, const Htuple GenParamValue, Htuple *IOChannelHandle);
LIntExport Herror T_query_io_device(const Htuple IODeviceHandle, const Htuple IOChannelName, const Htuple Query, Htuple *Result);
LIntExport Herror T_control_io_device(const Htuple IODeviceHandle, const Htuple Action, const Htuple Argument, Htuple *Result);
LIntExport Herror T_set_io_device_param(const Htuple IODeviceHandle, const Htuple ParamName, const Htuple ParamValue);
LIntExport Herror set_io_device_param(Hlong IODeviceHandle, const char *ParamName, const char *ParamValue);
LIntExport Herror T_get_io_device_param(const Htuple IODeviceHandle, const Htuple ParamName, Htuple *ParamValue);
LIntExport Herror get_io_device_param(Hlong IODeviceHandle, const char *ParamName, char *ParamValue);
LIntExport Herror T_close_io_device(const Htuple IODeviceHandle);
LIntExport Herror close_io_device(Hlong IODeviceHandle);
LIntExport Herror T_open_io_device(const Htuple IOInterfaceName, const Htuple IODeviceName, const Htuple GenParamName, const Htuple GenParamValue, Htuple *IODeviceHandle);
LIntExport Herror T_control_io_interface(const Htuple IOInterfaceName, const Htuple Action, const Htuple Argument, Htuple *Result);
LIntExport Herror T_query_io_interface(const Htuple IOInterfaceName, const Htuple Query, Htuple *Result);
LIntExport Herror T_get_framegrabber_param(const Htuple AcqHandle, const Htuple Param, Htuple *Value);
LIntExport Herror get_framegrabber_param(Hlong AcqHandle, const char *Param, char *Value);
LIntExport Herror T_set_framegrabber_param(const Htuple AcqHandle, const Htuple Param, const Htuple Value);
LIntExport Herror set_framegrabber_param(Hlong AcqHandle, const char *Param, const char *Value);
LIntExport Herror T_get_framegrabber_callback(const Htuple AcqHandle, const Htuple CallbackType, Htuple *CallbackFunction, Htuple *UserContext);
LIntExport Herror get_framegrabber_callback(Hlong AcqHandle, const char *CallbackType, Hlong *CallbackFunction, Hlong *UserContext);
LIntExport Herror T_set_framegrabber_callback(const Htuple AcqHandle, const Htuple CallbackType, const Htuple CallbackFunction, const Htuple UserContext);
LIntExport Herror set_framegrabber_callback(Hlong AcqHandle, const char *CallbackType, Hlong CallbackFunction, Hlong UserContext);
LIntExport Herror T_grab_data_async(Hobject *Image, Hobject *Region, Hobject *Contours, const Htuple AcqHandle, const Htuple MaxDelay, Htuple *Data);
LIntExport Herror grab_data_async(Hobject *Image, Hobject *Region, Hobject *Contours, Hlong AcqHandle, double MaxDelay, char *Data);
LIntExport Herror T_grab_data(Hobject *Image, Hobject *Region, Hobject *Contours, const Htuple AcqHandle, Htuple *Data);
LIntExport Herror grab_data(Hobject *Image, Hobject *Region, Hobject *Contours, Hlong AcqHandle, char *Data);
LIntExport Herror T_grab_image_async(Hobject *Image, const Htuple AcqHandle, const Htuple MaxDelay);
LIntExport Herror grab_image_async(Hobject *Image, Hlong AcqHandle, double MaxDelay);
LIntExport Herror T_grab_image_start(const Htuple AcqHandle, const Htuple MaxDelay);
LIntExport Herror grab_image_start(Hlong AcqHandle, double MaxDelay);
LIntExport Herror T_grab_image(Hobject *Image, const Htuple AcqHandle);
LIntExport Herror grab_image(Hobject *Image, Hlong AcqHandle);
LIntExport Herror T_info_framegrabber(const Htuple Name, const Htuple Query, Htuple *Information, Htuple *ValueList);
LIntExport Herror T_close_all_framegrabbers(void);
LIntExport Herror close_all_framegrabbers(void);
LIntExport Herror T_close_framegrabber(const Htuple AcqHandle);
LIntExport Herror close_framegrabber(Hlong AcqHandle);
LIntExport Herror T_open_framegrabber(const Htuple Name, const Htuple HorizontalResolution, const Htuple VerticalResolution, const Htuple ImageWidth, const Htuple ImageHeight, const Htuple StartRow, const Htuple StartColumn, const Htuple Field, const Htuple BitsPerChannel, const Htuple ColorSpace, const Htuple Generic, const Htuple ExternalTrigger, const Htuple CameraType, const Htuple Device, const Htuple Port, const Htuple LineIn, Htuple *AcqHandle);
LIntExport Herror open_framegrabber(const char *Name, Hlong HorizontalResolution, Hlong VerticalResolution, Hlong ImageWidth, Hlong ImageHeight, Hlong StartRow, Hlong StartColumn, const char *Field, Hlong BitsPerChannel, const char *ColorSpace, double Generic, const char *ExternalTrigger, const char *CameraType, const char *Device, Hlong Port, Hlong LineIn, Hlong *AcqHandle);
LIntExport Herror T_get_framegrabber_lut(const Htuple AcqHandle, Htuple *ImageRed, Htuple *ImageGreen, Htuple *ImageBlue);
LIntExport Herror T_set_framegrabber_lut(const Htuple AcqHandle, const Htuple ImageRed, const Htuple ImageGreen, const Htuple ImageBlue);


#if defined(__cplusplus)
}
#endif

