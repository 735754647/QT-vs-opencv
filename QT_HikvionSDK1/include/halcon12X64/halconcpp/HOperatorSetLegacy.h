/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 12.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HOPERATORSET_LEGACY
#define HCPP_HOPERATORSET_LEGACY

namespace HalconCpp
{




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

LIntExport Herror union_cotangential_contours_xld(const HObject& Contours, HObject* UnionContours, const HTuple& FitClippingLength, const HTuple& FitLength, const HTuple& MaxTangAngle, const HTuple& MaxDist, const HTuple& MaxDistPerp, const HTuple& MaxOverlap, const HTuple& Mode);

LIntExport Herror polar_trans_contour_xld_inv(const HObject& PolarContour, HObject* XYTransContour, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& WidthIn, const HTuple& HeightIn, const HTuple& Width, const HTuple& Height);

LIntExport Herror polar_trans_contour_xld(const HObject& Contour, HObject* PolarTransContour, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_nurbs_interp(const HTuple& Rows, const HTuple& Cols, const HTuple& Tangents, const HTuple& Degree, HTuple* CtrlRows, HTuple* CtrlCols, HTuple* Knots);

LIntExport Herror gen_contour_nurbs_xld(HObject* Contour, const HTuple& Rows, const HTuple& Cols, const HTuple& Knots, const HTuple& Weights, const HTuple& Degree, const HTuple& MaxError, const HTuple& MaxDistance);

LIntExport Herror union2_closed_polygons_xld(const HObject& Polygons1, const HObject& Polygons2, HObject* PolygonsUnion);

LIntExport Herror union2_closed_contours_xld(const HObject& Contours1, const HObject& Contours2, HObject* ContoursUnion);

LIntExport Herror symm_difference_closed_polygons_xld(const HObject& Polygons1, const HObject& Polygons2, HObject* PolygonsDifference);

LIntExport Herror symm_difference_closed_contours_xld(const HObject& Contours1, const HObject& Contours2, HObject* ContoursDifference);

LIntExport Herror difference_closed_polygons_xld(const HObject& Polygons, const HObject& Sub, HObject* PolygonsDifference);

LIntExport Herror difference_closed_contours_xld(const HObject& Contours, const HObject& Sub, HObject* ContoursDifference);

LIntExport Herror intersection_closed_polygons_xld(const HObject& Polygons1, const HObject& Polygons2, HObject* PolygonsIntersection);

LIntExport Herror intersection_closed_contours_xld(const HObject& Contours1, const HObject& Contours2, HObject* ContoursIntersection);

LIntExport Herror union_cocircular_contours_xld(const HObject& Contours, HObject* UnionContours, const HTuple& MaxArcAngleDiff, const HTuple& MaxArcOverlap, const HTuple& MaxTangentAngle, const HTuple& MaxDist, const HTuple& MaxRadiusDiff, const HTuple& MaxCenterDist, const HTuple& MergeSmallContours, const HTuple& Iterations);

LIntExport Herror crop_contours_xld(const HObject& Contours, HObject* CroppedContours, const HTuple& Row1, const HTuple& Col1, const HTuple& Row2, const HTuple& Col2, const HTuple& CloseContours);

LIntExport Herror gen_cross_contour_xld(HObject* Cross, const HTuple& Row, const HTuple& Col, const HTuple& Size, const HTuple& Angle);

LIntExport Herror sort_contours_xld(const HObject& Contours, HObject* SortedContours, const HTuple& SortMode, const HTuple& Order, const HTuple& RowOrCol);

LIntExport Herror merge_cont_line_scan_xld(const HObject& CurrConts, const HObject& PrevConts, HObject* CurrMergedConts, HObject* PrevMergedConts, const HTuple& ImageHeight, const HTuple& Margin, const HTuple& MergeBorder, const HTuple& MaxImagesCont);

LIntExport Herror read_polygon_xld_arc_info(HObject* Polygons, const HTuple& FileName);

LIntExport Herror write_polygon_xld_arc_info(const HObject& Polygons, const HTuple& FileName);

LIntExport Herror read_contour_xld_arc_info(HObject* Contours, const HTuple& FileName);

LIntExport Herror write_contour_xld_arc_info(const HObject& Contours, const HTuple& FileName);

LIntExport Herror read_world_file(const HTuple& FileName, HTuple* WorldTransformation);

LIntExport Herror gen_parallel_contour_xld(const HObject& Contours, HObject* ParallelContours, const HTuple& Mode, const HTuple& Distance);

LIntExport Herror gen_rectangle2_contour_xld(HObject* Rectangle, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2);

LIntExport Herror dist_rectangle2_contour_points_xld(const HObject& Contour, const HTuple& ClippingEndPoints, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2, HTuple* Distances);

LIntExport Herror fit_rectangle2_contour_xld(const HObject& Contours, const HTuple& Algorithm, const HTuple& MaxNumPoints, const HTuple& MaxClosureDist, const HTuple& ClippingEndPoints, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2, HTuple* PointOrder);

LIntExport Herror segment_contour_attrib_xld(const HObject& Contour, HObject* ContourPart, const HTuple& Attribute, const HTuple& Operation, const HTuple& Min, const HTuple& Max);

LIntExport Herror segment_contours_xld(const HObject& Contours, HObject* ContoursSplit, const HTuple& Mode, const HTuple& SmoothCont, const HTuple& MaxLineDist1, const HTuple& MaxLineDist2);

LIntExport Herror fit_circle_contour_xld(const HObject& Contours, const HTuple& Algorithm, const HTuple& MaxNumPoints, const HTuple& MaxClosureDist, const HTuple& ClippingEndPoints, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* Row, HTuple* Column, HTuple* Radius, HTuple* StartPhi, HTuple* EndPhi, HTuple* PointOrder);

LIntExport Herror fit_line_contour_xld(const HObject& Contours, const HTuple& Algorithm, const HTuple& MaxNumPoints, const HTuple& ClippingEndPoints, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* RowBegin, HTuple* ColBegin, HTuple* RowEnd, HTuple* ColEnd, HTuple* Nr, HTuple* Nc, HTuple* Dist);

LIntExport Herror dist_ellipse_contour_points_xld(const HObject& Contour, const HTuple& DistanceMode, const HTuple& ClippingEndPoints, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, HTuple* Distances);

LIntExport Herror dist_ellipse_contour_xld(const HObject& Contours, const HTuple& Mode, const HTuple& MaxNumPoints, const HTuple& ClippingEndPoints, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, HTuple* MinDist, HTuple* MaxDist, HTuple* AvgDist, HTuple* SigmaDist);

LIntExport Herror fit_ellipse_contour_xld(const HObject& Contours, const HTuple& Algorithm, const HTuple& MaxNumPoints, const HTuple& MaxClosureDist, const HTuple& ClippingEndPoints, const HTuple& VossTabSize, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Radius1, HTuple* Radius2, HTuple* StartPhi, HTuple* EndPhi, HTuple* PointOrder);

LIntExport Herror gen_circle_contour_xld(HObject* ContCircle, const HTuple& Row, const HTuple& Column, const HTuple& Radius, const HTuple& StartPhi, const HTuple& EndPhi, const HTuple& PointOrder, const HTuple& Resolution);

LIntExport Herror gen_ellipse_contour_xld(HObject* ContEllipse, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, const HTuple& StartPhi, const HTuple& EndPhi, const HTuple& PointOrder, const HTuple& Resolution);

LIntExport Herror add_noise_white_contour_xld(const HObject& Contours, HObject* NoisyContours, const HTuple& NumRegrPoints, const HTuple& Amp);

LIntExport Herror combine_roads_xld(const HObject& EdgePolygons, const HObject& ModParallels, const HObject& ExtParallels, const HObject& CenterLines, HObject* RoadSides, const HTuple& MaxAngleParallel, const HTuple& MaxAngleColinear, const HTuple& MaxDistanceParallel, const HTuple& MaxDistanceColinear);

LIntExport Herror max_parallels_xld(const HObject& ExtParallels, HObject* MaxPolygons);

LIntExport Herror mod_parallels_xld(const HObject& Parallels, const HObject& Image, HObject* ModParallels, HObject* ExtParallels, const HTuple& Quality, const HTuple& MinGray, const HTuple& MaxGray, const HTuple& MaxStandard);

LIntExport Herror info_parallels_xld(const HObject& Parallels, const HObject& Image, HTuple* QualityMin, HTuple* QualityMax, HTuple* GrayMin, HTuple* GrayMax, HTuple* StandardMin, HTuple* StandardMax);

LIntExport Herror get_parallels_xld(const HObject& Parallels, HTuple* Row1, HTuple* Col1, HTuple* Length1, HTuple* Phi1, HTuple* Row2, HTuple* Col2, HTuple* Length2, HTuple* Phi2);

LIntExport Herror gen_parallels_xld(const HObject& Polygons, HObject* Parallels, const HTuple& Len, const HTuple& Dist, const HTuple& Alpha, const HTuple& Merge);

LIntExport Herror get_lines_xld(const HObject& Polygon, HTuple* BeginRow, HTuple* BeginCol, HTuple* EndRow, HTuple* EndCol, HTuple* Length, HTuple* Phi);

LIntExport Herror get_polygon_xld(const HObject& Polygon, HTuple* Row, HTuple* Col, HTuple* Length, HTuple* Phi);

LIntExport Herror gen_polygons_xld(const HObject& Contours, HObject* Polygons, const HTuple& Type, const HTuple& Alpha);

LIntExport Herror split_contours_xld(const HObject& Polygons, HObject* Contours, const HTuple& Mode, const HTuple& Weight, const HTuple& Smooth);

LIntExport Herror projective_trans_contour_xld(const HObject& Contours, HObject* ContoursProjTrans, const HTuple& HomMat2D);

LIntExport Herror affine_trans_polygon_xld(const HObject& Polygons, HObject* PolygonsAffinTrans, const HTuple& HomMat2D);

LIntExport Herror affine_trans_contour_xld(const HObject& Contours, HObject* ContoursAffinTrans, const HTuple& HomMat2D);

LIntExport Herror close_contours_xld(const HObject& Contours, HObject* ClosedContours);

LIntExport Herror clip_end_points_contours_xld(const HObject& Contours, HObject* ClippedContours, const HTuple& Mode, const HTuple& Length);

LIntExport Herror clip_contours_xld(const HObject& Contours, HObject* ClippedContours, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror local_max_contours_xld(const HObject& Contours, const HObject& Image, HObject* LocalMaxContours, const HTuple& MinPercent, const HTuple& MinDiff, const HTuple& Distance);

LIntExport Herror union_straight_contours_histo_xld(const HObject& Contours, HObject* UnionContours, HObject* SelectedContours, const HTuple& RefLineStartRow, const HTuple& RefLineStartColumn, const HTuple& RefLineEndRow, const HTuple& RefLineEndColumn, const HTuple& Width, const HTuple& MaxWidth, const HTuple& FilterSize, HTuple* HistoValues);

LIntExport Herror union_straight_contours_xld(const HObject& Contours, HObject* UnionContours, const HTuple& MaxDist, const HTuple& MaxDiff, const HTuple& Percent, const HTuple& Mode, const HTuple& Iterations);

LIntExport Herror union_collinear_contours_ext_xld(const HObject& Contours, HObject* UnionContours, const HTuple& MaxDistAbs, const HTuple& MaxDistRel, const HTuple& MaxShift, const HTuple& MaxAngle, const HTuple& MaxOverlap, const HTuple& MaxRegrError, const HTuple& MaxCosts, const HTuple& WeightDist, const HTuple& WeightShift, const HTuple& WeightAngle, const HTuple& WeightLink, const HTuple& WeightRegr, const HTuple& Mode);

LIntExport Herror union_collinear_contours_xld(const HObject& Contours, HObject* UnionContours, const HTuple& MaxDistAbs, const HTuple& MaxDistRel, const HTuple& MaxShift, const HTuple& MaxAngle, const HTuple& Mode);

LIntExport Herror union_adjacent_contours_xld(const HObject& Contours, HObject* UnionContours, const HTuple& MaxDistAbs, const HTuple& MaxDistRel, const HTuple& Mode);

LIntExport Herror select_contours_xld(const HObject& Contours, HObject* SelectedContours, const HTuple& Feature, const HTuple& Min1, const HTuple& Max1, const HTuple& Min2, const HTuple& Max2);

LIntExport Herror get_regress_params_xld(const HObject& Contours, HTuple* Length, HTuple* Nx, HTuple* Ny, HTuple* Dist, HTuple* Fpx, HTuple* Fpy, HTuple* Lpx, HTuple* Lpy, HTuple* Mean, HTuple* Deviation);

LIntExport Herror regress_contours_xld(const HObject& Contours, HObject* RegressContours, const HTuple& Mode, const HTuple& Iterations);

LIntExport Herror get_contour_angle_xld(const HObject& Contour, const HTuple& AngleMode, const HTuple& CalcMode, const HTuple& Lookaround, HTuple* Angles);

LIntExport Herror smooth_contours_xld(const HObject& Contours, HObject* SmoothedContours, const HTuple& NumRegrPoints);

LIntExport Herror contour_point_num_xld(const HObject& Contour, HTuple* Length);

LIntExport Herror query_contour_global_attribs_xld(const HObject& Contour, HTuple* Attribs);

LIntExport Herror get_contour_global_attrib_xld(const HObject& Contour, const HTuple& Name, HTuple* Attrib);

LIntExport Herror query_contour_attribs_xld(const HObject& Contour, HTuple* Attribs);

LIntExport Herror get_contour_attrib_xld(const HObject& Contour, const HTuple& Name, HTuple* Attrib);

LIntExport Herror get_contour_xld(const HObject& Contour, HTuple* Row, HTuple* Col);

LIntExport Herror gen_contour_region_xld(const HObject& Regions, HObject* Contours, const HTuple& Mode);

LIntExport Herror gen_contour_polygon_rounded_xld(HObject* Contour, const HTuple& Row, const HTuple& Col, const HTuple& Radius, const HTuple& SamplingInterval);

LIntExport Herror gen_contour_polygon_xld(HObject* Contour, const HTuple& Row, const HTuple& Col);

LIntExport Herror gen_contours_skeleton_xld(const HObject& Skeleton, HObject* Contours, const HTuple& Length, const HTuple& Mode);

LIntExport Herror disp_xld(const HObject& XLDObject, const HTuple& WindowHandle);

LIntExport Herror wiener_filter_ni(const HObject& Image, const HObject& Psf, const HObject& NoiseRegion, HObject* RestoredImage, const HTuple& MaskWidth, const HTuple& MaskHeight);

LIntExport Herror wiener_filter(const HObject& Image, const HObject& Psf, const HObject& FilteredImage, HObject* RestoredImage);

LIntExport Herror gen_psf_motion(HObject* Psf, const HTuple& PSFwidth, const HTuple& PSFheight, const HTuple& Blurring, const HTuple& Angle, const HTuple& Type);

LIntExport Herror simulate_motion(const HObject& Image, HObject* MovedImage, const HTuple& Blurring, const HTuple& Angle, const HTuple& Type);

LIntExport Herror gen_psf_defocus(HObject* Psf, const HTuple& PSFwidth, const HTuple& PSFheight, const HTuple& Blurring);

LIntExport Herror simulate_defocus(const HObject& Image, HObject* DefocusedImage, const HTuple& Blurring);

LIntExport Herror deserialize_variation_model(const HTuple& SerializedItemHandle, HTuple* ModelID);

LIntExport Herror serialize_variation_model(const HTuple& ModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_variation_model(const HTuple& FileName, HTuple* ModelID);

LIntExport Herror write_variation_model(const HTuple& ModelID, const HTuple& FileName);

LIntExport Herror get_thresh_images_variation_model(HObject* MinImage, HObject* MaxImage, const HTuple& ModelID);

LIntExport Herror get_variation_model(HObject* Image, HObject* VarImage, const HTuple& ModelID);

LIntExport Herror compare_ext_variation_model(const HObject& Image, HObject* Region, const HTuple& ModelID, const HTuple& Mode);

LIntExport Herror compare_variation_model(const HObject& Image, HObject* Region, const HTuple& ModelID);

LIntExport Herror prepare_direct_variation_model(const HObject& RefImage, const HObject& VarImage, const HTuple& ModelID, const HTuple& AbsThreshold, const HTuple& VarThreshold);

LIntExport Herror prepare_variation_model(const HTuple& ModelID, const HTuple& AbsThreshold, const HTuple& VarThreshold);

LIntExport Herror train_variation_model(const HObject& Images, const HTuple& ModelID);

LIntExport Herror clear_all_variation_models();

LIntExport Herror clear_variation_model(const HTuple& ModelID);

LIntExport Herror clear_train_data_variation_model(const HTuple& ModelID);

LIntExport Herror create_variation_model(const HTuple& Width, const HTuple& Height, const HTuple& Type, const HTuple& Mode, HTuple* ModelID);

LIntExport Herror tuple_union(const HTuple& Set1, const HTuple& Set2, HTuple* Union);

LIntExport Herror tuple_intersection(const HTuple& Set1, const HTuple& Set2, HTuple* Intersection);

LIntExport Herror tuple_difference(const HTuple& Set1, const HTuple& Set2, HTuple* Difference);

LIntExport Herror tuple_symmdiff(const HTuple& Set1, const HTuple& Set2, HTuple* SymmDiff);

LIntExport Herror tuple_is_string_elem(const HTuple& T, HTuple* IsString);

LIntExport Herror tuple_is_real_elem(const HTuple& T, HTuple* IsReal);

LIntExport Herror tuple_is_int_elem(const HTuple& T, HTuple* IsInt);

LIntExport Herror tuple_type_elem(const HTuple& T, HTuple* Types);

LIntExport Herror tuple_is_mixed(const HTuple& T, HTuple* IsMixed);

LIntExport Herror tuple_is_string(const HTuple& T, HTuple* IsString);

LIntExport Herror tuple_is_real(const HTuple& T, HTuple* IsReal);

LIntExport Herror tuple_is_int(const HTuple& T, HTuple* IsInt);

LIntExport Herror tuple_type(const HTuple& T, HTuple* Type);

LIntExport Herror tuple_histo_range(const HTuple& Tuple, const HTuple& Min, const HTuple& Max, const HTuple& NumBins, HTuple* Histo, HTuple* BinSize);

LIntExport Herror tuple_regexp_select(const HTuple& Data, const HTuple& Expression, HTuple* Selection);

LIntExport Herror tuple_regexp_test(const HTuple& Data, const HTuple& Expression, HTuple* NumMatches);

LIntExport Herror tuple_regexp_replace(const HTuple& Data, const HTuple& Expression, const HTuple& Replace, HTuple* Result);

LIntExport Herror tuple_regexp_match(const HTuple& Data, const HTuple& Expression, HTuple* Matches);

LIntExport Herror tuple_rand(const HTuple& Length, HTuple* Rand);

LIntExport Herror tuple_length(const HTuple& Tuple, HTuple* Length);

LIntExport Herror tuple_sgn(const HTuple& T, HTuple* Sgn);

LIntExport Herror tuple_max2(const HTuple& T1, const HTuple& T2, HTuple* Max2);

LIntExport Herror tuple_min2(const HTuple& T1, const HTuple& T2, HTuple* Min2);

LIntExport Herror tuple_max(const HTuple& Tuple, HTuple* Max);

LIntExport Herror tuple_min(const HTuple& Tuple, HTuple* Min);

LIntExport Herror tuple_cumul(const HTuple& Tuple, HTuple* Cumul);

LIntExport Herror tuple_select_rank(const HTuple& Tuple, const HTuple& RankIndex, HTuple* Selected);

LIntExport Herror tuple_median(const HTuple& Tuple, HTuple* Median);

LIntExport Herror tuple_sum(const HTuple& Tuple, HTuple* Sum);

LIntExport Herror tuple_mean(const HTuple& Tuple, HTuple* Mean);

LIntExport Herror tuple_deviation(const HTuple& Tuple, HTuple* Deviation);

LIntExport Herror tuple_uniq(const HTuple& Tuple, HTuple* Uniq);

LIntExport Herror tuple_find_last(const HTuple& Tuple, const HTuple& ToFind, HTuple* Index);

LIntExport Herror tuple_find_first(const HTuple& Tuple, const HTuple& ToFind, HTuple* Index);

LIntExport Herror tuple_find(const HTuple& Tuple, const HTuple& ToFind, HTuple* Indices);

LIntExport Herror tuple_sort_index(const HTuple& Tuple, HTuple* Indices);

LIntExport Herror tuple_sort(const HTuple& Tuple, HTuple* Sorted);

LIntExport Herror tuple_inverse(const HTuple& Tuple, HTuple* Inverted);

LIntExport Herror tuple_concat(const HTuple& T1, const HTuple& T2, HTuple* Concat);

LIntExport Herror tuple_select_range(const HTuple& Tuple, const HTuple& Leftindex, const HTuple& Rightindex, HTuple* Selected);

LIntExport Herror tuple_last_n(const HTuple& Tuple, const HTuple& Index, HTuple* Selected);

LIntExport Herror tuple_first_n(const HTuple& Tuple, const HTuple& Index, HTuple* Selected);

LIntExport Herror tuple_insert(const HTuple& Tuple, const HTuple& Index, const HTuple& InsertTuple, HTuple* Extended);

LIntExport Herror tuple_replace(const HTuple& Tuple, const HTuple& Index, const HTuple& ReplaceTuple, HTuple* Replaced);

LIntExport Herror tuple_remove(const HTuple& Tuple, const HTuple& Index, HTuple* Reduced);

LIntExport Herror tuple_select_mask(const HTuple& Tuple, const HTuple& Mask, HTuple* Selected);

LIntExport Herror tuple_select(const HTuple& Tuple, const HTuple& Index, HTuple* Selected);

LIntExport Herror tuple_str_bit_select(const HTuple& Tuple, const HTuple& Index, HTuple* Selected);

LIntExport Herror tuple_gen_sequence(const HTuple& Start, const HTuple& End, const HTuple& Step, HTuple* Sequence);

LIntExport Herror tuple_gen_const(const HTuple& Length, const HTuple& Const, HTuple* Newtuple);

LIntExport Herror tuple_environment(const HTuple& Names, HTuple* Values);

LIntExport Herror tuple_split(const HTuple& String, const HTuple& Separator, HTuple* Substrings);

LIntExport Herror tuple_substr(const HTuple& String, const HTuple& Position1, const HTuple& Position2, HTuple* Substring);

LIntExport Herror tuple_str_last_n(const HTuple& String, const HTuple& Position, HTuple* Substring);

LIntExport Herror tuple_str_first_n(const HTuple& String, const HTuple& Position, HTuple* Substring);

LIntExport Herror tuple_strrchr(const HTuple& String, const HTuple& ToFind, HTuple* Position);

LIntExport Herror tuple_strchr(const HTuple& String, const HTuple& ToFind, HTuple* Position);

LIntExport Herror tuple_strrstr(const HTuple& String, const HTuple& ToFind, HTuple* Position);

LIntExport Herror tuple_strstr(const HTuple& String, const HTuple& ToFind, HTuple* Position);

LIntExport Herror tuple_strlen(const HTuple& T1, HTuple* Length);

LIntExport Herror tuple_less_equal_elem(const HTuple& T1, const HTuple& T2, HTuple* Lesseq);

LIntExport Herror tuple_less_elem(const HTuple& T1, const HTuple& T2, HTuple* Less);

LIntExport Herror tuple_greater_equal_elem(const HTuple& T1, const HTuple& T2, HTuple* Greatereq);

LIntExport Herror tuple_greater_elem(const HTuple& T1, const HTuple& T2, HTuple* Greater);

LIntExport Herror tuple_not_equal_elem(const HTuple& T1, const HTuple& T2, HTuple* Nequal);

LIntExport Herror tuple_equal_elem(const HTuple& T1, const HTuple& T2, HTuple* Equal);

LIntExport Herror tuple_less_equal(const HTuple& T1, const HTuple& T2, HTuple* Lesseq);

LIntExport Herror tuple_less(const HTuple& T1, const HTuple& T2, HTuple* Less);

LIntExport Herror tuple_greater_equal(const HTuple& T1, const HTuple& T2, HTuple* Greatereq);

LIntExport Herror tuple_greater(const HTuple& T1, const HTuple& T2, HTuple* Greater);

LIntExport Herror tuple_not_equal(const HTuple& T1, const HTuple& T2, HTuple* Nequal);

LIntExport Herror tuple_equal(const HTuple& T1, const HTuple& T2, HTuple* Equal);

LIntExport Herror tuple_not(const HTuple& T, HTuple* Not);

LIntExport Herror tuple_xor(const HTuple& T1, const HTuple& T2, HTuple* Xor);

LIntExport Herror tuple_or(const HTuple& T1, const HTuple& T2, HTuple* Or);

LIntExport Herror tuple_and(const HTuple& T1, const HTuple& T2, HTuple* And);

LIntExport Herror tuple_bnot(const HTuple& T, HTuple* BNot);

LIntExport Herror tuple_bxor(const HTuple& T1, const HTuple& T2, HTuple* BXor);

LIntExport Herror tuple_bor(const HTuple& T1, const HTuple& T2, HTuple* BOr);

LIntExport Herror tuple_band(const HTuple& T1, const HTuple& T2, HTuple* BAnd);

LIntExport Herror tuple_rsh(const HTuple& T, const HTuple& Shift, HTuple* Rsh);

LIntExport Herror tuple_lsh(const HTuple& T, const HTuple& Shift, HTuple* Lsh);

LIntExport Herror tuple_chrt(const HTuple& T, HTuple* Chrt);

LIntExport Herror tuple_ords(const HTuple& T, HTuple* Ords);

LIntExport Herror tuple_chr(const HTuple& T, HTuple* Chr);

LIntExport Herror tuple_ord(const HTuple& T, HTuple* Ord);

LIntExport Herror tuple_string(const HTuple& T, const HTuple& Format, HTuple* String);

LIntExport Herror tuple_is_number(const HTuple& T, HTuple* IsNumber);

LIntExport Herror tuple_number(const HTuple& T, HTuple* Number);

LIntExport Herror tuple_round(const HTuple& T, HTuple* Round);

LIntExport Herror tuple_int(const HTuple& T, HTuple* Int);

LIntExport Herror tuple_real(const HTuple& T, HTuple* Real);

LIntExport Herror tuple_ldexp(const HTuple& T1, const HTuple& T2, HTuple* Ldexp);

LIntExport Herror tuple_fmod(const HTuple& T1, const HTuple& T2, HTuple* Fmod);

LIntExport Herror tuple_mod(const HTuple& T1, const HTuple& T2, HTuple* Mod);

LIntExport Herror tuple_ceil(const HTuple& T, HTuple* Ceil);

LIntExport Herror tuple_floor(const HTuple& T, HTuple* Floor);

LIntExport Herror tuple_pow(const HTuple& T1, const HTuple& T2, HTuple* Pow);

LIntExport Herror tuple_log10(const HTuple& T, HTuple* Log);

LIntExport Herror tuple_log(const HTuple& T, HTuple* Log);

LIntExport Herror tuple_exp(const HTuple& T, HTuple* Exp);

LIntExport Herror tuple_tanh(const HTuple& T, HTuple* Tanh);

LIntExport Herror tuple_cosh(const HTuple& T, HTuple* Cosh);

LIntExport Herror tuple_sinh(const HTuple& T, HTuple* Sinh);

LIntExport Herror tuple_rad(const HTuple& Deg, HTuple* Rad);

LIntExport Herror tuple_deg(const HTuple& Rad, HTuple* Deg);

LIntExport Herror tuple_atan2(const HTuple& Y, const HTuple& X, HTuple* ATan);

LIntExport Herror tuple_atan(const HTuple& T, HTuple* ATan);

LIntExport Herror tuple_acos(const HTuple& T, HTuple* ACos);

LIntExport Herror tuple_asin(const HTuple& T, HTuple* ASin);

LIntExport Herror tuple_tan(const HTuple& T, HTuple* Tan);

LIntExport Herror tuple_cos(const HTuple& T, HTuple* Cos);

LIntExport Herror tuple_sin(const HTuple& T, HTuple* Sin);

LIntExport Herror tuple_fabs(const HTuple& T, HTuple* Abs);

LIntExport Herror tuple_sqrt(const HTuple& T, HTuple* Sqrt);

LIntExport Herror tuple_abs(const HTuple& T, HTuple* Abs);

LIntExport Herror tuple_neg(const HTuple& T, HTuple* Neg);

LIntExport Herror tuple_div(const HTuple& Q1, const HTuple& Q2, HTuple* Quot);

LIntExport Herror tuple_mult(const HTuple& P1, const HTuple& P2, HTuple* Prod);

LIntExport Herror tuple_sub(const HTuple& D1, const HTuple& D2, HTuple* Diff);

LIntExport Herror tuple_add(const HTuple& S1, const HTuple& S2, HTuple* Sum);

LIntExport Herror deserialize_tuple(const HTuple& SerializedItemHandle, HTuple* Tuple);

LIntExport Herror serialize_tuple(const HTuple& Tuple, HTuple* SerializedItemHandle);

LIntExport Herror write_tuple(const HTuple& Tuple, const HTuple& FileName);

LIntExport Herror read_tuple(const HTuple& FileName, HTuple* Tuple);

LIntExport Herror pose_average(const HTuple& Poses, const HTuple& Weights, const HTuple& Mode, const HTuple& SigmaT, const HTuple& SigmaR, HTuple* AveragePose, HTuple* Quality);

LIntExport Herror quat_rotate_point_3d(const HTuple& Quaternion, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* Qx, HTuple* Qy, HTuple* Qz);

LIntExport Herror quat_conjugate(const HTuple& Quaternion, HTuple* ConjugatedQuaternion);

LIntExport Herror quat_normalize(const HTuple& Quaternion, HTuple* NormalizedQuaternion);

LIntExport Herror axis_angle_to_quat(const HTuple& AxisX, const HTuple& AxisY, const HTuple& AxisZ, const HTuple& Angle, HTuple* Quaternion);

LIntExport Herror quat_to_pose(const HTuple& Quaternion, HTuple* Pose);

LIntExport Herror pose_invert(const HTuple& Pose, HTuple* PoseInvert);

LIntExport Herror pose_compose(const HTuple& PoseLeft, const HTuple& PoseRight, HTuple* PoseCompose);

LIntExport Herror quat_to_hom_mat3d(const HTuple& Quaternion, HTuple* RotationMatrix);

LIntExport Herror pose_to_quat(const HTuple& Pose, HTuple* Quaternion);

LIntExport Herror quat_interpolate(const HTuple& QuaternionStart, const HTuple& QuaternionEnd, const HTuple& InterpPos, HTuple* QuaternionInterpolated);

LIntExport Herror quat_compose(const HTuple& QuaternionLeft, const HTuple& QuaternionRight, HTuple* QuaternionComposed);

LIntExport Herror deserialize_hom_mat3d(const HTuple& SerializedItemHandle, HTuple* HomMat3D);

LIntExport Herror serialize_hom_mat3d(const HTuple& HomMat3D, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_hom_mat2d(const HTuple& SerializedItemHandle, HTuple* HomMat2D);

LIntExport Herror serialize_hom_mat2d(const HTuple& HomMat2D, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_quat(const HTuple& SerializedItemHandle, HTuple* Quaternion);

LIntExport Herror serialize_quat(const HTuple& Quaternion, HTuple* SerializedItemHandle);

LIntExport Herror projective_trans_hom_point_3d(const HTuple& HomMat3D, const HTuple& Px, const HTuple& Py, const HTuple& Pz, const HTuple& Pw, HTuple* Qx, HTuple* Qy, HTuple* Qz, HTuple* Qw);

LIntExport Herror projective_trans_point_3d(const HTuple& HomMat3D, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* Qx, HTuple* Qy, HTuple* Qz);

LIntExport Herror affine_trans_point_3d(const HTuple& HomMat3D, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* Qx, HTuple* Qy, HTuple* Qz);

LIntExport Herror vector_to_hom_mat3d(const HTuple& TransformationType, const HTuple& Px, const HTuple& Py, const HTuple& Pz, const HTuple& Qx, const HTuple& Qy, const HTuple& Qz, HTuple* HomMat3D);

LIntExport Herror hom_mat3d_determinant(const HTuple& HomMat3D, HTuple* Determinant);

LIntExport Herror hom_mat3d_transpose(const HTuple& HomMat3D, HTuple* HomMat3DTranspose);

LIntExport Herror hom_mat3d_invert(const HTuple& HomMat3D, HTuple* HomMat3DInvert);

LIntExport Herror hom_mat3d_compose(const HTuple& HomMat3DLeft, const HTuple& HomMat3DRight, HTuple* HomMat3DCompose);

LIntExport Herror hom_mat3d_rotate_local(const HTuple& HomMat3D, const HTuple& Phi, const HTuple& Axis, HTuple* HomMat3DRotate);

LIntExport Herror hom_mat3d_rotate(const HTuple& HomMat3D, const HTuple& Phi, const HTuple& Axis, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* HomMat3DRotate);

LIntExport Herror hom_mat3d_scale_local(const HTuple& HomMat3D, const HTuple& Sx, const HTuple& Sy, const HTuple& Sz, HTuple* HomMat3DScale);

LIntExport Herror hom_mat3d_scale(const HTuple& HomMat3D, const HTuple& Sx, const HTuple& Sy, const HTuple& Sz, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* HomMat3DScale);

LIntExport Herror hom_mat3d_translate_local(const HTuple& HomMat3D, const HTuple& Tx, const HTuple& Ty, const HTuple& Tz, HTuple* HomMat3DTranslate);

LIntExport Herror hom_mat3d_translate(const HTuple& HomMat3D, const HTuple& Tx, const HTuple& Ty, const HTuple& Tz, HTuple* HomMat3DTranslate);

LIntExport Herror hom_mat3d_identity(HTuple* HomMat3DIdentity);

LIntExport Herror hom_mat3d_project(const HTuple& HomMat3D, const HTuple& PrincipalPointRow, const HTuple& PrincipalPointCol, const HTuple& Focus, HTuple* HomMat2D);

LIntExport Herror bundle_adjust_mosaic(const HTuple& NumImages, const HTuple& ReferenceImage, const HTuple& MappingSource, const HTuple& MappingDest, const HTuple& HomMatrices2D, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& NumCorrespondences, const HTuple& Transformation, HTuple* MosaicMatrices2D, HTuple* Rows, HTuple* Cols, HTuple* Error);

LIntExport Herror proj_match_points_distortion_ransac_guided(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& HomMat2DGuide, const HTuple& KappaGuide, const HTuple& DistanceTolerance, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* HomMat2D, HTuple* Kappa, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror proj_match_points_distortion_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* HomMat2D, HTuple* Kappa, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror proj_match_points_ransac_guided(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& HomMat2DGuide, const HTuple& DistanceTolerance, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* HomMat2D, HTuple* Points1, HTuple* Points2);

LIntExport Herror proj_match_points_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* HomMat2D, HTuple* Points1, HTuple* Points2);

LIntExport Herror vector_to_proj_hom_mat2d_distortion(const HTuple& Points1Row, const HTuple& Points1Col, const HTuple& Points2Row, const HTuple& Points2Col, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& Method, HTuple* HomMat2D, HTuple* Kappa, HTuple* Error);

LIntExport Herror hom_vector_to_proj_hom_mat2d(const HTuple& Px, const HTuple& Py, const HTuple& Pw, const HTuple& Qx, const HTuple& Qy, const HTuple& Qw, const HTuple& Method, HTuple* HomMat2D);

LIntExport Herror vector_to_proj_hom_mat2d(const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, const HTuple& Method, const HTuple& CovXX1, const HTuple& CovYY1, const HTuple& CovXY1, const HTuple& CovXX2, const HTuple& CovYY2, const HTuple& CovXY2, HTuple* HomMat2D, HTuple* Covariance);

LIntExport Herror hom_mat2d_to_affine_par(const HTuple& HomMat2D, HTuple* Sx, HTuple* Sy, HTuple* Phi, HTuple* Theta, HTuple* Tx, HTuple* Ty);

LIntExport Herror vector_angle_to_rigid(const HTuple& Row1, const HTuple& Column1, const HTuple& Angle1, const HTuple& Row2, const HTuple& Column2, const HTuple& Angle2, HTuple* HomMat2D);

LIntExport Herror point_line_to_hom_mat2d(const HTuple& TransformationType, const HTuple& Px, const HTuple& Py, const HTuple& L1x, const HTuple& L1y, const HTuple& L2x, const HTuple& L2y, HTuple* HomMat2D);

LIntExport Herror vector_to_rigid(const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, HTuple* HomMat2D);

LIntExport Herror vector_to_similarity(const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, HTuple* HomMat2D);

LIntExport Herror vector_to_aniso(const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, HTuple* HomMat2D);

LIntExport Herror vector_to_hom_mat2d(const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, HTuple* HomMat2D);

LIntExport Herror projective_trans_pixel(const HTuple& HomMat2D, const HTuple& Row, const HTuple& Col, HTuple* RowTrans, HTuple* ColTrans);

LIntExport Herror projective_trans_point_2d(const HTuple& HomMat2D, const HTuple& Px, const HTuple& Py, const HTuple& Pw, HTuple* Qx, HTuple* Qy, HTuple* Qw);

LIntExport Herror affine_trans_pixel(const HTuple& HomMat2D, const HTuple& Row, const HTuple& Col, HTuple* RowTrans, HTuple* ColTrans);

LIntExport Herror affine_trans_point_2d(const HTuple& HomMat2D, const HTuple& Px, const HTuple& Py, HTuple* Qx, HTuple* Qy);

LIntExport Herror hom_mat2d_determinant(const HTuple& HomMat2D, HTuple* Determinant);

LIntExport Herror hom_mat2d_transpose(const HTuple& HomMat2D, HTuple* HomMat2DTranspose);

LIntExport Herror hom_mat2d_invert(const HTuple& HomMat2D, HTuple* HomMat2DInvert);

LIntExport Herror hom_mat2d_compose(const HTuple& HomMat2DLeft, const HTuple& HomMat2DRight, HTuple* HomMat2DCompose);

LIntExport Herror hom_mat2d_reflect_local(const HTuple& HomMat2D, const HTuple& Px, const HTuple& Py, HTuple* HomMat2DReflect);

LIntExport Herror hom_mat2d_reflect(const HTuple& HomMat2D, const HTuple& Px, const HTuple& Py, const HTuple& Qx, const HTuple& Qy, HTuple* HomMat2DReflect);

LIntExport Herror hom_mat2d_slant_local(const HTuple& HomMat2D, const HTuple& Theta, const HTuple& Axis, HTuple* HomMat2DSlant);

LIntExport Herror hom_mat2d_slant(const HTuple& HomMat2D, const HTuple& Theta, const HTuple& Axis, const HTuple& Px, const HTuple& Py, HTuple* HomMat2DSlant);

LIntExport Herror hom_mat2d_rotate_local(const HTuple& HomMat2D, const HTuple& Phi, HTuple* HomMat2DRotate);

LIntExport Herror hom_mat2d_rotate(const HTuple& HomMat2D, const HTuple& Phi, const HTuple& Px, const HTuple& Py, HTuple* HomMat2DRotate);

LIntExport Herror hom_mat2d_scale_local(const HTuple& HomMat2D, const HTuple& Sx, const HTuple& Sy, HTuple* HomMat2DScale);

LIntExport Herror hom_mat2d_scale(const HTuple& HomMat2D, const HTuple& Sx, const HTuple& Sy, const HTuple& Px, const HTuple& Py, HTuple* HomMat2DScale);

LIntExport Herror hom_mat2d_translate_local(const HTuple& HomMat2D, const HTuple& Tx, const HTuple& Ty, HTuple* HomMat2DTranslate);

LIntExport Herror hom_mat2d_translate(const HTuple& HomMat2D, const HTuple& Tx, const HTuple& Ty, HTuple* HomMat2DTranslate);

LIntExport Herror hom_mat2d_identity(HTuple* HomMat2DIdentity);

LIntExport Herror clear_all_scattered_data_interpolators();

LIntExport Herror clear_scattered_data_interpolator(const HTuple& ScatteredDataInterpolatorHandle);

LIntExport Herror interpolate_scattered_data(const HTuple& ScatteredDataInterpolatorHandle, const HTuple& Row, const HTuple& Column, HTuple* ValueInterpolated);

LIntExport Herror create_scattered_data_interpolator(const HTuple& Method, const HTuple& Rows, const HTuple& Columns, const HTuple& Values, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ScatteredDataInterpolatorHandle);

LIntExport Herror interpolate_scattered_data_points_to_image(HObject* ImageInterpolated, const HTuple& Method, const HTuple& Rows, const HTuple& Columns, const HTuple& Values, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror interpolate_scattered_data_image(const HObject& Image, const HObject& RegionInterpolate, HObject* ImageInterpolated, const HTuple& Method, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror get_system_time(HTuple* MSecond, HTuple* Second, HTuple* Minute, HTuple* Hour, HTuple* Day, HTuple* YDay, HTuple* Month, HTuple* Year);

LIntExport Herror get_compute_device_param(const HTuple& DeviceHandle, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_compute_device_param(const HTuple& DeviceHandle, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror release_all_compute_devices();

LIntExport Herror release_compute_device(const HTuple& DeviceHandle);

LIntExport Herror deactivate_all_compute_devices();

LIntExport Herror deactivate_compute_device(const HTuple& DeviceHandle);

LIntExport Herror activate_compute_device(const HTuple& DeviceHandle);

LIntExport Herror init_compute_device(const HTuple& DeviceHandle, const HTuple& Operators);

LIntExport Herror open_compute_device(const HTuple& DeviceIdentifier, HTuple* DeviceHandle);

LIntExport Herror get_compute_device_info(const HTuple& DeviceIdentifier, const HTuple& InfoName, HTuple* Info);

LIntExport Herror query_available_compute_devices(HTuple* DeviceIdentifier);

LIntExport Herror clear_serial(const HTuple& SerialHandle, const HTuple& Channel);

LIntExport Herror write_serial(const HTuple& SerialHandle, const HTuple& Data);

LIntExport Herror read_serial(const HTuple& SerialHandle, const HTuple& NumCharacters, HTuple* Data);

LIntExport Herror get_serial_param(const HTuple& SerialHandle, HTuple* BaudRate, HTuple* DataBits, HTuple* FlowControl, HTuple* Parity, HTuple* StopBits, HTuple* TotalTimeOut, HTuple* InterCharTimeOut);

LIntExport Herror set_serial_param(const HTuple& SerialHandle, const HTuple& BaudRate, const HTuple& DataBits, const HTuple& FlowControl, const HTuple& Parity, const HTuple& StopBits, const HTuple& TotalTimeOut, const HTuple& InterCharTimeOut);

LIntExport Herror close_all_serials();

LIntExport Herror close_serial(const HTuple& SerialHandle);

LIntExport Herror open_serial(const HTuple& PortName, HTuple* SerialHandle);

LIntExport Herror wait_seconds(const HTuple& Seconds);

LIntExport Herror system_call(const HTuple& Command);

LIntExport Herror set_system(const HTuple& SystemParameter, const HTuple& Value);

LIntExport Herror set_check(const HTuple& Check);

LIntExport Herror reset_obj_db(const HTuple& DefaultImageWidth, const HTuple& DefaultImageHeight, const HTuple& DefaultChannels);

LIntExport Herror get_system(const HTuple& Query, HTuple* Information);

LIntExport Herror get_check(HTuple* Check);

LIntExport Herror get_error_text(const HTuple& ErrorCode, HTuple* ErrorMessage);

LIntExport Herror count_seconds(HTuple* Seconds);

LIntExport Herror count_relation(const HTuple& RelationName, HTuple* NumOfTuples);

LIntExport Herror receive_image(HObject* Image, const HTuple& Socket);

LIntExport Herror send_image(const HObject& Image, const HTuple& Socket);

LIntExport Herror receive_region(HObject* Region, const HTuple& Socket);

LIntExport Herror send_region(const HObject& Region, const HTuple& Socket);

LIntExport Herror receive_xld(HObject* XLD, const HTuple& Socket);

LIntExport Herror send_xld(const HObject& XLD, const HTuple& Socket);

LIntExport Herror receive_tuple(const HTuple& Socket, HTuple* Tuple);

LIntExport Herror send_tuple(const HTuple& Socket, const HTuple& Tuple);

LIntExport Herror receive_data(const HTuple& Socket, const HTuple& Format, HTuple* Data, HTuple* From);

LIntExport Herror send_data(const HTuple& Socket, const HTuple& Format, const HTuple& Data, const HTuple& To);

LIntExport Herror get_socket_param(const HTuple& Socket, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_socket_param(const HTuple& Socket, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror get_next_socket_data_type(const HTuple& Socket, HTuple* DataType);

LIntExport Herror get_socket_descriptor(const HTuple& Socket, HTuple* SocketDescriptor);

LIntExport Herror get_socket_timeout(const HTuple& Socket, HTuple* Timeout);

LIntExport Herror set_socket_timeout(const HTuple& Socket, const HTuple& Timeout);

LIntExport Herror close_all_sockets();

LIntExport Herror close_socket(const HTuple& Socket);

LIntExport Herror socket_accept_connect(const HTuple& AcceptingSocket, const HTuple& Wait, HTuple* Socket);

LIntExport Herror open_socket_connect(const HTuple& HostName, const HTuple& Port, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Socket);

LIntExport Herror open_socket_accept(const HTuple& Port, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* AcceptingSocket);

LIntExport Herror get_extended_error_info(HTuple* OperatorName, HTuple* ErrorCode, HTuple* ErrorMessage);

LIntExport Herror get_modules(HTuple* UsedModules, HTuple* ModuleKey);

LIntExport Herror binocular_distance_ms(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Distance, HObject* Score, const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& MinDisparity, const HTuple& MaxDisparity, const HTuple& SurfaceSmoothing, const HTuple& EdgeSmoothing, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror binocular_disparity_ms(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Disparity, HObject* Score, const HTuple& MinDisparity, const HTuple& MaxDisparity, const HTuple& SurfaceSmoothing, const HTuple& EdgeSmoothing, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror binocular_distance_mg(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Distance, HObject* Score, const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& GrayConstancy, const HTuple& GradientConstancy, const HTuple& Smoothness, const HTuple& InitialGuess, const HTuple& CalculateScore, const HTuple& MGParamName, const HTuple& MGParamValue);

LIntExport Herror binocular_disparity_mg(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Disparity, HObject* Score, const HTuple& GrayConstancy, const HTuple& GradientConstancy, const HTuple& Smoothness, const HTuple& InitialGuess, const HTuple& CalculateScore, const HTuple& MGParamName, const HTuple& MGParamValue);

LIntExport Herror reconst3d_from_fundamental_matrix(const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& FMatrix, const HTuple& CovFMat, HTuple* X, HTuple* Y, HTuple* Z, HTuple* W, HTuple* CovXYZW);

LIntExport Herror gen_binocular_proj_rectification(HObject* Map1, HObject* Map2, const HTuple& FMatrix, const HTuple& CovFMat, const HTuple& Width1, const HTuple& Height1, const HTuple& Width2, const HTuple& Height2, const HTuple& SubSampling, const HTuple& Mapping, HTuple* CovFMatRect, HTuple* H1, HTuple* H2);

LIntExport Herror vector_to_fundamental_matrix_distortion(const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& Method, HTuple* FMatrix, HTuple* Kappa, HTuple* Error, HTuple* X, HTuple* Y, HTuple* Z, HTuple* W);

LIntExport Herror rel_pose_to_fundamental_matrix(const HTuple& RelPose, const HTuple& CovRelPose, const HTuple& CamPar1, const HTuple& CamPar2, HTuple* FMatrix, HTuple* CovFMat);

LIntExport Herror essential_to_fundamental_matrix(const HTuple& EMatrix, const HTuple& CovEMat, const HTuple& CamMat1, const HTuple& CamMat2, HTuple* FMatrix, HTuple* CovFMat);

LIntExport Herror vector_to_rel_pose(const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& CamPar1, const HTuple& CamPar2, const HTuple& Method, HTuple* RelPose, HTuple* CovRelPose, HTuple* Error, HTuple* X, HTuple* Y, HTuple* Z, HTuple* CovXYZ);

LIntExport Herror vector_to_essential_matrix(const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& CamMat1, const HTuple& CamMat2, const HTuple& Method, HTuple* EMatrix, HTuple* CovEMat, HTuple* Error, HTuple* X, HTuple* Y, HTuple* Z, HTuple* CovXYZ);

LIntExport Herror vector_to_fundamental_matrix(const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CovRR1, const HTuple& CovRC1, const HTuple& CovCC1, const HTuple& CovRR2, const HTuple& CovRC2, const HTuple& CovCC2, const HTuple& Method, HTuple* FMatrix, HTuple* CovFMat, HTuple* Error, HTuple* X, HTuple* Y, HTuple* Z, HTuple* W, HTuple* CovXYZW);

LIntExport Herror match_fundamental_matrix_distortion_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* FMatrix, HTuple* Kappa, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror match_rel_pose_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CamPar1, const HTuple& CamPar2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* RelPose, HTuple* CovRelPose, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror match_essential_matrix_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& CamMat1, const HTuple& CamMat2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* EMatrix, HTuple* CovEMat, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror match_fundamental_matrix_ransac(const HObject& Image1, const HObject& Image2, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& GrayMatchMethod, const HTuple& MaskSize, const HTuple& RowMove, const HTuple& ColMove, const HTuple& RowTolerance, const HTuple& ColTolerance, const HTuple& Rotation, const HTuple& MatchThreshold, const HTuple& EstimationMethod, const HTuple& DistanceThreshold, const HTuple& RandSeed, HTuple* FMatrix, HTuple* CovFMat, HTuple* Error, HTuple* Points1, HTuple* Points2);

LIntExport Herror binocular_distance(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Distance, HObject* Score, const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& Method, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& TextureThresh, const HTuple& MinDisparity, const HTuple& MaxDisparity, const HTuple& NumLevels, const HTuple& ScoreThresh, const HTuple& Filter, const HTuple& SubDistance);

LIntExport Herror binocular_disparity(const HObject& ImageRect1, const HObject& ImageRect2, HObject* Disparity, HObject* Score, const HTuple& Method, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& TextureThresh, const HTuple& MinDisparity, const HTuple& MaxDisparity, const HTuple& NumLevels, const HTuple& ScoreThresh, const HTuple& Filter, const HTuple& SubDisparity);

LIntExport Herror intersect_lines_of_sight(const HTuple& CamParam1, const HTuple& CamParam2, const HTuple& RelPose, const HTuple& Row1, const HTuple& Col1, const HTuple& Row2, const HTuple& Col2, HTuple* X, HTuple* Y, HTuple* Z, HTuple* Dist);

LIntExport Herror disparity_image_to_xyz(const HObject& Disparity, HObject* X, HObject* Y, HObject* Z, const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect);

LIntExport Herror disparity_to_point_3d(const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& Row1, const HTuple& Col1, const HTuple& Disparity, HTuple* X, HTuple* Y, HTuple* Z);

LIntExport Herror disparity_to_distance(const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& Disparity, HTuple* Distance);

LIntExport Herror distance_to_disparity(const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, const HTuple& Distance, HTuple* Disparity);

LIntExport Herror gen_binocular_rectification_map(HObject* Map1, HObject* Map2, const HTuple& CamParam1, const HTuple& CamParam2, const HTuple& RelPose, const HTuple& SubSampling, const HTuple& Method, const HTuple& MapType, HTuple* CamParamRect1, HTuple* CamParamRect2, HTuple* CamPoseRect1, HTuple* CamPoseRect2, HTuple* RelPoseRect);

LIntExport Herror binocular_calibration(const HTuple& NX, const HTuple& NY, const HTuple& NZ, const HTuple& NRow1, const HTuple& NCol1, const HTuple& NRow2, const HTuple& NCol2, const HTuple& StartCamParam1, const HTuple& StartCamParam2, const HTuple& NStartPose1, const HTuple& NStartPose2, const HTuple& EstimateParams, HTuple* CamParam1, HTuple* CamParam2, HTuple* NFinalPose1, HTuple* NFinalPose2, HTuple* RelPose, HTuple* Errors);

LIntExport Herror query_spy(HTuple* Classes, HTuple* Values);

LIntExport Herror set_spy(const HTuple& Class, const HTuple& Value);

LIntExport Herror get_spy(const HTuple& Class, HTuple* Value);

LIntExport Herror read_sheet_of_light_model(const HTuple& FileName, HTuple* SheetOfLightModelID);

LIntExport Herror write_sheet_of_light_model(const HTuple& SheetOfLightModelID, const HTuple& FileName);

LIntExport Herror deserialize_sheet_of_light_model(const HTuple& SerializedItemHandle, HTuple* SheetOfLightModelID);

LIntExport Herror serialize_sheet_of_light_model(const HTuple& SheetOfLightModelID, HTuple* SerializedItemHandle);

LIntExport Herror create_sheet_of_light_calib_object(const HTuple& Width, const HTuple& Length, const HTuple& HeightMin, const HTuple& HeightMax, const HTuple& FileName);

LIntExport Herror calibrate_sheet_of_light(const HTuple& SheetOfLightModelID, HTuple* Error);

LIntExport Herror get_sheet_of_light_result_object_model_3d(const HTuple& SheetOfLightModelID, HTuple* ObjectModel3D);

LIntExport Herror get_sheet_of_light_result(HObject* ResultValue, const HTuple& SheetOfLightModelID, const HTuple& ResultName);

LIntExport Herror apply_sheet_of_light_calibration(const HObject& Disparity, const HTuple& SheetOfLightModelID);

LIntExport Herror set_profile_sheet_of_light(const HObject& ProfileDisparityImage, const HTuple& SheetOfLightModelID, const HTuple& MovementPoses);

LIntExport Herror measure_profile_sheet_of_light(const HObject& ProfileImage, const HTuple& SheetOfLightModelID, const HTuple& MovementPose);

LIntExport Herror set_sheet_of_light_param(const HTuple& SheetOfLightModelID, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror get_sheet_of_light_param(const HTuple& SheetOfLightModelID, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror query_sheet_of_light_params(const HTuple& SheetOfLightModelID, const HTuple& QueryName, HTuple* GenParamNames);

LIntExport Herror reset_sheet_of_light_model(const HTuple& SheetOfLightModelID);

LIntExport Herror clear_all_sheet_of_light_models();

LIntExport Herror clear_sheet_of_light_model(const HTuple& SheetOfLightModelID);

LIntExport Herror create_sheet_of_light_model(const HObject& ProfileRegion, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* SheetOfLightModelID);

LIntExport Herror shade_height_field(const HObject& ImageHeight, HObject* ImageShade, const HTuple& Slant, const HTuple& Tilt, const HTuple& Albedo, const HTuple& Ambient, const HTuple& Shadows);

LIntExport Herror estimate_al_am(const HObject& Image, HTuple* Albedo, HTuple* Ambient);

LIntExport Herror estimate_sl_al_zc(const HObject& Image, HTuple* Slant, HTuple* Albedo);

LIntExport Herror estimate_sl_al_lr(const HObject& Image, HTuple* Slant, HTuple* Albedo);

LIntExport Herror estimate_tilt_zc(const HObject& Image, HTuple* Tilt);

LIntExport Herror estimate_tilt_lr(const HObject& Image, HTuple* Tilt);

LIntExport Herror phot_stereo(const HObject& Images, HObject* Height, const HTuple& Slants, const HTuple& Tilts);

LIntExport Herror reconstruct_height_field_from_gradient(const HObject& Gradient, HObject* HeightField, const HTuple& ReconstructionMethod, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror photometric_stereo(const HObject& Images, HObject* HeightField, HObject* Gradient, HObject* Albedo, const HTuple& Slants, const HTuple& Tilts, const HTuple& ResultType, const HTuple& ReconstructionMethod, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror sfs_pentland(const HObject& Image, HObject* Height, const HTuple& Slant, const HTuple& Tilt, const HTuple& Albedo, const HTuple& Ambient);

LIntExport Herror sfs_orig_lr(const HObject& Image, HObject* Height, const HTuple& Slant, const HTuple& Tilt, const HTuple& Albedo, const HTuple& Ambient);

LIntExport Herror sfs_mod_lr(const HObject& Image, HObject* Height, const HTuple& Slant, const HTuple& Tilt, const HTuple& Albedo, const HTuple& Ambient);

LIntExport Herror receive_serialized_item(const HTuple& Socket, HTuple* SerializedItemHandle);

LIntExport Herror send_serialized_item(const HTuple& Socket, const HTuple& SerializedItemHandle);

LIntExport Herror fwrite_serialized_item(const HTuple& FileHandle, const HTuple& SerializedItemHandle);

LIntExport Herror fread_serialized_item(const HTuple& FileHandle, HTuple* SerializedItemHandle);

LIntExport Herror clear_all_serialized_items();

LIntExport Herror clear_serialized_item(const HTuple& SerializedItemHandle);

LIntExport Herror get_serialized_item_ptr(const HTuple& SerializedItemHandle, HTuple* Pointer, HTuple* Size);

LIntExport Herror create_serialized_item_ptr(const HTuple& Pointer, const HTuple& Size, const HTuple& Copy, HTuple* SerializedItemHandle);

LIntExport Herror fit_primitives_object_model_3d(const HTuple& ObjectModel3D, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ObjectModel3DOut);

LIntExport Herror segment_object_model_3d(const HTuple& ObjectModel3D, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ObjectModel3DOut);

LIntExport Herror clear_all_text_results();

LIntExport Herror clear_text_result(const HTuple& TextResultID);

LIntExport Herror get_text_object(HObject* Characters, const HTuple& TextResultID, const HTuple& ResultName);

LIntExport Herror get_text_result(const HTuple& TextResultID, const HTuple& ResultName, HTuple* ResultValue);

LIntExport Herror find_text(const HObject& Image, const HTuple& TextModel, HTuple* TextResultID);

LIntExport Herror get_text_model_param(const HTuple& TextModel, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_text_model_param(const HTuple& TextModel, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror clear_all_text_models();

LIntExport Herror clear_text_model(const HTuple& TextModel);

LIntExport Herror create_text_model_reader(const HTuple& Mode, const HTuple& OCRClassifierMLP, HTuple* TextModel);

LIntExport Herror create_text_model(HTuple* TextModel);

LIntExport Herror select_characters(const HObject& Region, HObject* RegionCharacters, const HTuple& DotPrint, const HTuple& StrokeWidth, const HTuple& CharWidth, const HTuple& CharHeight, const HTuple& Punctuation, const HTuple& DiacriticMarks, const HTuple& PartitionMethod, const HTuple& PartitionLines, const HTuple& FragmentDistance, const HTuple& ConnectFragments, const HTuple& ClutterSizeMax, const HTuple& StopAfter);

LIntExport Herror segment_characters(const HObject& Region, const HObject& Image, HObject* ImageForeground, HObject* RegionForeground, const HTuple& Method, const HTuple& EliminateLines, const HTuple& DotPrint, const HTuple& StrokeWidth, const HTuple& CharWidth, const HTuple& CharHeight, const HTuple& ThresholdOffset, const HTuple& Contrast, HTuple* UsedThreshold);

LIntExport Herror text_line_slant(const HObject& Region, const HObject& Image, const HTuple& CharHeight, const HTuple& SlantFrom, const HTuple& SlantTo, HTuple* SlantAngle);

LIntExport Herror text_line_orientation(const HObject& Region, const HObject& Image, const HTuple& CharHeight, const HTuple& OrientationFrom, const HTuple& OrientationTo, HTuple* OrientationAngle);

LIntExport Herror classify_image_class_lut(const HObject& Image, HObject* ClassRegions, const HTuple& ClassLUTHandle);

LIntExport Herror classify_image_class_knn(const HObject& Image, HObject* ClassRegions, HObject* DistanceImage, const HTuple& KNNHandle, const HTuple& RejectionThreshold);

LIntExport Herror add_samples_image_class_knn(const HObject& Image, const HObject& ClassRegions, const HTuple& KNNHandle);

LIntExport Herror classify_image_class_gmm(const HObject& Image, HObject* ClassRegions, const HTuple& GMMHandle, const HTuple& RejectionThreshold);

LIntExport Herror add_samples_image_class_gmm(const HObject& Image, const HObject& ClassRegions, const HTuple& GMMHandle, const HTuple& Randomize);

LIntExport Herror classify_image_class_svm(const HObject& Image, HObject* ClassRegions, const HTuple& SVMHandle);

LIntExport Herror add_samples_image_class_svm(const HObject& Image, const HObject& ClassRegions, const HTuple& SVMHandle);

LIntExport Herror classify_image_class_mlp(const HObject& Image, HObject* ClassRegions, const HTuple& MLPHandle, const HTuple& RejectionThreshold);

LIntExport Herror add_samples_image_class_mlp(const HObject& Image, const HObject& ClassRegions, const HTuple& MLPHandle);

LIntExport Herror learn_ndim_norm(const HObject& Foreground, const HObject& Background, const HObject& Image, const HTuple& Metric, const HTuple& Distance, const HTuple& MinNumberPercent, HTuple* Radius, HTuple* Center, HTuple* Quality);

LIntExport Herror learn_ndim_box(const HObject& Foreground, const HObject& Background, const HObject& MultiChannelImage, const HTuple& ClassifHandle);

LIntExport Herror class_ndim_box(const HObject& MultiChannelImage, HObject* Regions, const HTuple& ClassifHandle);

LIntExport Herror class_ndim_norm(const HObject& MultiChannelImage, HObject* Regions, const HTuple& Metric, const HTuple& SingleMultiple, const HTuple& Radius, const HTuple& Center);

LIntExport Herror class_2dim_sup(const HObject& ImageCol, const HObject& ImageRow, const HObject& FeatureSpace, HObject* RegionClass2Dim);

LIntExport Herror class_2dim_unsup(const HObject& Image1, const HObject& Image2, HObject* Classes, const HTuple& Threshold, const HTuple& NumClasses);

LIntExport Herror check_difference(const HObject& Image, const HObject& Pattern, HObject* Selected, const HTuple& Mode, const HTuple& DiffLowerBound, const HTuple& DiffUpperBound, const HTuple& GrayOffset, const HTuple& AddRow, const HTuple& AddCol);

LIntExport Herror char_threshold(const HObject& Image, const HObject& HistoRegion, HObject* Characters, const HTuple& Sigma, const HTuple& Percent, HTuple* Threshold);

LIntExport Herror label_to_region(const HObject& LabelImage, HObject* Regions);

LIntExport Herror nonmax_suppression_amp(const HObject& ImgAmp, HObject* ImageResult, const HTuple& Mode);

LIntExport Herror nonmax_suppression_dir(const HObject& ImgAmp, const HObject& ImgDir, HObject* ImageResult, const HTuple& Mode);

LIntExport Herror hysteresis_threshold(const HObject& Image, HObject* RegionHysteresis, const HTuple& Low, const HTuple& High, const HTuple& MaxLength);

LIntExport Herror binary_threshold(const HObject& Image, HObject* Region, const HTuple& Method, const HTuple& LightDark, HTuple* UsedThreshold);

LIntExport Herror local_threshold(const HObject& Image, HObject* Region, const HTuple& Method, const HTuple& LightDark, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror var_threshold(const HObject& Image, HObject* Region, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& StdDevScale, const HTuple& AbsThreshold, const HTuple& LightDark);

LIntExport Herror dyn_threshold(const HObject& OrigImage, const HObject& ThresholdImage, HObject* RegionDynThresh, const HTuple& Offset, const HTuple& LightDark);

LIntExport Herror threshold(const HObject& Image, HObject* Region, const HTuple& MinGray, const HTuple& MaxGray);

LIntExport Herror threshold_sub_pix(const HObject& Image, HObject* Border, const HTuple& Threshold);

LIntExport Herror regiongrowing_n(const HObject& MultiChannelImage, HObject* Regions, const HTuple& Metric, const HTuple& MinTolerance, const HTuple& MaxTolerance, const HTuple& MinSize);

LIntExport Herror regiongrowing(const HObject& Image, HObject* Regions, const HTuple& Row, const HTuple& Column, const HTuple& Tolerance, const HTuple& MinSize);

LIntExport Herror regiongrowing_mean(const HObject& Image, HObject* Regions, const HTuple& StartRows, const HTuple& StartColumns, const HTuple& Tolerance, const HTuple& MinSize);

LIntExport Herror pouring(const HObject& Image, HObject* Regions, const HTuple& Mode, const HTuple& MinGray, const HTuple& MaxGray);

LIntExport Herror watersheds_threshold(const HObject& Image, HObject* Basins, const HTuple& Threshold);

LIntExport Herror watersheds(const HObject& Image, HObject* Basins, HObject* Watersheds);

LIntExport Herror zero_crossing(const HObject& Image, HObject* RegionCrossing);

LIntExport Herror zero_crossing_sub_pix(const HObject& Image, HObject* ZeroCrossings);

LIntExport Herror dual_threshold(const HObject& Image, HObject* RegionCrossings, const HTuple& MinSize, const HTuple& MinGray, const HTuple& Threshold);

LIntExport Herror expand_line(const HObject& Image, HObject* RegionExpand, const HTuple& Coordinate, const HTuple& ExpandType, const HTuple& RowColumn, const HTuple& Threshold);

LIntExport Herror local_min(const HObject& Image, HObject* LocalMinima);

LIntExport Herror lowlands(const HObject& Image, HObject* Lowlands);

LIntExport Herror lowlands_center(const HObject& Image, HObject* Lowlands);

LIntExport Herror local_max(const HObject& Image, HObject* LocalMaxima);

LIntExport Herror plateaus(const HObject& Image, HObject* Plateaus);

LIntExport Herror plateaus_center(const HObject& Image, HObject* Plateaus);

LIntExport Herror histo_to_thresh(const HTuple& Histogramm, const HTuple& Sigma, HTuple* MinThresh, HTuple* MaxThresh);

LIntExport Herror auto_threshold(const HObject& Image, HObject* Regions, const HTuple& Sigma);

LIntExport Herror bin_threshold(const HObject& Image, HObject* Region);

LIntExport Herror fast_threshold(const HObject& Image, HObject* Region, const HTuple& MinGray, const HTuple& MaxGray, const HTuple& MinSize);

LIntExport Herror polar_trans_region_inv(const HObject& PolarRegion, HObject* XYTransRegion, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& WidthIn, const HTuple& HeightIn, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation);

LIntExport Herror polar_trans_region(const HObject& Region, HObject* PolarTransRegion, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation);

LIntExport Herror merge_regions_line_scan(const HObject& CurrRegions, const HObject& PrevRegions, HObject* CurrMergedRegions, HObject* PrevMergedRegions, const HTuple& ImageHeight, const HTuple& MergeBorder, const HTuple& MaxImagesRegion);

LIntExport Herror partition_rectangle(const HObject& Region, HObject* Partitioned, const HTuple& Width, const HTuple& Height);

LIntExport Herror partition_dynamic(const HObject& Region, HObject* Partitioned, const HTuple& Distance, const HTuple& Percent);

LIntExport Herror region_to_label(const HObject& Region, HObject* ImageLabel, const HTuple& Type, const HTuple& Width, const HTuple& Height);

LIntExport Herror region_to_bin(const HObject& Region, HObject* BinImage, const HTuple& ForegroundGray, const HTuple& BackgroundGray, const HTuple& Width, const HTuple& Height);

LIntExport Herror union2(const HObject& Region1, const HObject& Region2, HObject* RegionUnion);

LIntExport Herror union1(const HObject& Region, HObject* RegionUnion);

LIntExport Herror closest_point_transform(const HObject& Region, HObject* Distances, HObject* ClosestPoints, const HTuple& Metric, const HTuple& Foreground, const HTuple& ClosestPointMode, const HTuple& Width, const HTuple& Height);

LIntExport Herror distance_transform(const HObject& Region, HObject* DistanceImage, const HTuple& Metric, const HTuple& Foreground, const HTuple& Width, const HTuple& Height);

LIntExport Herror skeleton(const HObject& Region, HObject* Skeleton);

LIntExport Herror projective_trans_region(const HObject& Regions, HObject* TransRegions, const HTuple& HomMat2D, const HTuple& Interpolation);

LIntExport Herror affine_trans_region(const HObject& Region, HObject* RegionAffineTrans, const HTuple& HomMat2D, const HTuple& Interpolate);

LIntExport Herror mirror_region(const HObject& Region, HObject* RegionMirror, const HTuple& Mode, const HTuple& WidthHeight);

LIntExport Herror zoom_region(const HObject& Region, HObject* RegionZoom, const HTuple& ScaleWidth, const HTuple& ScaleHeight);

LIntExport Herror move_region(const HObject& Region, HObject* RegionMoved, const HTuple& Row, const HTuple& Column);

LIntExport Herror junctions_skeleton(const HObject& Region, HObject* EndPoints, HObject* JuncPoints);

LIntExport Herror intersection(const HObject& Region1, const HObject& Region2, HObject* RegionIntersection);

LIntExport Herror interjacent(const HObject& Region, HObject* RegionInterjacent, const HTuple& Mode);

LIntExport Herror fill_up(const HObject& Region, HObject* RegionFillUp);

LIntExport Herror fill_up_shape(const HObject& Region, HObject* RegionFillUp, const HTuple& Feature, const HTuple& Min, const HTuple& Max);

LIntExport Herror expand_region(const HObject& Regions, const HObject& ForbiddenArea, HObject* RegionExpanded, const HTuple& Iterations, const HTuple& Mode);

LIntExport Herror clip_region_rel(const HObject& Region, HObject* RegionClipped, const HTuple& Top, const HTuple& Bottom, const HTuple& Left, const HTuple& Right);

LIntExport Herror clip_region(const HObject& Region, HObject* RegionClipped, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror rank_region(const HObject& Region, HObject* RegionCount, const HTuple& Width, const HTuple& Height, const HTuple& Number);

LIntExport Herror connection(const HObject& Region, HObject* ConnectedRegions);

LIntExport Herror symm_difference(const HObject& Region1, const HObject& Region2, HObject* RegionDifference);

LIntExport Herror difference(const HObject& Region, const HObject& Sub, HObject* RegionDifference);

LIntExport Herror complement(const HObject& Region, HObject* RegionComplement);

LIntExport Herror background_seg(const HObject& Foreground, HObject* BackgroundRegions);

LIntExport Herror hamming_change_region(const HObject& InputRegion, HObject* OutputRegion, const HTuple& Width, const HTuple& Height, const HTuple& Distance);

LIntExport Herror remove_noise_region(const HObject& InputRegion, HObject* OutputRegion, const HTuple& Type);

LIntExport Herror shape_trans(const HObject& Region, HObject* RegionTrans, const HTuple& Type);

LIntExport Herror expand_gray(const HObject& Regions, const HObject& Image, const HObject& ForbiddenArea, HObject* RegionExpand, const HTuple& Iterations, const HTuple& Mode, const HTuple& Threshold);

LIntExport Herror expand_gray_ref(const HObject& Regions, const HObject& Image, const HObject& ForbiddenArea, HObject* RegionExpand, const HTuple& Iterations, const HTuple& Mode, const HTuple& RefGray, const HTuple& Threshold);

LIntExport Herror split_skeleton_lines(const HObject& SkeletonRegion, const HTuple& MaxDistance, HTuple* BeginRow, HTuple* BeginCol, HTuple* EndRow, HTuple* EndCol);

LIntExport Herror split_skeleton_region(const HObject& SkeletonRegion, HObject* RegionLines, const HTuple& MaxDistance);

LIntExport Herror gen_region_histo(HObject* Region, const HTuple& Histogram, const HTuple& Row, const HTuple& Column, const HTuple& Scale);

LIntExport Herror eliminate_runs(const HObject& Region, HObject* RegionClipped, const HTuple& ElimShorter, const HTuple& ElimLonger);

LIntExport Herror surface_normals_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Method, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* ObjectModel3DNormals);

LIntExport Herror smooth_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Method, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* SmoothObjectModel3D);

LIntExport Herror triangulate_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Method, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* TriangulatedObjectModel3D, HTuple* Information);

LIntExport Herror clear_all_stereo_models();

LIntExport Herror clear_stereo_model(const HTuple& StereoModelID);

LIntExport Herror reconstruct_points_stereo(const HTuple& StereoModelID, const HTuple& Row, const HTuple& Column, const HTuple& CovIP, const HTuple& CameraIdx, const HTuple& PointIdx, HTuple* X, HTuple* Y, HTuple* Z, HTuple* CovWP, HTuple* PointIdxOut);

LIntExport Herror reconstruct_surface_stereo(const HObject& Images, const HTuple& StereoModelID, HTuple* ObjectModel3D);

LIntExport Herror get_stereo_model_object(HObject* Object, const HTuple& StereoModelID, const HTuple& PairIndex, const HTuple& ObjectName);

LIntExport Herror get_stereo_model_image_pairs(const HTuple& StereoModelID, HTuple* From, HTuple* To);

LIntExport Herror set_stereo_model_image_pairs(const HTuple& StereoModelID, const HTuple& From, const HTuple& To);

LIntExport Herror get_stereo_model_param(const HTuple& StereoModelID, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_stereo_model_param(const HTuple& StereoModelID, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror create_stereo_model(const HTuple& CameraSetupModelID, const HTuple& Method, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* StereoModelID);

LIntExport Herror get_message_queue_param(const HTuple& QueueHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_message_queue_param(const HTuple& QueueHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror dequeue_message(const HTuple& QueueHandle, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* MessageHandle);

LIntExport Herror enqueue_message(const HTuple& QueueHandle, const HTuple& MessageHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror clear_message_queue(const HTuple& QueueHandle);

LIntExport Herror create_message_queue(HTuple* QueueHandle);

LIntExport Herror get_message_param(const HTuple& MessageHandle, const HTuple& GenParamName, const HTuple& Key, HTuple* GenParamValue);

LIntExport Herror set_message_param(const HTuple& MessageHandle, const HTuple& GenParamName, const HTuple& Key, const HTuple& GenParamValue);

LIntExport Herror get_message_obj(HObject* ObjectData, const HTuple& MessageHandle, const HTuple& Key);

LIntExport Herror set_message_obj(const HObject& ObjectData, const HTuple& MessageHandle, const HTuple& Key);

LIntExport Herror get_message_tuple(const HTuple& MessageHandle, const HTuple& Key, HTuple* TupleData);

LIntExport Herror set_message_tuple(const HTuple& MessageHandle, const HTuple& Key, const HTuple& TupleData);

LIntExport Herror clear_message(const HTuple& MessageHandle);

LIntExport Herror create_message(HTuple* MessageHandle);

LIntExport Herror clear_all_conditions();

LIntExport Herror clear_condition(const HTuple& ConditionHandle);

LIntExport Herror broadcast_condition(const HTuple& ConditionHandle);

LIntExport Herror signal_condition(const HTuple& ConditionHandle);

LIntExport Herror timed_wait_condition(const HTuple& ConditionHandle, const HTuple& MutexHandle, const HTuple& Timeout);

LIntExport Herror wait_condition(const HTuple& ConditionHandle, const HTuple& MutexHandle);

LIntExport Herror create_condition(const HTuple& AttribName, const HTuple& AttribValue, HTuple* ConditionHandle);

LIntExport Herror clear_all_barriers();

LIntExport Herror clear_barrier(const HTuple& BarrierHandle);

LIntExport Herror wait_barrier(const HTuple& BarrierHandle);

LIntExport Herror create_barrier(const HTuple& AttribName, const HTuple& AttribValue, const HTuple& TeamSize, HTuple* BarrierHandle);

LIntExport Herror clear_all_events();

LIntExport Herror clear_event(const HTuple& EventHandle);

LIntExport Herror signal_event(const HTuple& EventHandle);

LIntExport Herror try_wait_event(const HTuple& EventHandle, HTuple* Busy);

LIntExport Herror wait_event(const HTuple& EventHandle);

LIntExport Herror create_event(const HTuple& AttribName, const HTuple& AttribValue, HTuple* EventHandle);

LIntExport Herror clear_all_mutexes();

LIntExport Herror clear_mutex(const HTuple& MutexHandle);

LIntExport Herror unlock_mutex(const HTuple& MutexHandle);

LIntExport Herror try_lock_mutex(const HTuple& MutexHandle, HTuple* Busy);

LIntExport Herror lock_mutex(const HTuple& MutexHandle);

LIntExport Herror create_mutex(const HTuple& AttribName, const HTuple& AttribValue, HTuple* MutexHandle);

LIntExport Herror get_threading_attrib(const HTuple& ThreadingHandle, HTuple* ThreadingClass, HTuple* AttribName, HTuple* AttribValue);

LIntExport Herror load_par_knowledge(const HTuple& FileName);

LIntExport Herror store_par_knowledge(const HTuple& FileName);

LIntExport Herror check_par_hw_potential(const HTuple& AllInpPars);

LIntExport Herror set_aop_info(const HTuple& OperatorName, const HTuple& IndexName, const HTuple& IndexValue, const HTuple& InfoName, const HTuple& InfoValue);

LIntExport Herror get_aop_info(const HTuple& OperatorName, const HTuple& IndexName, const HTuple& IndexValue, const HTuple& InfoName, HTuple* InfoValue);

LIntExport Herror query_aop_info(const HTuple& OperatorName, const HTuple& IndexName, const HTuple& IndexValue, HTuple* Name, HTuple* Value);

LIntExport Herror optimize_aop(const HTuple& OperatorName, const HTuple& IconicType, const HTuple& FileName, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror write_aop_knowledge(const HTuple& FileName, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror read_aop_knowledge(const HTuple& FileName, const HTuple& ParamName, const HTuple& ParamValue, HTuple* Attributes, HTuple* OperatorNames);

LIntExport Herror sensor_kalman(const HTuple& Dimension, const HTuple& MeasurementIn, HTuple* MeasurementOut);

LIntExport Herror test_obj_def(const HObject& Object, HTuple* IsDefined);

LIntExport Herror test_access(const HObject& Object, HObject* Dummy, const HTuple& NumReadChord, const HTuple& NumCopyObj, const HTuple& Write_chord);

LIntExport Herror obj_diff(const HObject& Objects, const HObject& ObjectsSub, HObject* ObjectsDiff);

LIntExport Herror set_grayval(const HObject& Image, const HTuple& Row, const HTuple& Column, const HTuple& Grayval);

LIntExport Herror paint_xld(const HObject& XLD, const HObject& Image, HObject* ImageResult, const HTuple& Grayval);

LIntExport Herror paint_region(const HObject& Region, const HObject& Image, HObject* ImageResult, const HTuple& Grayval, const HTuple& Type);

LIntExport Herror overpaint_region(const HObject& Image, const HObject& Region, const HTuple& Grayval, const HTuple& Type);

LIntExport Herror gen_image_proto(const HObject& Image, HObject* ImageCleared, const HTuple& Grayval);

LIntExport Herror paint_gray(const HObject& ImageSource, const HObject& ImageDestination, HObject* MixedImage);

LIntExport Herror overpaint_gray(const HObject& ImageDestination, const HObject& ImageSource);

LIntExport Herror integer_to_obj(HObject* Objects, const HTuple& SurrogateTuple);

LIntExport Herror obj_to_integer(const HObject& Objects, const HTuple& Index, const HTuple& Number, HTuple* SurrogateTuple);

LIntExport Herror copy_obj(const HObject& Objects, HObject* ObjectsSelected, const HTuple& Index, const HTuple& NumObj);

LIntExport Herror concat_obj(const HObject& Objects1, const HObject& Objects2, HObject* ObjectsConcat);

LIntExport Herror clear_obj(const HObject& Objects);

LIntExport Herror copy_image(const HObject& Image, HObject* DupImage);

LIntExport Herror select_obj(const HObject& Objects, HObject* ObjectSelected, const HTuple& Index);

LIntExport Herror compare_obj(const HObject& Objects1, const HObject& Objects2, const HTuple& Epsilon, HTuple* IsEqual);

LIntExport Herror test_subset_region(const HObject& Region1, const HObject& Region2, HTuple* IsSubset);

LIntExport Herror test_equal_region(const HObject& Regions1, const HObject& Regions2, HTuple* IsEqual);

LIntExport Herror test_equal_obj(const HObject& Objects1, const HObject& Objects2, HTuple* IsEqual);

LIntExport Herror count_obj(const HObject& Objects, HTuple* Number);

LIntExport Herror get_channel_info(const HObject& Object, const HTuple& Request, const HTuple& Channel, HTuple* Information);

LIntExport Herror get_obj_class(const HObject& Object, HTuple* Class);

LIntExport Herror gen_image_interleaved(HObject* ImageRGB, const HTuple& PixelPointer, const HTuple& ColorFormat, const HTuple& OriginalWidth, const HTuple& OriginalHeight, const HTuple& Alignment, const HTuple& Type, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& StartRow, const HTuple& StartColumn, const HTuple& BitsPerChannel, const HTuple& BitShift);

LIntExport Herror gen_region_polygon_xld(const HObject& Polygon, HObject* Region, const HTuple& Mode);

LIntExport Herror gen_region_contour_xld(const HObject& Contour, HObject* Region, const HTuple& Mode);

LIntExport Herror gen_region_polygon_filled(HObject* Region, const HTuple& Rows, const HTuple& Columns);

LIntExport Herror gen_region_polygon(HObject* Region, const HTuple& Rows, const HTuple& Columns);

LIntExport Herror gen_region_points(HObject* Region, const HTuple& Rows, const HTuple& Columns);

LIntExport Herror gen_region_runs(HObject* Region, const HTuple& Row, const HTuple& ColumnBegin, const HTuple& ColumnEnd);

LIntExport Herror gen_rectangle2(HObject* Rectangle, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2);

LIntExport Herror gen_rectangle1(HObject* Rectangle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror gen_random_region(HObject* RegionRandom, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_image3(HObject* ImageRGB, const HTuple& Type, const HTuple& Width, const HTuple& Height, const HTuple& PixelPointerRed, const HTuple& PixelPointerGreen, const HTuple& PixelPointerBlue);

LIntExport Herror gen_image1(HObject* Image, const HTuple& Type, const HTuple& Width, const HTuple& Height, const HTuple& PixelPointer);

LIntExport Herror gen_image_const(HObject* Image, const HTuple& Type, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_ellipse_sector(HObject* EllipseSector, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, const HTuple& StartAngle, const HTuple& EndAngle);

LIntExport Herror gen_ellipse(HObject* Ellipse, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2);

LIntExport Herror gen_circle_sector(HObject* CircleSector, const HTuple& Row, const HTuple& Column, const HTuple& Radius, const HTuple& StartAngle, const HTuple& EndAngle);

LIntExport Herror gen_circle(HObject* Circle, const HTuple& Row, const HTuple& Column, const HTuple& Radius);

LIntExport Herror gen_checker_region(HObject* RegionChecker, const HTuple& WidthRegion, const HTuple& HeightRegion, const HTuple& WidthPattern, const HTuple& HeightPattern);

LIntExport Herror gen_grid_region(HObject* RegionGrid, const HTuple& RowSteps, const HTuple& ColumnSteps, const HTuple& Type, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_random_regions(HObject* Regions, const HTuple& Type, const HTuple& WidthMin, const HTuple& WidthMax, const HTuple& HeightMin, const HTuple& HeightMax, const HTuple& PhiMin, const HTuple& PhiMax, const HTuple& NumRegions, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_region_hline(HObject* Regions, const HTuple& Orientation, const HTuple& Distance);

LIntExport Herror gen_region_line(HObject* RegionLines, const HTuple& BeginRow, const HTuple& BeginCol, const HTuple& EndRow, const HTuple& EndCol);

LIntExport Herror gen_empty_obj(HObject* EmptyObject);

LIntExport Herror gen_empty_region(HObject* EmptyRegion);

LIntExport Herror gen_image_gray_ramp(HObject* ImageGrayRamp, const HTuple& Alpha, const HTuple& Beta, const HTuple& Mean, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_image3_extern(HObject* Image, const HTuple& Type, const HTuple& Width, const HTuple& Height, const HTuple& PointerRed, const HTuple& PointerGreen, const HTuple& PointerBlue, const HTuple& ClearProc);

LIntExport Herror gen_image1_extern(HObject* Image, const HTuple& Type, const HTuple& Width, const HTuple& Height, const HTuple& PixelPointer, const HTuple& ClearProc);

LIntExport Herror gen_image1_rect(HObject* Image, const HTuple& PixelPointer, const HTuple& Width, const HTuple& Height, const HTuple& VerticalPitch, const HTuple& HorizontalBitPitch, const HTuple& BitsPerPixel, const HTuple& DoCopy, const HTuple& ClearProc);

LIntExport Herror get_image_pointer1_rect(const HObject& Image, HTuple* PixelPointer, HTuple* Width, HTuple* Height, HTuple* VerticalPitch, HTuple* HorizontalBitPitch, HTuple* BitsPerPixel);

LIntExport Herror get_image_pointer3(const HObject& ImageRGB, HTuple* PointerRed, HTuple* PointerGreen, HTuple* PointerBlue, HTuple* Type, HTuple* Width, HTuple* Height);

LIntExport Herror get_image_pointer1(const HObject& Image, HTuple* Pointer, HTuple* Type, HTuple* Width, HTuple* Height);

LIntExport Herror get_image_type(const HObject& Image, HTuple* Type);

LIntExport Herror get_image_size(const HObject& Image, HTuple* Width, HTuple* Height);

LIntExport Herror get_image_time(const HObject& Image, HTuple* MSecond, HTuple* Second, HTuple* Minute, HTuple* Hour, HTuple* Day, HTuple* YDay, HTuple* Month, HTuple* Year);

LIntExport Herror get_grayval_interpolated(const HObject& Image, const HTuple& Row, const HTuple& Column, const HTuple& Interpolation, HTuple* Grayval);

LIntExport Herror get_grayval(const HObject& Image, const HTuple& Row, const HTuple& Column, HTuple* Grayval);

LIntExport Herror get_region_thickness(const HObject& Region, HTuple* Thickness, HTuple* Histogramm);

LIntExport Herror get_region_polygon(const HObject& Region, const HTuple& Tolerance, HTuple* Rows, HTuple* Columns);

LIntExport Herror get_region_points(const HObject& Region, HTuple* Rows, HTuple* Columns);

LIntExport Herror get_region_contour(const HObject& Region, HTuple* Rows, HTuple* Columns);

LIntExport Herror get_region_runs(const HObject& Region, HTuple* Row, HTuple* ColumnBegin, HTuple* ColumnEnd);

LIntExport Herror get_region_chain(const HObject& Region, HTuple* Row, HTuple* Column, HTuple* Chain);

LIntExport Herror get_region_convex(const HObject& Region, HTuple* Rows, HTuple* Columns);

LIntExport Herror do_ocv_simple(const HObject& Pattern, const HTuple& OCVHandle, const HTuple& PatternName, const HTuple& AdaptPos, const HTuple& AdaptSize, const HTuple& AdaptAngle, const HTuple& AdaptGray, const HTuple& Threshold, HTuple* Quality);

LIntExport Herror traind_ocv_proj(const HObject& Pattern, const HTuple& OCVHandle, const HTuple& Name, const HTuple& Mode);

LIntExport Herror deserialize_ocv(const HTuple& SerializedItemHandle, HTuple* OCVHandle);

LIntExport Herror serialize_ocv(const HTuple& OCVHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_ocv(const HTuple& FileName, HTuple* OCVHandle);

LIntExport Herror write_ocv(const HTuple& OCVHandle, const HTuple& FileName);

LIntExport Herror close_all_ocvs();

LIntExport Herror close_ocv(const HTuple& OCVHandle);

LIntExport Herror create_ocv_proj(const HTuple& PatternNames, HTuple* OCVHandle);

LIntExport Herror do_ocr_word_knn(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& Expression, const HTuple& NumAlternatives, const HTuple& NumCorrections, HTuple* Class, HTuple* Confidence, HTuple* Word, HTuple* Score);

LIntExport Herror deserialize_ocr_class_knn(const HTuple& SerializedItemHandle, HTuple* OCRHandle);

LIntExport Herror serialize_ocr_class_knn(const HTuple& OCRHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_ocr_class_knn(const HTuple& FileName, HTuple* OCRHandle);

LIntExport Herror write_ocr_class_knn(const HTuple& OCRHandle, const HTuple& FileName);

LIntExport Herror clear_all_ocr_class_knn();

LIntExport Herror clear_ocr_class_knn(const HTuple& OCRHandle);

LIntExport Herror create_ocr_class_knn(const HTuple& WidthCharacter, const HTuple& HeightCharacter, const HTuple& Interpolation, const HTuple& Features, const HTuple& Characters, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle);

LIntExport Herror trainf_ocr_class_knn(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror get_features_ocr_class_knn(const HObject& Character, const HTuple& OCRHandle, const HTuple& Transform, HTuple* Features);

LIntExport Herror get_params_ocr_class_knn(const HTuple& OCRHandle, HTuple* WidthCharacter, HTuple* HeightCharacter, HTuple* Interpolation, HTuple* Features, HTuple* Characters, HTuple* Preprocessing, HTuple* NumTrees);

LIntExport Herror do_ocr_multi_class_knn(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, HTuple* Class, HTuple* Confidence);

LIntExport Herror do_ocr_single_class_knn(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& NumClasses, const HTuple& NumNeighbors, HTuple* Class, HTuple* Confidence);

LIntExport Herror select_feature_set_trainf_knn(const HTuple& TrainingFile, const HTuple& FeatureList, const HTuple& SelectionMethod, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle, HTuple* FeatureSet, HTuple* Score);

LIntExport Herror select_feature_set_trainf_mlp_protected(const HTuple& TrainingFile, const HTuple& Password, const HTuple& FeatureList, const HTuple& SelectionMethod, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle, HTuple* FeatureSet, HTuple* Score);

LIntExport Herror select_feature_set_trainf_mlp(const HTuple& TrainingFile, const HTuple& FeatureList, const HTuple& SelectionMethod, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle, HTuple* FeatureSet, HTuple* Score);

LIntExport Herror select_feature_set_trainf_svm_protected(const HTuple& TrainingFile, const HTuple& Password, const HTuple& FeatureList, const HTuple& SelectionMethod, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle, HTuple* FeatureSet, HTuple* Score);

LIntExport Herror select_feature_set_trainf_svm(const HTuple& TrainingFile, const HTuple& FeatureList, const HTuple& SelectionMethod, const HTuple& Width, const HTuple& Height, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* OCRHandle, HTuple* FeatureSet, HTuple* Score);

LIntExport Herror clear_all_lexica();

LIntExport Herror clear_lexicon(const HTuple& LexiconHandle);

LIntExport Herror suggest_lexicon(const HTuple& LexiconHandle, const HTuple& Word, HTuple* Suggestion, HTuple* NumCorrections);

LIntExport Herror lookup_lexicon(const HTuple& LexiconHandle, const HTuple& Word, HTuple* Found);

LIntExport Herror inspect_lexicon(const HTuple& LexiconHandle, HTuple* Words);

LIntExport Herror import_lexicon(const HTuple& Name, const HTuple& FileName, HTuple* LexiconHandle);

LIntExport Herror create_lexicon(const HTuple& Name, const HTuple& Words, HTuple* LexiconHandle);

LIntExport Herror clear_all_ocr_class_svm();

LIntExport Herror clear_ocr_class_svm(const HTuple& OCRHandle);

LIntExport Herror deserialize_ocr_class_svm(const HTuple& SerializedItemHandle, HTuple* OCRHandle);

LIntExport Herror serialize_ocr_class_svm(const HTuple& OCRHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_ocr_class_svm(const HTuple& FileName, HTuple* OCRHandle);

LIntExport Herror write_ocr_class_svm(const HTuple& OCRHandle, const HTuple& FileName);

LIntExport Herror get_features_ocr_class_svm(const HObject& Character, const HTuple& OCRHandle, const HTuple& Transform, HTuple* Features);

LIntExport Herror do_ocr_word_svm(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& Expression, const HTuple& NumAlternatives, const HTuple& NumCorrections, HTuple* Class, HTuple* Word, HTuple* Score);

LIntExport Herror do_ocr_multi_class_svm(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, HTuple* Class);

LIntExport Herror do_ocr_single_class_svm(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& Num, HTuple* Class);

LIntExport Herror reduce_ocr_class_svm(const HTuple& OCRHandle, const HTuple& Method, const HTuple& MinRemainingSV, const HTuple& MaxError, HTuple* OCRHandleReduced);

LIntExport Herror trainf_ocr_class_svm_protected(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& Password, const HTuple& Epsilon, const HTuple& TrainMode);

LIntExport Herror trainf_ocr_class_svm(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& Epsilon, const HTuple& TrainMode);

LIntExport Herror get_prep_info_ocr_class_svm(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& Preprocessing, HTuple* InformationCont, HTuple* CumInformationCont);

LIntExport Herror get_support_vector_num_ocr_class_svm(const HTuple& OCRHandle, HTuple* NumSupportVectors, HTuple* NumSVPerSVM);

LIntExport Herror get_support_vector_ocr_class_svm(const HTuple& OCRHandle, const HTuple& IndexSupportVector, HTuple* Index);

LIntExport Herror get_params_ocr_class_svm(const HTuple& OCRHandle, HTuple* WidthCharacter, HTuple* HeightCharacter, HTuple* Interpolation, HTuple* Features, HTuple* Characters, HTuple* KernelType, HTuple* KernelParam, HTuple* Nu, HTuple* Mode, HTuple* Preprocessing, HTuple* NumComponents);

LIntExport Herror create_ocr_class_svm(const HTuple& WidthCharacter, const HTuple& HeightCharacter, const HTuple& Interpolation, const HTuple& Features, const HTuple& Characters, const HTuple& KernelType, const HTuple& KernelParam, const HTuple& Nu, const HTuple& Mode, const HTuple& Preprocessing, const HTuple& NumComponents, HTuple* OCRHandle);

LIntExport Herror clear_all_ocr_class_mlp();

LIntExport Herror clear_ocr_class_mlp(const HTuple& OCRHandle);

LIntExport Herror deserialize_ocr_class_mlp(const HTuple& SerializedItemHandle, HTuple* OCRHandle);

LIntExport Herror serialize_ocr_class_mlp(const HTuple& OCRHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_ocr_class_mlp(const HTuple& FileName, HTuple* OCRHandle);

LIntExport Herror write_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& FileName);

LIntExport Herror get_features_ocr_class_mlp(const HObject& Character, const HTuple& OCRHandle, const HTuple& Transform, HTuple* Features);

LIntExport Herror do_ocr_word_mlp(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& Expression, const HTuple& NumAlternatives, const HTuple& NumCorrections, HTuple* Class, HTuple* Confidence, HTuple* Word, HTuple* Score);

LIntExport Herror do_ocr_multi_class_mlp(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, HTuple* Class, HTuple* Confidence);

LIntExport Herror do_ocr_single_class_mlp(const HObject& Character, const HObject& Image, const HTuple& OCRHandle, const HTuple& Num, HTuple* Class, HTuple* Confidence);

LIntExport Herror trainf_ocr_class_mlp_protected(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& Password, const HTuple& MaxIterations, const HTuple& WeightTolerance, const HTuple& ErrorTolerance, HTuple* Error, HTuple* ErrorLog);

LIntExport Herror trainf_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& MaxIterations, const HTuple& WeightTolerance, const HTuple& ErrorTolerance, HTuple* Error, HTuple* ErrorLog);

LIntExport Herror get_prep_info_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& TrainingFile, const HTuple& Preprocessing, HTuple* InformationCont, HTuple* CumInformationCont);

LIntExport Herror get_rejection_params_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_rejection_params_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror get_regularization_params_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_regularization_params_ocr_class_mlp(const HTuple& OCRHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror get_params_ocr_class_mlp(const HTuple& OCRHandle, HTuple* WidthCharacter, HTuple* HeightCharacter, HTuple* Interpolation, HTuple* Features, HTuple* Characters, HTuple* NumHidden, HTuple* Preprocessing, HTuple* NumComponents);

LIntExport Herror create_ocr_class_mlp(const HTuple& WidthCharacter, const HTuple& HeightCharacter, const HTuple& Interpolation, const HTuple& Features, const HTuple& Characters, const HTuple& NumHidden, const HTuple& Preprocessing, const HTuple& NumComponents, const HTuple& RandSeed, HTuple* OCRHandle);

LIntExport Herror serialize_ocr(const HTuple& OcrHandle, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_ocr(const HTuple& SerializedItemHandle, HTuple* OcrHandle);

LIntExport Herror write_ocr(const HTuple& OcrHandle, const HTuple& FileName);

LIntExport Herror read_ocr(const HTuple& FileName, HTuple* OcrHandle);

LIntExport Herror do_ocr_single(const HObject& Character, const HObject& Image, const HTuple& OcrHandle, HTuple* Classes, HTuple* Confidences);

LIntExport Herror do_ocr_multi(const HObject& Character, const HObject& Image, const HTuple& OcrHandle, HTuple* Class, HTuple* Confidence);

LIntExport Herror info_ocr_class_box(const HTuple& OcrHandle, HTuple* WidthPattern, HTuple* HeightPattern, HTuple* Interpolation, HTuple* WidthMaxChar, HTuple* HeightMaxChar, HTuple* Features, HTuple* Characters);

LIntExport Herror create_ocr_class_box(const HTuple& WidthPattern, const HTuple& HeightPattern, const HTuple& Interpolation, const HTuple& Features, const HTuple& Character, HTuple* OcrHandle);

LIntExport Herror traind_ocr_class_box(const HObject& Character, const HObject& Image, const HTuple& OcrHandle, const HTuple& Class, HTuple* AvgConfidence);

LIntExport Herror trainf_ocr_class_box(const HTuple& OcrHandle, const HTuple& TrainingFile, HTuple* AvgConfidence);

LIntExport Herror protect_ocr_trainf(const HTuple& TrainingFile, const HTuple& Password, const HTuple& TrainingFileProtected);

LIntExport Herror write_ocr_trainf(const HObject& Character, const HObject& Image, const HTuple& Class, const HTuple& TrainingFile);

LIntExport Herror ocr_change_char(const HTuple& OcrHandle, const HTuple& Character);

LIntExport Herror close_ocr(const HTuple& OcrHandle);

LIntExport Herror sort_region(const HObject& Regions, HObject* SortedRegions, const HTuple& SortMode, const HTuple& Order, const HTuple& RowOrCol);

LIntExport Herror close_all_ocrs();

LIntExport Herror testd_ocr_class_box(const HObject& Character, const HObject& Image, const HTuple& OcrHandle, const HTuple& Class, HTuple* Confidence);

LIntExport Herror crop_domain_rel(const HObject& Image, HObject* ImagePart, const HTuple& Top, const HTuple& Left, const HTuple& Bottom, const HTuple& Right);

LIntExport Herror ocr_get_features(const HObject& Character, const HTuple& OcrHandle, HTuple* FeatureVector);

LIntExport Herror concat_ocr_trainf(const HTuple& SingleFiles, const HTuple& ComposedFile);

LIntExport Herror write_ocr_trainf_image(const HObject& Character, const HTuple& Class, const HTuple& TrainingFile);

LIntExport Herror append_ocr_trainf(const HObject& Character, const HObject& Image, const HTuple& Class, const HTuple& TrainingFile);

LIntExport Herror read_ocr_trainf_names_protected(const HTuple& TrainingFile, const HTuple& Password, HTuple* CharacterNames, HTuple* CharacterCount);

LIntExport Herror read_ocr_trainf_names(const HTuple& TrainingFile, HTuple* CharacterNames, HTuple* CharacterCount);

LIntExport Herror read_ocr_trainf_select(HObject* Characters, const HTuple& TrainingFile, const HTuple& SearchNames, HTuple* FoundNames);

LIntExport Herror read_ocr_trainf(HObject* Characters, const HTuple& TrainingFile, HTuple* CharacterNames);

LIntExport Herror pruning(const HObject& Region, HObject* RegionPrune, const HTuple& Length);

LIntExport Herror boundary(const HObject& Region, HObject* RegionBorder, const HTuple& BoundaryType);

LIntExport Herror fitting(const HObject& Region, const HObject& StructElements, HObject* RegionFitted);

LIntExport Herror gen_struct_elements(HObject* StructElements, const HTuple& Type, const HTuple& Row, const HTuple& Column);

LIntExport Herror transpose_region(const HObject& Region, HObject* Transposed, const HTuple& Row, const HTuple& Column);

LIntExport Herror thinning_seq(const HObject& Region, HObject* RegionThin, const HTuple& GolayElement, const HTuple& Iterations);

LIntExport Herror thinning_golay(const HObject& Region, HObject* RegionThin, const HTuple& GolayElement, const HTuple& Rotation);

LIntExport Herror thinning(const HObject& Region, const HObject& StructElement1, const HObject& StructElement2, HObject* RegionThin, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror thickening_seq(const HObject& Region, HObject* RegionThick, const HTuple& GolayElement, const HTuple& Iterations);

LIntExport Herror thickening_golay(const HObject& Region, HObject* RegionThick, const HTuple& GolayElement, const HTuple& Rotation);

LIntExport Herror thickening(const HObject& Region, const HObject& StructElement1, const HObject& StructElement2, HObject* RegionThick, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror hit_or_miss_seq(const HObject& Region, HObject* RegionHitMiss, const HTuple& GolayElement);

LIntExport Herror hit_or_miss_golay(const HObject& Region, HObject* RegionHitMiss, const HTuple& GolayElement, const HTuple& Rotation);

LIntExport Herror hit_or_miss(const HObject& Region, const HObject& StructElement1, const HObject& StructElement2, HObject* RegionHitMiss, const HTuple& Row, const HTuple& Column);

LIntExport Herror golay_elements(HObject* StructElement1, HObject* StructElement2, const HTuple& GolayElement, const HTuple& Rotation, const HTuple& Row, const HTuple& Column);

LIntExport Herror morph_skiz(const HObject& Region, HObject* RegionSkiz, const HTuple& Iterations1, const HTuple& Iterations2);

LIntExport Herror morph_skeleton(const HObject& Region, HObject* RegionSkeleton);

LIntExport Herror morph_hat(const HObject& Region, const HObject& StructElement, HObject* RegionMorphHat);

LIntExport Herror bottom_hat(const HObject& Region, const HObject& StructElement, HObject* RegionBottomHat);

LIntExport Herror top_hat(const HObject& Region, const HObject& StructElement, HObject* RegionTopHat);

LIntExport Herror minkowski_sub2(const HObject& Region, const HObject& StructElement, HObject* RegionMinkSub, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror minkowski_sub1(const HObject& Region, const HObject& StructElement, HObject* RegionMinkSub, const HTuple& Iterations);

LIntExport Herror minkowski_add2(const HObject& Region, const HObject& StructElement, HObject* RegionMinkAdd, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror minkowski_add1(const HObject& Region, const HObject& StructElement, HObject* RegionMinkAdd, const HTuple& Iterations);

LIntExport Herror closing_rectangle1(const HObject& Region, HObject* RegionClosing, const HTuple& Width, const HTuple& Height);

LIntExport Herror closing_golay(const HObject& Region, HObject* RegionClosing, const HTuple& GolayElement, const HTuple& Rotation);

LIntExport Herror closing_circle(const HObject& Region, HObject* RegionClosing, const HTuple& Radius);

LIntExport Herror closing(const HObject& Region, const HObject& StructElement, HObject* RegionClosing);

LIntExport Herror opening_seg(const HObject& Region, const HObject& StructElement, HObject* RegionOpening);

LIntExport Herror opening_golay(const HObject& Region, HObject* RegionOpening, const HTuple& GolayElement, const HTuple& Rotation);

LIntExport Herror opening_rectangle1(const HObject& Region, HObject* RegionOpening, const HTuple& Width, const HTuple& Height);

LIntExport Herror opening_circle(const HObject& Region, HObject* RegionOpening, const HTuple& Radius);

LIntExport Herror opening(const HObject& Region, const HObject& StructElement, HObject* RegionOpening);

LIntExport Herror erosion_seq(const HObject& Region, HObject* RegionErosion, const HTuple& GolayElement, const HTuple& Iterations);

LIntExport Herror erosion_golay(const HObject& Region, HObject* RegionErosion, const HTuple& GolayElement, const HTuple& Iterations, const HTuple& Rotation);

LIntExport Herror erosion_rectangle1(const HObject& Region, HObject* RegionErosion, const HTuple& Width, const HTuple& Height);

LIntExport Herror erosion_circle(const HObject& Region, HObject* RegionErosion, const HTuple& Radius);

LIntExport Herror erosion2(const HObject& Region, const HObject& StructElement, HObject* RegionErosion, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror erosion1(const HObject& Region, const HObject& StructElement, HObject* RegionErosion, const HTuple& Iterations);

LIntExport Herror dilation_seq(const HObject& Region, HObject* RegionDilation, const HTuple& GolayElement, const HTuple& Iterations);

LIntExport Herror dilation_golay(const HObject& Region, HObject* RegionDilation, const HTuple& GolayElement, const HTuple& Iterations, const HTuple& Rotation);

LIntExport Herror dilation_rectangle1(const HObject& Region, HObject* RegionDilation, const HTuple& Width, const HTuple& Height);

LIntExport Herror dilation_circle(const HObject& Region, HObject* RegionDilation, const HTuple& Radius);

LIntExport Herror dilation2(const HObject& Region, const HObject& StructElement, HObject* RegionDilation, const HTuple& Row, const HTuple& Column, const HTuple& Iterations);

LIntExport Herror dilation1(const HObject& Region, const HObject& StructElement, HObject* RegionDilation, const HTuple& Iterations);

LIntExport Herror gray_bothat(const HObject& Image, const HObject& SE, HObject* ImageBotHat);

LIntExport Herror gray_tophat(const HObject& Image, const HObject& SE, HObject* ImageTopHat);

LIntExport Herror gray_closing(const HObject& Image, const HObject& SE, HObject* ImageClosing);

LIntExport Herror gray_opening(const HObject& Image, const HObject& SE, HObject* ImageOpening);

LIntExport Herror gray_dilation(const HObject& Image, const HObject& SE, HObject* ImageDilation);

LIntExport Herror gray_erosion(const HObject& Image, const HObject& SE, HObject* ImageErosion);

LIntExport Herror read_gray_se(HObject* SE, const HTuple& FileName);

LIntExport Herror gen_disc_se(HObject* SE, const HTuple& Type, const HTuple& Width, const HTuple& Height, const HTuple& Smax);

LIntExport Herror get_metrology_object_model_contour(HObject* Contour, const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& Resolution);

LIntExport Herror get_metrology_object_result_contour(HObject* Contour, const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& Instance, const HTuple& Resolution);

LIntExport Herror align_metrology_model(const HTuple& MetrologyHandle, const HTuple& Row, const HTuple& Column, const HTuple& Angle);

LIntExport Herror add_metrology_object_generic(const HTuple& MetrologyHandle, const HTuple& Shape, const HTuple& ShapeParam, const HTuple& MeasureLength1, const HTuple& MeasureLength2, const HTuple& MeasureSigma, const HTuple& MeasureThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Index);

LIntExport Herror get_metrology_model_param(const HTuple& MetrologyHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_metrology_model_param(const HTuple& MetrologyHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror deserialize_metrology_model(const HTuple& SerializedItemHandle, HTuple* MetrologyHandle);

LIntExport Herror serialize_metrology_model(const HTuple& MetrologyHandle, HTuple* SerializedItemHandle);

LIntExport Herror transform_metrology_object(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Mode);

LIntExport Herror write_metrology_model(const HTuple& MetrologyHandle, const HTuple& FileName);

LIntExport Herror read_metrology_model(const HTuple& FileName, HTuple* MetrologyHandle);

LIntExport Herror copy_metrology_model(const HTuple& MetrologyHandle, const HTuple& Index, HTuple* CopiedMetrologyHandle);

LIntExport Herror copy_metrology_object(const HTuple& MetrologyHandle, const HTuple& Index, HTuple* CopiedIndices);

LIntExport Herror get_metrology_object_num_instances(const HTuple& MetrologyHandle, const HTuple& Index, HTuple* NumInstances);

LIntExport Herror get_metrology_object_result(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& Instance, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Parameter);

LIntExport Herror get_metrology_object_measures(HObject* Contours, const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& Transition, HTuple* Row, HTuple* Column);

LIntExport Herror apply_metrology_model(const HObject& Image, const HTuple& MetrologyHandle);

LIntExport Herror get_metrology_object_indices(const HTuple& MetrologyHandle, HTuple* Indices);

LIntExport Herror reset_metrology_object_fuzzy_param(const HTuple& MetrologyHandle, const HTuple& Index);

LIntExport Herror reset_metrology_object_param(const HTuple& MetrologyHandle, const HTuple& Index);

LIntExport Herror get_metrology_object_fuzzy_param(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror get_metrology_object_param(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_metrology_object_fuzzy_param(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror set_metrology_object_param(const HTuple& MetrologyHandle, const HTuple& Index, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror add_metrology_object_rectangle2_measure(const HTuple& MetrologyHandle, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2, const HTuple& MeasureLength1, const HTuple& MeasureLength2, const HTuple& MeasureSigma, const HTuple& MeasureThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Index);

LIntExport Herror add_metrology_object_line_measure(const HTuple& MetrologyHandle, const HTuple& RowBegin, const HTuple& ColumnBegin, const HTuple& RowEnd, const HTuple& ColumnEnd, const HTuple& MeasureLength1, const HTuple& MeasureLength2, const HTuple& MeasureSigma, const HTuple& MeasureThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Index);

LIntExport Herror add_metrology_object_ellipse_measure(const HTuple& MetrologyHandle, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, const HTuple& MeasureLength1, const HTuple& MeasureLength2, const HTuple& MeasureSigma, const HTuple& MeasureThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Index);

LIntExport Herror add_metrology_object_circle_measure(const HTuple& MetrologyHandle, const HTuple& Row, const HTuple& Column, const HTuple& Radius, const HTuple& MeasureLength1, const HTuple& MeasureLength2, const HTuple& MeasureSigma, const HTuple& MeasureThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Index);

LIntExport Herror clear_all_metrology_models();

LIntExport Herror clear_metrology_model(const HTuple& MetrologyHandle);

LIntExport Herror clear_metrology_object(const HTuple& MetrologyHandle, const HTuple& Index);

LIntExport Herror set_metrology_model_image_size(const HTuple& MetrologyHandle, const HTuple& Width, const HTuple& Height);

LIntExport Herror create_metrology_model(HTuple* MetrologyHandle);

LIntExport Herror serialize_measure(const HTuple& MeasureHandle, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_measure(const HTuple& SerializedItemHandle, HTuple* MeasureHandle);

LIntExport Herror write_measure(const HTuple& MeasureHandle, const HTuple& FileName);

LIntExport Herror read_measure(const HTuple& FileName, HTuple* MeasureHandle);

LIntExport Herror measure_thresh(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& Threshold, const HTuple& Select, HTuple* RowThresh, HTuple* ColumnThresh, HTuple* Distance);

LIntExport Herror close_all_measures();

LIntExport Herror close_measure(const HTuple& MeasureHandle);

LIntExport Herror measure_projection(const HObject& Image, const HTuple& MeasureHandle, HTuple* GrayValues);

LIntExport Herror reset_fuzzy_measure(const HTuple& MeasureHandle, const HTuple& SetType);

LIntExport Herror set_fuzzy_measure_norm_pair(const HTuple& MeasureHandle, const HTuple& PairSize, const HTuple& SetType, const HTuple& Function);

LIntExport Herror set_fuzzy_measure(const HTuple& MeasureHandle, const HTuple& SetType, const HTuple& Function);

LIntExport Herror fuzzy_measure_pairing(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& AmpThresh, const HTuple& FuzzyThresh, const HTuple& Transition, const HTuple& Pairing, const HTuple& NumPairs, HTuple* RowEdgeFirst, HTuple* ColumnEdgeFirst, HTuple* AmplitudeFirst, HTuple* RowEdgeSecond, HTuple* ColumnEdgeSecond, HTuple* AmplitudeSecond, HTuple* RowPairCenter, HTuple* ColumnPairCenter, HTuple* FuzzyScore, HTuple* IntraDistance);

LIntExport Herror fuzzy_measure_pairs(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& AmpThresh, const HTuple& FuzzyThresh, const HTuple& Transition, HTuple* RowEdgeFirst, HTuple* ColumnEdgeFirst, HTuple* AmplitudeFirst, HTuple* RowEdgeSecond, HTuple* ColumnEdgeSecond, HTuple* AmplitudeSecond, HTuple* RowEdgeCenter, HTuple* ColumnEdgeCenter, HTuple* FuzzyScore, HTuple* IntraDistance, HTuple* InterDistance);

LIntExport Herror fuzzy_measure_pos(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& AmpThresh, const HTuple& FuzzyThresh, const HTuple& Transition, HTuple* RowEdge, HTuple* ColumnEdge, HTuple* Amplitude, HTuple* FuzzyScore, HTuple* Distance);

LIntExport Herror measure_pairs(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& Threshold, const HTuple& Transition, const HTuple& Select, HTuple* RowEdgeFirst, HTuple* ColumnEdgeFirst, HTuple* AmplitudeFirst, HTuple* RowEdgeSecond, HTuple* ColumnEdgeSecond, HTuple* AmplitudeSecond, HTuple* IntraDistance, HTuple* InterDistance);

LIntExport Herror measure_pos(const HObject& Image, const HTuple& MeasureHandle, const HTuple& Sigma, const HTuple& Threshold, const HTuple& Transition, const HTuple& Select, HTuple* RowEdge, HTuple* ColumnEdge, HTuple* Amplitude, HTuple* Distance);

LIntExport Herror translate_measure(const HTuple& MeasureHandle, const HTuple& Row, const HTuple& Column);

LIntExport Herror gen_measure_arc(const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& Radius, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AnnulusRadius, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation, HTuple* MeasureHandle);

LIntExport Herror gen_measure_rectangle2(const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation, HTuple* MeasureHandle);

LIntExport Herror deserialize_matrix(const HTuple& SerializedItemHandle, HTuple* MatrixID);

LIntExport Herror serialize_matrix(const HTuple& MatrixID, HTuple* SerializedItemHandle);

LIntExport Herror read_matrix(const HTuple& FileName, HTuple* MatrixID);

LIntExport Herror write_matrix(const HTuple& MatrixID, const HTuple& FileFormat, const HTuple& FileName);

LIntExport Herror orthogonal_decompose_matrix(const HTuple& MatrixID, const HTuple& DecompositionType, const HTuple& OutputMatricesType, const HTuple& ComputeOrthogonal, HTuple* MatrixOrthogonalID, HTuple* MatrixTriangularID);

LIntExport Herror decompose_matrix(const HTuple& MatrixID, const HTuple& MatrixType, HTuple* Matrix1ID, HTuple* Matrix2ID);

LIntExport Herror svd_matrix(const HTuple& MatrixID, const HTuple& SVDType, const HTuple& ComputeSingularVectors, HTuple* MatrixUID, HTuple* MatrixSID, HTuple* MatrixVID);

LIntExport Herror generalized_eigenvalues_general_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, const HTuple& ComputeEigenvectors, HTuple* EigenvaluesRealID, HTuple* EigenvaluesImagID, HTuple* EigenvectorsRealID, HTuple* EigenvectorsImagID);

LIntExport Herror generalized_eigenvalues_symmetric_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, const HTuple& ComputeEigenvectors, HTuple* EigenvaluesID, HTuple* EigenvectorsID);

LIntExport Herror eigenvalues_general_matrix(const HTuple& MatrixID, const HTuple& ComputeEigenvectors, HTuple* EigenvaluesRealID, HTuple* EigenvaluesImagID, HTuple* EigenvectorsRealID, HTuple* EigenvectorsImagID);

LIntExport Herror eigenvalues_symmetric_matrix(const HTuple& MatrixID, const HTuple& ComputeEigenvectors, HTuple* EigenvaluesID, HTuple* EigenvectorsID);

LIntExport Herror solve_matrix(const HTuple& MatrixLHSID, const HTuple& MatrixLHSType, const HTuple& Epsilon, const HTuple& MatrixRHSID, HTuple* MatrixResultID);

LIntExport Herror determinant_matrix(const HTuple& MatrixID, const HTuple& MatrixType, HTuple* Value);

LIntExport Herror invert_matrix_mod(const HTuple& MatrixID, const HTuple& MatrixType, const HTuple& Epsilon);

LIntExport Herror invert_matrix(const HTuple& MatrixID, const HTuple& MatrixType, const HTuple& Epsilon, HTuple* MatrixInvID);

LIntExport Herror transpose_matrix_mod(const HTuple& MatrixID);

LIntExport Herror transpose_matrix(const HTuple& MatrixID, HTuple* MatrixTransposedID);

LIntExport Herror max_matrix(const HTuple& MatrixID, const HTuple& MaxType, HTuple* MatrixMaxID);

LIntExport Herror min_matrix(const HTuple& MatrixID, const HTuple& MinType, HTuple* MatrixMinID);

LIntExport Herror pow_matrix_mod(const HTuple& MatrixID, const HTuple& MatrixType, const HTuple& Power);

LIntExport Herror pow_matrix(const HTuple& MatrixID, const HTuple& MatrixType, const HTuple& Power, HTuple* MatrixPowID);

LIntExport Herror pow_element_matrix_mod(const HTuple& MatrixID, const HTuple& MatrixExpID);

LIntExport Herror pow_element_matrix(const HTuple& MatrixID, const HTuple& MatrixExpID, HTuple* MatrixPowID);

LIntExport Herror pow_scalar_element_matrix_mod(const HTuple& MatrixID, const HTuple& Power);

LIntExport Herror pow_scalar_element_matrix(const HTuple& MatrixID, const HTuple& Power, HTuple* MatrixPowID);

LIntExport Herror sqrt_matrix_mod(const HTuple& MatrixID);

LIntExport Herror sqrt_matrix(const HTuple& MatrixID, HTuple* MatrixSqrtID);

LIntExport Herror abs_matrix_mod(const HTuple& MatrixID);

LIntExport Herror abs_matrix(const HTuple& MatrixID, HTuple* MatrixAbsID);

LIntExport Herror norm_matrix(const HTuple& MatrixID, const HTuple& NormType, HTuple* Value);

LIntExport Herror mean_matrix(const HTuple& MatrixID, const HTuple& MeanType, HTuple* MatrixMeanID);

LIntExport Herror sum_matrix(const HTuple& MatrixID, const HTuple& SumType, HTuple* MatrixSumID);

LIntExport Herror div_element_matrix_mod(const HTuple& MatrixAID, const HTuple& MatrixBID);

LIntExport Herror div_element_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, HTuple* MatrixDivID);

LIntExport Herror mult_element_matrix_mod(const HTuple& MatrixAID, const HTuple& MatrixBID);

LIntExport Herror mult_element_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, HTuple* MatrixMultID);

LIntExport Herror scale_matrix_mod(const HTuple& MatrixID, const HTuple& Factor);

LIntExport Herror scale_matrix(const HTuple& MatrixID, const HTuple& Factor, HTuple* MatrixScaledID);

LIntExport Herror sub_matrix_mod(const HTuple& MatrixAID, const HTuple& MatrixBID);

LIntExport Herror sub_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, HTuple* MatrixSubID);

LIntExport Herror add_matrix_mod(const HTuple& MatrixAID, const HTuple& MatrixBID);

LIntExport Herror add_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, HTuple* MatrixSumID);

LIntExport Herror mult_matrix_mod(const HTuple& MatrixAID, const HTuple& MatrixBID, const HTuple& MultType);

LIntExport Herror mult_matrix(const HTuple& MatrixAID, const HTuple& MatrixBID, const HTuple& MultType, HTuple* MatrixMultID);

LIntExport Herror get_size_matrix(const HTuple& MatrixID, HTuple* Rows, HTuple* Columns);

LIntExport Herror repeat_matrix(const HTuple& MatrixID, const HTuple& Rows, const HTuple& Columns, HTuple* MatrixRepeatedID);

LIntExport Herror copy_matrix(const HTuple& MatrixID, HTuple* MatrixCopyID);

LIntExport Herror set_diagonal_matrix(const HTuple& MatrixID, const HTuple& VectorID, const HTuple& Diagonal);

LIntExport Herror get_diagonal_matrix(const HTuple& MatrixID, const HTuple& Diagonal, HTuple* VectorID);

LIntExport Herror set_sub_matrix(const HTuple& MatrixID, const HTuple& MatrixSubID, const HTuple& Row, const HTuple& Column);

LIntExport Herror get_sub_matrix(const HTuple& MatrixID, const HTuple& Row, const HTuple& Column, const HTuple& RowsSub, const HTuple& ColumnsSub, HTuple* MatrixSubID);

LIntExport Herror set_full_matrix(const HTuple& MatrixID, const HTuple& Values);

LIntExport Herror get_full_matrix(const HTuple& MatrixID, HTuple* Values);

LIntExport Herror set_value_matrix(const HTuple& MatrixID, const HTuple& Row, const HTuple& Column, const HTuple& Value);

LIntExport Herror get_value_matrix(const HTuple& MatrixID, const HTuple& Row, const HTuple& Column, HTuple* Value);

LIntExport Herror clear_all_matrices();

LIntExport Herror clear_matrix(const HTuple& MatrixID);

LIntExport Herror create_matrix(const HTuple& Rows, const HTuple& Columns, const HTuple& Value, HTuple* MatrixID);

LIntExport Herror clear_all_sample_identifiers();

LIntExport Herror clear_sample_identifier(const HTuple& SampleIdentifier);

LIntExport Herror deserialize_sample_identifier(const HTuple& SerializedItemHandle, HTuple* SampleIdentifier);

LIntExport Herror read_sample_identifier(const HTuple& FileName, HTuple* SampleIdentifier);

LIntExport Herror serialize_sample_identifier(const HTuple& SampleIdentifier, HTuple* SerializedItemHandle);

LIntExport Herror write_sample_identifier(const HTuple& SampleIdentifier, const HTuple& FileName);

LIntExport Herror apply_sample_identifier(const HObject& Image, const HTuple& SampleIdentifier, const HTuple& NumResults, const HTuple& RatingThreshold, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* ObjectIdx, HTuple* Rating);

LIntExport Herror get_sample_identifier_param(const HTuple& SampleIdentifier, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_sample_identifier_param(const HTuple& SampleIdentifier, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror get_sample_identifier_object_info(const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& InfoName, HTuple* InfoValue);

LIntExport Herror set_sample_identifier_object_info(const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& InfoName, const HTuple& InfoValue);

LIntExport Herror remove_sample_identifier_training_data(const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& ObjectSampleIdx);

LIntExport Herror remove_sample_identifier_preparation_data(const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& ObjectSampleIdx);

LIntExport Herror train_sample_identifier(const HTuple& SampleIdentifier, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror add_sample_identifier_training_data(const HObject& SampleImage, const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* ObjectSampleIdx);

LIntExport Herror prepare_sample_identifier(const HTuple& SampleIdentifier, const HTuple& RemovePreparationData, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror add_sample_identifier_preparation_data(const HObject& SampleImage, const HTuple& SampleIdentifier, const HTuple& ObjectIdx, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* ObjectSampleIdx);

LIntExport Herror create_sample_identifier(const HTuple& ParamName, const HTuple& ParamValue, HTuple* SampleIdentifier);

LIntExport Herror deserialize_shape_model(const HTuple& SerializedItemHandle, HTuple* ModelID);

LIntExport Herror read_shape_model(const HTuple& FileName, HTuple* ModelID);

LIntExport Herror serialize_shape_model(const HTuple& ModelID, HTuple* SerializedItemHandle);

LIntExport Herror write_shape_model(const HTuple& ModelID, const HTuple& FileName);

LIntExport Herror clear_all_shape_models();

LIntExport Herror clear_shape_model(const HTuple& ModelID);

LIntExport Herror get_shape_model_contours(HObject* ModelContours, const HTuple& ModelID, const HTuple& Level);

LIntExport Herror determine_shape_model_params(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, const HTuple& Parameters, HTuple* ParameterName, HTuple* ParameterValue);

LIntExport Herror get_shape_model_params(const HTuple& ModelID, HTuple* NumLevels, HTuple* AngleStart, HTuple* AngleExtent, HTuple* AngleStep, HTuple* ScaleMin, HTuple* ScaleMax, HTuple* ScaleStep, HTuple* Metric, HTuple* MinContrast);

LIntExport Herror get_shape_model_origin(const HTuple& ModelID, HTuple* Row, HTuple* Column);

LIntExport Herror set_shape_model_origin(const HTuple& ModelID, const HTuple& Row, const HTuple& Column);

LIntExport Herror find_aniso_shape_models(const HObject& Image, const HTuple& ModelIDs, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* ScaleR, HTuple* ScaleC, HTuple* Score, HTuple* Model);

LIntExport Herror find_scaled_shape_models(const HObject& Image, const HTuple& ModelIDs, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Scale, HTuple* Score, HTuple* Model);

LIntExport Herror find_shape_models(const HObject& Image, const HTuple& ModelIDs, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Score, HTuple* Model);

LIntExport Herror find_aniso_shape_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* ScaleR, HTuple* ScaleC, HTuple* Score);

LIntExport Herror find_scaled_shape_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Scale, HTuple* Score);

LIntExport Herror find_shape_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& Greediness, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Score);

LIntExport Herror set_shape_model_metric(const HObject& Image, const HTuple& ModelID, const HTuple& HomMat2D, const HTuple& Metric);

LIntExport Herror set_shape_model_param(const HTuple& ModelID, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror create_aniso_shape_model_xld(const HObject& Contours, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror create_scaled_shape_model_xld(const HObject& Contours, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& ScaleStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror create_shape_model_xld(const HObject& Contours, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror create_aniso_shape_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror create_scaled_shape_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& ScaleStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror create_shape_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, HTuple* ModelID);

LIntExport Herror inspect_shape_model(const HObject& Image, HObject* ModelImages, HObject* ModelRegions, const HTuple& NumLevels, const HTuple& Contrast);

LIntExport Herror clear_all_descriptor_models();

LIntExport Herror clear_descriptor_model(const HTuple& ModelID);

LIntExport Herror deserialize_descriptor_model(const HTuple& SerializedItemHandle, HTuple* ModelID);

LIntExport Herror serialize_descriptor_model(const HTuple& ModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_descriptor_model(const HTuple& FileName, HTuple* ModelID);

LIntExport Herror write_descriptor_model(const HTuple& ModelID, const HTuple& FileName);

LIntExport Herror find_calib_descriptor_model(const HObject& Image, const HTuple& ModelID, const HTuple& DetectorParamName, const HTuple& DetectorParamValue, const HTuple& DescriptorParamName, const HTuple& DescriptorParamValue, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& CamParam, const HTuple& ScoreType, HTuple* Pose, HTuple* Score);

LIntExport Herror find_uncalib_descriptor_model(const HObject& Image, const HTuple& ModelID, const HTuple& DetectorParamName, const HTuple& DetectorParamValue, const HTuple& DescriptorParamName, const HTuple& DescriptorParamValue, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& ScoreType, HTuple* HomMat2D, HTuple* Score);

LIntExport Herror get_descriptor_model_points(const HTuple& ModelID, const HTuple& Set, const HTuple& Subset, HTuple* Row, HTuple* Column);

LIntExport Herror get_descriptor_model_params(const HTuple& ModelID, HTuple* DetectorType, HTuple* DetectorParamName, HTuple* DetectorParamValue, HTuple* DescriptorParamName, HTuple* DescriptorParamValue);

LIntExport Herror create_calib_descriptor_model(const HObject& Template, const HTuple& CamParam, const HTuple& ReferencePose, const HTuple& DetectorType, const HTuple& DetectorParamName, const HTuple& DetectorParamValue, const HTuple& DescriptorParamName, const HTuple& DescriptorParamValue, const HTuple& Seed, HTuple* ModelID);

LIntExport Herror create_uncalib_descriptor_model(const HObject& Template, const HTuple& DetectorType, const HTuple& DetectorParamName, const HTuple& DetectorParamValue, const HTuple& DescriptorParamName, const HTuple& DescriptorParamValue, const HTuple& Seed, HTuple* ModelID);

LIntExport Herror get_descriptor_model_results(const HTuple& ModelID, const HTuple& ObjectID, const HTuple& ResultNames, HTuple* Results);

LIntExport Herror get_descriptor_model_origin(const HTuple& ModelID, HTuple* Row, HTuple* Column);

LIntExport Herror set_descriptor_model_origin(const HTuple& ModelID, const HTuple& Row, const HTuple& Column);

LIntExport Herror get_deformable_model_origin(const HTuple& ModelID, HTuple* Row, HTuple* Column);

LIntExport Herror set_deformable_model_origin(const HTuple& ModelID, const HTuple& Row, const HTuple& Column);

LIntExport Herror set_deformable_model_param(const HTuple& ModelID, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror get_deformable_model_params(const HTuple& ModelID, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror get_deformable_model_contours(HObject* ModelContours, const HTuple& ModelID, const HTuple& Level);

LIntExport Herror determine_deformable_model_params(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleMin, const HTuple& ScaleMax, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, const HTuple& Parameters, HTuple* ParameterName, HTuple* ParameterValue);

LIntExport Herror deserialize_deformable_model(const HTuple& SerializedItemHandle, HTuple* ModelID);

LIntExport Herror serialize_deformable_model(const HTuple& ModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_deformable_model(const HTuple& FileName, HTuple* ModelID);

LIntExport Herror write_deformable_model(const HTuple& ModelID, const HTuple& FileName);

LIntExport Herror clear_all_deformable_models();

LIntExport Herror clear_deformable_model(const HTuple& ModelID);

LIntExport Herror find_local_deformable_model(const HObject& Image, HObject* ImageRectified, HObject* VectorField, HObject* DeformedContours, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& NumLevels, const HTuple& Greediness, const HTuple& ResultType, const HTuple& ParamName, const HTuple& ParamValue, HTuple* Score, HTuple* Row, HTuple* Column);

LIntExport Herror find_planar_calib_deformable_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& NumLevels, const HTuple& Greediness, const HTuple& ParamName, const HTuple& ParamValue, HTuple* Pose, HTuple* CovPose, HTuple* Score);

LIntExport Herror find_planar_uncalib_deformable_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& NumLevels, const HTuple& Greediness, const HTuple& ParamName, const HTuple& ParamValue, HTuple* HomMat2D, HTuple* Score);

LIntExport Herror set_local_deformable_model_metric(const HObject& Image, const HObject& VectorField, const HTuple& ModelID, const HTuple& Metric);

LIntExport Herror set_planar_calib_deformable_model_metric(const HObject& Image, const HTuple& ModelID, const HTuple& Pose, const HTuple& Metric);

LIntExport Herror set_planar_uncalib_deformable_model_metric(const HObject& Image, const HTuple& ModelID, const HTuple& HomMat2D, const HTuple& Metric);

LIntExport Herror create_local_deformable_model_xld(const HObject& Contours, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror create_planar_calib_deformable_model_xld(const HObject& Contours, const HTuple& CamParam, const HTuple& ReferencePose, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror create_planar_uncalib_deformable_model_xld(const HObject& Contours, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror create_local_deformable_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror create_planar_calib_deformable_model(const HObject& Template, const HTuple& CamParam, const HTuple& ReferencePose, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror create_planar_uncalib_deformable_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& ScaleRMin, const HTuple& ScaleRMax, const HTuple& ScaleRStep, const HTuple& ScaleCMin, const HTuple& ScaleCMax, const HTuple& ScaleCStep, const HTuple& Optimization, const HTuple& Metric, const HTuple& Contrast, const HTuple& MinContrast, const HTuple& ParamName, const HTuple& ParamValue, HTuple* ModelID);

LIntExport Herror clear_all_ncc_models();

LIntExport Herror clear_ncc_model(const HTuple& ModelID);

LIntExport Herror deserialize_ncc_model(const HTuple& SerializedItemHandle, HTuple* ModelID);

LIntExport Herror serialize_ncc_model(const HTuple& ModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_ncc_model(const HTuple& FileName, HTuple* ModelID);

LIntExport Herror write_ncc_model(const HTuple& ModelID, const HTuple& FileName);

LIntExport Herror determine_ncc_model_params(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& Metric, const HTuple& Parameters, HTuple* ParameterName, HTuple* ParameterValue);

LIntExport Herror get_ncc_model_params(const HTuple& ModelID, HTuple* NumLevels, HTuple* AngleStart, HTuple* AngleExtent, HTuple* AngleStep, HTuple* Metric);

LIntExport Herror get_ncc_model_origin(const HTuple& ModelID, HTuple* Row, HTuple* Column);

LIntExport Herror set_ncc_model_origin(const HTuple& ModelID, const HTuple& Row, const HTuple& Column);

LIntExport Herror find_ncc_model(const HObject& Image, const HTuple& ModelID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& SubPixel, const HTuple& NumLevels, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Score);

LIntExport Herror set_ncc_model_param(const HTuple& ModelID, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror create_ncc_model(const HObject& Template, const HTuple& NumLevels, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& AngleStep, const HTuple& Metric, HTuple* ModelID);

LIntExport Herror get_found_component_model(HObject* FoundComponents, const HTuple& ComponentModelID, const HTuple& ModelStart, const HTuple& ModelEnd, const HTuple& RowComp, const HTuple& ColumnComp, const HTuple& AngleComp, const HTuple& ScoreComp, const HTuple& ModelComp, const HTuple& ModelMatch, const HTuple& MarkOrientation, HTuple* RowCompInst, HTuple* ColumnCompInst, HTuple* AngleCompInst, HTuple* ScoreCompInst);

LIntExport Herror find_component_model(const HObject& Image, const HTuple& ComponentModelID, const HTuple& RootComponent, const HTuple& AngleStartRoot, const HTuple& AngleExtentRoot, const HTuple& MinScore, const HTuple& NumMatches, const HTuple& MaxOverlap, const HTuple& IfRootNotFound, const HTuple& IfComponentNotFound, const HTuple& PosePrediction, const HTuple& MinScoreComp, const HTuple& SubPixelComp, const HTuple& NumLevelsComp, const HTuple& GreedinessComp, HTuple* ModelStart, HTuple* ModelEnd, HTuple* Score, HTuple* RowComp, HTuple* ColumnComp, HTuple* AngleComp, HTuple* ScoreComp, HTuple* ModelComp);

LIntExport Herror clear_all_component_models();

LIntExport Herror clear_component_model(const HTuple& ComponentModelID);

LIntExport Herror get_component_model_tree(HObject* Tree, HObject* Relations, const HTuple& ComponentModelID, const HTuple& RootComponent, const HTuple& Image, HTuple* StartNode, HTuple* EndNode, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2, HTuple* AngleStart, HTuple* AngleExtent);

LIntExport Herror get_component_model_params(const HTuple& ComponentModelID, HTuple* MinScoreComp, HTuple* RootRanking, HTuple* ShapeModelIDs);

LIntExport Herror deserialize_component_model(const HTuple& SerializedItemHandle, HTuple* ComponentModelID);

LIntExport Herror serialize_component_model(const HTuple& ComponentModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_component_model(const HTuple& FileName, HTuple* ComponentModelID);

LIntExport Herror write_component_model(const HTuple& ComponentModelID, const HTuple& FileName);

LIntExport Herror create_component_model(const HObject& ModelImage, const HObject& ComponentRegions, const HTuple& VariationRow, const HTuple& VariationColumn, const HTuple& VariationAngle, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& ContrastLowComp, const HTuple& ContrastHighComp, const HTuple& MinSizeComp, const HTuple& MinContrastComp, const HTuple& MinScoreComp, const HTuple& NumLevelsComp, const HTuple& AngleStepComp, const HTuple& OptimizationComp, const HTuple& MetricComp, const HTuple& PregenerationComp, HTuple* ComponentModelID, HTuple* RootRanking);

LIntExport Herror create_trained_component_model(const HTuple& ComponentTrainingID, const HTuple& AngleStart, const HTuple& AngleExtent, const HTuple& MinContrastComp, const HTuple& MinScoreComp, const HTuple& NumLevelsComp, const HTuple& AngleStepComp, const HTuple& OptimizationComp, const HTuple& MetricComp, const HTuple& PregenerationComp, HTuple* ComponentModelID, HTuple* RootRanking);

LIntExport Herror clear_all_training_components();

LIntExport Herror clear_training_components(const HTuple& ComponentTrainingID);

LIntExport Herror get_component_relations(HObject* Relations, const HTuple& ComponentTrainingID, const HTuple& ReferenceComponent, const HTuple& Image, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2, HTuple* AngleStart, HTuple* AngleExtent);

LIntExport Herror get_training_components(HObject* TrainingComponents, const HTuple& ComponentTrainingID, const HTuple& Components, const HTuple& Image, const HTuple& MarkOrientation, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Score);

LIntExport Herror modify_component_relations(const HTuple& ComponentTrainingID, const HTuple& ReferenceComponent, const HTuple& ToleranceComponent, const HTuple& PositionTolerance, const HTuple& AngleTolerance);

LIntExport Herror deserialize_training_components(const HTuple& SerializedItemHandle, HTuple* ComponentTrainingID);

LIntExport Herror serialize_training_components(const HTuple& ComponentTrainingID, HTuple* SerializedItemHandle);

LIntExport Herror read_training_components(const HTuple& FileName, HTuple* ComponentTrainingID);

LIntExport Herror write_training_components(const HTuple& ComponentTrainingID, const HTuple& FileName);

LIntExport Herror cluster_model_components(const HObject& TrainingImages, HObject* ModelComponents, const HTuple& ComponentTrainingID, const HTuple& AmbiguityCriterion, const HTuple& MaxContourOverlap, const HTuple& ClusterThreshold);

LIntExport Herror inspect_clustered_components(HObject* ModelComponents, const HTuple& ComponentTrainingID, const HTuple& AmbiguityCriterion, const HTuple& MaxContourOverlap, const HTuple& ClusterThreshold);

LIntExport Herror train_model_components(const HObject& ModelImage, const HObject& InitialComponents, const HObject& TrainingImages, HObject* ModelComponents, const HTuple& ContrastLow, const HTuple& ContrastHigh, const HTuple& MinSize, const HTuple& MinScore, const HTuple& SearchRowTol, const HTuple& SearchColumnTol, const HTuple& SearchAngleTol, const HTuple& TrainingEmphasis, const HTuple& AmbiguityCriterion, const HTuple& MaxContourOverlap, const HTuple& ClusterThreshold, HTuple* ComponentTrainingID);

LIntExport Herror gen_initial_components(const HObject& ModelImage, HObject* InitialComponents, const HTuple& ContrastLow, const HTuple& ContrastHigh, const HTuple& MinSize, const HTuple& Mode, const HTuple& GenericName, const HTuple& GenericValue);

LIntExport Herror get_deformable_surface_matching_result(const HTuple& DeformableSurfaceMatchingResult, const HTuple& ResultName, const HTuple& ResultIndex, HTuple* ResultValue);

LIntExport Herror clear_deformable_surface_matching_result(const HTuple& DeformableSurfaceMatchingResult);

LIntExport Herror clear_deformable_surface_model(const HTuple& DeformableSurfaceModel);

LIntExport Herror deserialize_deformable_surface_model(const HTuple& SerializedItemHandle, HTuple* DeformableSurfaceModel);

LIntExport Herror serialize_deformable_surface_model(const HTuple& DeformableSurfaceModel, HTuple* SerializedItemHandle);

LIntExport Herror read_deformable_surface_model(const HTuple& FileName, HTuple* DeformableSurfaceModel);

LIntExport Herror write_deformable_surface_model(const HTuple& DeformableSurfaceModel, const HTuple& FileName);

LIntExport Herror refine_deformable_surface_model(const HTuple& DeformableSurfaceModel, const HTuple& ObjectModel3D, const HTuple& RelSamplingDistance, const HTuple& InitialDeformationObjectModel3D, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Score, HTuple* DeformableSurfaceMatchingResult);

LIntExport Herror find_deformable_surface_model(const HTuple& DeformableSurfaceModel, const HTuple& ObjectModel3D, const HTuple& RelSamplingDistance, const HTuple& MinScore, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Score, HTuple* DeformableSurfaceMatchingResult);

LIntExport Herror get_deformable_surface_model_param(const HTuple& DeformableSurfaceModel, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror add_deformable_surface_model_reference_point(const HTuple& DeformableSurfaceModel, const HTuple& ReferencePointX, const HTuple& ReferencePointY, const HTuple& ReferencePointZ, HTuple* ReferencePointIndex);

LIntExport Herror add_deformable_surface_model_sample(const HTuple& DeformableSurfaceModel, const HTuple& ObjectModel3D);

LIntExport Herror create_deformable_surface_model(const HTuple& ObjectModel3D, const HTuple& RelSamplingDistance, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* DeformableSurfaceModel);

LIntExport Herror get_surface_matching_result(const HTuple& SurfaceMatchingResultID, const HTuple& ResultName, const HTuple& ResultIndex, HTuple* ResultValue);

LIntExport Herror clear_all_surface_matching_results();

LIntExport Herror clear_surface_matching_result(const HTuple& SurfaceMatchingResultID);

LIntExport Herror clear_all_surface_models();

LIntExport Herror clear_surface_model(const HTuple& SurfaceModelID);

LIntExport Herror deserialize_surface_model(const HTuple& SerializedItemHandle, HTuple* SurfaceModelID);

LIntExport Herror serialize_surface_model(const HTuple& SurfaceModelID, HTuple* SerializedItemHandle);

LIntExport Herror read_surface_model(const HTuple& FileName, HTuple* SurfaceModelID);

LIntExport Herror write_surface_model(const HTuple& SurfaceModelID, const HTuple& FileName);

LIntExport Herror refine_surface_model_pose(const HTuple& SurfaceModelID, const HTuple& ObjectModel3D, const HTuple& InitialPose, const HTuple& MinScore, const HTuple& ReturnResultHandle, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Pose, HTuple* Score, HTuple* SurfaceMatchingResultID);

LIntExport Herror find_surface_model(const HTuple& SurfaceModelID, const HTuple& ObjectModel3D, const HTuple& RelSamplingDistance, const HTuple& KeyPointFraction, const HTuple& MinScore, const HTuple& ReturnResultHandle, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Pose, HTuple* Score, HTuple* SurfaceMatchingResultID);

LIntExport Herror get_surface_model_param(const HTuple& SurfaceModelID, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror create_surface_model(const HTuple& ObjectModel3D, const HTuple& RelSamplingDistance, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* SurfaceModelID);

LIntExport Herror create_cam_pose_look_at_point(const HTuple& CamPosX, const HTuple& CamPosY, const HTuple& CamPosZ, const HTuple& LookAtX, const HTuple& LookAtY, const HTuple& LookAtZ, const HTuple& RefPlaneNormal, const HTuple& CamRoll, HTuple* CamPose);

LIntExport Herror convert_point_3d_spher_to_cart(const HTuple& Longitude, const HTuple& Latitude, const HTuple& Radius, const HTuple& EquatPlaneNormal, const HTuple& ZeroMeridian, HTuple* X, HTuple* Y, HTuple* Z);

LIntExport Herror convert_point_3d_cart_to_spher(const HTuple& X, const HTuple& Y, const HTuple& Z, const HTuple& EquatPlaneNormal, const HTuple& ZeroMeridian, HTuple* Longitude, HTuple* Latitude, HTuple* Radius);

LIntExport Herror clear_all_shape_model_3d();

LIntExport Herror clear_shape_model_3d(const HTuple& ShapeModel3DID);

LIntExport Herror deserialize_shape_model_3d(const HTuple& SerializedItemHandle, HTuple* ShapeModel3DID);

LIntExport Herror serialize_shape_model_3d(const HTuple& ShapeModel3DID, HTuple* SerializedItemHandle);

LIntExport Herror read_shape_model_3d(const HTuple& FileName, HTuple* ShapeModel3DID);

LIntExport Herror write_shape_model_3d(const HTuple& ShapeModel3DID, const HTuple& FileName);

LIntExport Herror trans_pose_shape_model_3d(const HTuple& ShapeModel3DID, const HTuple& PoseIn, const HTuple& Transformation, HTuple* PoseOut);

LIntExport Herror project_shape_model_3d(HObject* ModelContours, const HTuple& ShapeModel3DID, const HTuple& CamParam, const HTuple& Pose, const HTuple& HiddenSurfaceRemoval, const HTuple& MinFaceAngle);

LIntExport Herror get_shape_model_3d_contours(HObject* ModelContours, const HTuple& ShapeModel3DID, const HTuple& Level, const HTuple& View, HTuple* ViewPose);

LIntExport Herror get_shape_model_3d_params(const HTuple& ShapeModel3DID, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror find_shape_model_3d(const HObject& Image, const HTuple& ShapeModel3DID, const HTuple& MinScore, const HTuple& Greediness, const HTuple& NumLevels, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* Pose, HTuple* CovPose, HTuple* Score);

LIntExport Herror create_shape_model_3d(const HTuple& ObjectModel3D, const HTuple& CamParam, const HTuple& RefRotX, const HTuple& RefRotY, const HTuple& RefRotZ, const HTuple& OrderOfRotation, const HTuple& LongitudeMin, const HTuple& LongitudeMax, const HTuple& LatitudeMin, const HTuple& LatitudeMax, const HTuple& CamRollMin, const HTuple& CamRollMax, const HTuple& DistMin, const HTuple& DistMax, const HTuple& MinContrast, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ShapeModel3DID);

LIntExport Herror simplify_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Method, const HTuple& Amount, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* SimplifiedObjectModel3D);

LIntExport Herror distance_object_model_3d(const HTuple& ObjectModel3DFrom, const HTuple& ObjectModel3DTo, const HTuple& Pose, const HTuple& MaxDistance, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror union_object_model_3d(const HTuple& ObjectModels3D, const HTuple& Method, HTuple* UnionObjectModel3D);

LIntExport Herror set_object_model_3d_attrib_mod(const HTuple& ObjectModel3D, const HTuple& AttribName, const HTuple& AttachExtAttribTo, const HTuple& AttribValues);

LIntExport Herror set_object_model_3d_attrib(const HTuple& ObjectModel3D, const HTuple& AttribName, const HTuple& AttachExtAttribTo, const HTuple& AttribValues, HTuple* ObjectModel3DOut);

LIntExport Herror gen_empty_object_model_3d(HTuple* EmptyObjectModel3D);

LIntExport Herror sample_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Method, const HTuple& SampleDistance, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* SampledObjectModel3D);

LIntExport Herror register_object_model_3d_global(const HTuple& ObjectModels3D, const HTuple& HomMats3D, const HTuple& From, const HTuple& To, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* HomMats3DOut, HTuple* Scores);

LIntExport Herror register_object_model_3d_pair(const HTuple& ObjectModel3D1, const HTuple& ObjectModel3D2, const HTuple& Method, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* Pose, HTuple* Score);

LIntExport Herror gen_object_model_3d_from_points(const HTuple& X, const HTuple& Y, const HTuple& Z, HTuple* ObjectModel3D);

LIntExport Herror gen_box_object_model_3d(const HTuple& Pose, const HTuple& LengthX, const HTuple& LengthY, const HTuple& LengthZ, HTuple* ObjectModel3D);

LIntExport Herror gen_plane_object_model_3d(const HTuple& Pose, const HTuple& XExtent, const HTuple& YExtent, HTuple* ObjectModel3D);

LIntExport Herror gen_sphere_object_model_3d_center(const HTuple& X, const HTuple& Y, const HTuple& Z, const HTuple& Radius, HTuple* ObjectModel3D);

LIntExport Herror gen_sphere_object_model_3d(const HTuple& Pose, const HTuple& Radius, HTuple* ObjectModel3D);

LIntExport Herror gen_cylinder_object_model_3d(const HTuple& Pose, const HTuple& Radius, const HTuple& MinExtent, const HTuple& MaxExtent, HTuple* ObjectModel3D);

LIntExport Herror smallest_bounding_box_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Type, HTuple* Pose, HTuple* Length1, HTuple* Length2, HTuple* Length3);

LIntExport Herror smallest_sphere_object_model_3d(const HTuple& ObjectModel3D, HTuple* CenterPoint, HTuple* Radius);

LIntExport Herror intersect_plane_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Plane, HTuple* ObjectModel3DIntersection);

LIntExport Herror convex_hull_object_model_3d(const HTuple& ObjectModel3D, HTuple* ObjectModel3DConvexHull);

LIntExport Herror select_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Feature, const HTuple& Operation, const HTuple& MinValue, const HTuple& MaxValue, HTuple* ObjectModel3DSelected);

LIntExport Herror area_object_model_3d(const HTuple& ObjectModel3D, HTuple* Area);

LIntExport Herror max_diameter_object_model_3d(const HTuple& ObjectModel3D, HTuple* Diameter);

LIntExport Herror moments_object_model_3d(const HTuple& ObjectModel3D, const HTuple& MomentsToCalculate, HTuple* Moments);

LIntExport Herror volume_object_model_3d_relative_to_plane(const HTuple& ObjectModel3D, const HTuple& Plane, const HTuple& Mode, const HTuple& UseFaceOrientation, HTuple* Volume);

LIntExport Herror reduce_object_model_3d_by_view(const HObject& Region, const HTuple& ObjectModel3D, const HTuple& CamParam, const HTuple& Pose, HTuple* ObjectModel3DReduced);

LIntExport Herror connection_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Feature, const HTuple& Value, HTuple* ObjectModel3DConnected);

LIntExport Herror select_points_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Attrib, const HTuple& MinValue, const HTuple& MaxValue, HTuple* ObjectModel3DThresholded);

LIntExport Herror get_disp_object_model_3d_info(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, const HTuple& Information, HTuple* Value);

LIntExport Herror render_object_model_3d(HObject* Image, const HTuple& ObjectModel3D, const HTuple& CamParam, const HTuple& Pose, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror disp_object_model_3d(const HTuple& WindowHandle, const HTuple& ObjectModel3D, const HTuple& CamParam, const HTuple& Pose, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror copy_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Attributes, HTuple* CopiedObjectModel3D);

LIntExport Herror prepare_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Purpose, const HTuple& OverwriteData, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror object_model_3d_to_xyz(HObject* X, HObject* Y, HObject* Z, const HTuple& ObjectModel3D, const HTuple& Type, const HTuple& CamParam, const HTuple& Pose);

LIntExport Herror xyz_to_object_model_3d(const HObject& X, const HObject& Y, const HObject& Z, HTuple* ObjectModel3D);

LIntExport Herror get_object_model_3d_params(const HTuple& ObjectModel3D, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror project_object_model_3d(HObject* ModelContours, const HTuple& ObjectModel3D, const HTuple& CamParam, const HTuple& Pose, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror rigid_trans_object_model_3d(const HTuple& ObjectModel3D, const HTuple& Pose, HTuple* ObjectModel3DRigidTrans);

LIntExport Herror projective_trans_object_model_3d(const HTuple& ObjectModel3D, const HTuple& HomMat3D, HTuple* ObjectModel3DProjectiveTrans);

LIntExport Herror affine_trans_object_model_3d(const HTuple& ObjectModel3D, const HTuple& HomMat3D, HTuple* ObjectModel3DAffineTrans);

LIntExport Herror clear_all_object_model_3d();

LIntExport Herror clear_object_model_3d(const HTuple& ObjectModel3D);

LIntExport Herror serialize_object_model_3d(const HTuple& ObjectModel3D, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_object_model_3d(const HTuple& SerializedItemHandle, HTuple* ObjectModel3D);

LIntExport Herror write_object_model_3d(const HTuple& ObjectModel3D, const HTuple& FileType, const HTuple& FileName, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror read_object_model_3d(const HTuple& FileName, const HTuple& Scale, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* ObjectModel3D, HTuple* Status);

LIntExport Herror read_object_model_3d_dxf(const HTuple& FileName, const HTuple& Scale, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ObjectModel3D, HTuple* DxfStatus);

LIntExport Herror read_kalman(const HTuple& FileName, HTuple* Dimension, HTuple* Model, HTuple* Measurement, HTuple* Prediction);

LIntExport Herror update_kalman(const HTuple& FileName, const HTuple& DimensionIn, const HTuple& ModelIn, const HTuple& MeasurementIn, HTuple* DimensionOut, HTuple* ModelOut, HTuple* MeasurementOut);

LIntExport Herror filter_kalman(const HTuple& Dimension, const HTuple& Model, const HTuple& Measurement, const HTuple& PredictionIn, HTuple* PredictionOut, HTuple* Estimate);

LIntExport Herror query_operator_info(HTuple* Slots);

LIntExport Herror query_param_info(HTuple* Slots);

LIntExport Herror get_operator_name(const HTuple& Pattern, HTuple* OperatorNames);

LIntExport Herror get_param_types(const HTuple& OperatorName, HTuple* InpCtrlParType, HTuple* OutpCtrlParType);

LIntExport Herror get_param_num(const HTuple& OperatorName, HTuple* CName, HTuple* InpObjPar, HTuple* OutpObjPar, HTuple* InpCtrlPar, HTuple* OutpCtrlPar, HTuple* Type);

LIntExport Herror get_param_names(const HTuple& OperatorName, HTuple* InpObjPar, HTuple* OutpObjPar, HTuple* InpCtrlPar, HTuple* OutpCtrlPar);

LIntExport Herror get_operator_info(const HTuple& OperatorName, const HTuple& Slot, HTuple* Information);

LIntExport Herror get_param_info(const HTuple& OperatorName, const HTuple& ParamName, const HTuple& Slot, HTuple* Information);

LIntExport Herror search_operator(const HTuple& Keyword, HTuple* OperatorNames);

LIntExport Herror get_keywords(const HTuple& OperatorName, HTuple* Keywords);

LIntExport Herror get_chapter_info(const HTuple& Chapter, HTuple* Info);

LIntExport Herror channels_to_image(const HObject& Images, HObject* MultiChannelImage);

LIntExport Herror image_to_channels(const HObject& MultiChannelImage, HObject* Images);

LIntExport Herror compose7(const HObject& Image1, const HObject& Image2, const HObject& Image3, const HObject& Image4, const HObject& Image5, const HObject& Image6, const HObject& Image7, HObject* MultiChannelImage);

LIntExport Herror compose6(const HObject& Image1, const HObject& Image2, const HObject& Image3, const HObject& Image4, const HObject& Image5, const HObject& Image6, HObject* MultiChannelImage);

LIntExport Herror compose5(const HObject& Image1, const HObject& Image2, const HObject& Image3, const HObject& Image4, const HObject& Image5, HObject* MultiChannelImage);

LIntExport Herror compose4(const HObject& Image1, const HObject& Image2, const HObject& Image3, const HObject& Image4, HObject* MultiChannelImage);

LIntExport Herror compose3(const HObject& Image1, const HObject& Image2, const HObject& Image3, HObject* MultiChannelImage);

LIntExport Herror compose2(const HObject& Image1, const HObject& Image2, HObject* MultiChannelImage);

LIntExport Herror decompose7(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2, HObject* Image3, HObject* Image4, HObject* Image5, HObject* Image6, HObject* Image7);

LIntExport Herror decompose6(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2, HObject* Image3, HObject* Image4, HObject* Image5, HObject* Image6);

LIntExport Herror decompose5(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2, HObject* Image3, HObject* Image4, HObject* Image5);

LIntExport Herror decompose4(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2, HObject* Image3, HObject* Image4);

LIntExport Herror decompose3(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2, HObject* Image3);

LIntExport Herror decompose2(const HObject& MultiChannelImage, HObject* Image1, HObject* Image2);

LIntExport Herror count_channels(const HObject& MultiChannelImage, HTuple* Channels);

LIntExport Herror append_channel(const HObject& MultiChannelImage, const HObject& Image, HObject* ImageExtended);

LIntExport Herror access_channel(const HObject& MultiChannelImage, HObject* Image, const HTuple& Channel);

LIntExport Herror tile_images_offset(const HObject& Images, HObject* TiledImage, const HTuple& OffsetRow, const HTuple& OffsetCol, const HTuple& Row1, const HTuple& Col1, const HTuple& Row2, const HTuple& Col2, const HTuple& Width, const HTuple& Height);

LIntExport Herror tile_images(const HObject& Images, HObject* TiledImage, const HTuple& NumColumns, const HTuple& TileOrder);

LIntExport Herror tile_channels(const HObject& Image, HObject* TiledImage, const HTuple& NumColumns, const HTuple& TileOrder);

LIntExport Herror crop_domain(const HObject& Image, HObject* ImagePart);

LIntExport Herror crop_rectangle1(const HObject& Image, HObject* ImagePart, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror crop_part(const HObject& Image, HObject* ImagePart, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror change_format(const HObject& Image, HObject* ImagePart, const HTuple& Width, const HTuple& Height);

LIntExport Herror change_domain(const HObject& Image, const HObject& NewDomain, HObject* ImageNew);

LIntExport Herror add_channels(const HObject& Regions, const HObject& Image, HObject* GrayRegions);

LIntExport Herror rectangle1_domain(const HObject& Image, HObject* ImageReduced, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror reduce_domain(const HObject& Image, const HObject& Region, HObject* ImageReduced);

LIntExport Herror full_domain(const HObject& Image, HObject* ImageFull);

LIntExport Herror get_domain(const HObject& Image, HObject* Domain);

LIntExport Herror hough_circles(const HObject& RegionIn, HObject* RegionOut, const HTuple& Radius, const HTuple& Percent, const HTuple& Mode);

LIntExport Herror hough_circle_trans(const HObject& Region, HObject* HoughImage, const HTuple& Radius);

LIntExport Herror hough_lines_dir(const HObject& ImageDir, HObject* HoughImage, HObject* Lines, const HTuple& DirectionUncertainty, const HTuple& AngleResolution, const HTuple& Smoothing, const HTuple& FilterSize, const HTuple& Threshold, const HTuple& AngleGap, const HTuple& DistGap, const HTuple& GenLines, HTuple* Angle, HTuple* Dist);

LIntExport Herror hough_line_trans_dir(const HObject& ImageDir, HObject* HoughImage, const HTuple& DirectionUncertainty, const HTuple& AngleResolution);

LIntExport Herror hough_lines(const HObject& RegionIn, const HTuple& AngleResolution, const HTuple& Threshold, const HTuple& AngleGap, const HTuple& DistGap, HTuple* Angle, HTuple* Dist);

LIntExport Herror hough_line_trans(const HObject& Region, HObject* HoughImage, const HTuple& AngleResolution);

LIntExport Herror select_matching_lines(const HObject& RegionIn, HObject* RegionLines, const HTuple& AngleIn, const HTuple& DistIn, const HTuple& LineWidth, const HTuple& Thresh, HTuple* AngleOut, HTuple* DistOut);

LIntExport Herror find_rectification_grid(const HObject& Image, HObject* GridRegion, const HTuple& MinContrast, const HTuple& Radius);

LIntExport Herror create_rectification_grid(const HTuple& Width, const HTuple& NumSquares, const HTuple& GridFile);

LIntExport Herror connect_grid_points(const HObject& Image, HObject* ConnectingLines, const HTuple& Row, const HTuple& Column, const HTuple& Sigma, const HTuple& MaxDist);

LIntExport Herror gen_grid_rectification_map(const HObject& Image, const HObject& ConnectingLines, HObject* Map, HObject* Meshes, const HTuple& GridSpacing, const HTuple& Rotation, const HTuple& Row, const HTuple& Column, const HTuple& MapType);

LIntExport Herror gen_arbitrary_distortion_map(HObject* Map, const HTuple& GridSpacing, const HTuple& Row, const HTuple& Column, const HTuple& GridWidth, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& MapType);

LIntExport Herror get_window_background_image(HObject* BackgroundImage, const HTuple& WindowHandle);

LIntExport Herror set_drawing_object_callback(const HTuple& DrawID, const HTuple& DrawObjectEvent, const HTuple& CallbackFunction);

LIntExport Herror detach_background_from_window(const HTuple& WindowHandle);

LIntExport Herror attach_background_to_window(const HObject& Image, const HTuple& WindowHandle);

LIntExport Herror detach_drawing_object_from_window(const HTuple& WindowHandle, const HTuple& DrawID);

LIntExport Herror attach_drawing_object_to_window(const HTuple& WindowHandle, const HTuple& DrawID);

LIntExport Herror update_window_pose(const HTuple& WindowHandle, const HTuple& LastRow, const HTuple& LastCol, const HTuple& CurrentRow, const HTuple& CurrentCol, const HTuple& Mode);

LIntExport Herror unproject_coordinates(const HObject& Image, const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, HTuple* ImageRow, HTuple* ImageColumn, HTuple* Height);

LIntExport Herror get_os_window_handle(const HTuple& WindowHandle, HTuple* OSWindowHandle, HTuple* OSDisplayHandle);

LIntExport Herror set_window_dc(const HTuple& WindowHandle, const HTuple& WINHDC);

LIntExport Herror new_extern_window(const HTuple& WINHWnd, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height, HTuple* WindowHandle);

LIntExport Herror slide_image(const HTuple& WindowHandleSource1, const HTuple& WindowHandleSource2, const HTuple& WindowHandle);

LIntExport Herror set_window_type(const HTuple& WindowType);

LIntExport Herror set_window_extents(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror get_window_attr(const HTuple& AttributeName, HTuple* AttributeValue);

LIntExport Herror set_window_attr(const HTuple& AttributeName, const HTuple& AttributeValue);

LIntExport Herror query_window_type(HTuple* WindowTypes);

LIntExport Herror open_window(const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height, const HTuple& FatherWindow, const HTuple& Mode, const HTuple& Machine, HTuple* WindowHandle);

LIntExport Herror open_textwindow(const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height, const HTuple& BorderWidth, const HTuple& BorderColor, const HTuple& BackgroundColor, const HTuple& FatherWindow, const HTuple& Mode, const HTuple& Machine, HTuple* WindowHandle);

LIntExport Herror move_rectangle(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, const HTuple& DestRow, const HTuple& DestColumn);

LIntExport Herror get_window_type(const HTuple& WindowHandle, HTuple* WindowType);

LIntExport Herror get_window_pointer3(const HTuple& WindowHandle, HTuple* ImageRed, HTuple* ImageGreen, HTuple* ImageBlue, HTuple* Width, HTuple* Height);

LIntExport Herror get_window_extents(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Width, HTuple* Height);

LIntExport Herror dump_window_image(HObject* Image, const HTuple& WindowHandle);

LIntExport Herror dump_window(const HTuple& WindowHandle, const HTuple& Device, const HTuple& FileName);

LIntExport Herror copy_rectangle(const HTuple& WindowHandleSource, const HTuple& WindowHandleDestination, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, const HTuple& DestRow, const HTuple& DestColumn);

LIntExport Herror close_window(const HTuple& WindowHandle);

LIntExport Herror clear_window(const HTuple& WindowHandle);

LIntExport Herror clear_rectangle(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror write_string(const HTuple& WindowHandle, const HTuple& String);

LIntExport Herror set_tshape(const HTuple& WindowHandle, const HTuple& TextCursor);

LIntExport Herror set_tposition(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column);

LIntExport Herror read_string(const HTuple& WindowHandle, const HTuple& InString, const HTuple& Length, HTuple* OutString);

LIntExport Herror read_char(const HTuple& WindowHandle, HTuple* Char, HTuple* Code);

LIntExport Herror new_line(const HTuple& WindowHandle);

LIntExport Herror get_tshape(const HTuple& WindowHandle, HTuple* TextCursor);

LIntExport Herror get_tposition(const HTuple& WindowHandle, HTuple* Row, HTuple* Column);

LIntExport Herror get_font_extents(const HTuple& WindowHandle, HTuple* MaxAscent, HTuple* MaxDescent, HTuple* MaxWidth, HTuple* MaxHeight);

LIntExport Herror get_string_extents(const HTuple& WindowHandle, const HTuple& Values, HTuple* Ascent, HTuple* Descent, HTuple* Width, HTuple* Height);

LIntExport Herror query_font(const HTuple& WindowHandle, HTuple* Font);

LIntExport Herror query_tshape(const HTuple& WindowHandle, HTuple* TextCursor);

LIntExport Herror set_font(const HTuple& WindowHandle, const HTuple& Font);

LIntExport Herror get_font(const HTuple& WindowHandle, HTuple* Font);

LIntExport Herror get_display_scene_3d_info(const HTuple& WindowHandle, const HTuple& Scene3D, const HTuple& Row, const HTuple& Column, const HTuple& Information, HTuple* Value);

LIntExport Herror set_scene_3d_to_world_pose(const HTuple& Scene3D, const HTuple& ToWorldPose);

LIntExport Herror set_scene_3d_param(const HTuple& Scene3D, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror set_scene_3d_light_param(const HTuple& Scene3D, const HTuple& LightIndex, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror set_scene_3d_instance_pose(const HTuple& Scene3D, const HTuple& InstanceIndex, const HTuple& Pose);

LIntExport Herror set_scene_3d_instance_param(const HTuple& Scene3D, const HTuple& InstanceIndex, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror set_scene_3d_camera_pose(const HTuple& Scene3D, const HTuple& CameraIndex, const HTuple& Pose);

LIntExport Herror render_scene_3d(HObject* Image, const HTuple& Scene3D, const HTuple& CameraIndex);

LIntExport Herror remove_scene_3d_light(const HTuple& Scene3D, const HTuple& LightIndex);

LIntExport Herror remove_scene_3d_instance(const HTuple& Scene3D, const HTuple& InstanceIndex);

LIntExport Herror remove_scene_3d_camera(const HTuple& Scene3D, const HTuple& CameraIndex);

LIntExport Herror display_scene_3d(const HTuple& WindowHandle, const HTuple& Scene3D, const HTuple& CameraIndex);

LIntExport Herror add_scene_3d_light(const HTuple& Scene3D, const HTuple& LightPosition, const HTuple& LightKind, HTuple* LightIndex);

LIntExport Herror add_scene_3d_instance(const HTuple& Scene3D, const HTuple& ObjectModel3D, const HTuple& Pose, HTuple* InstanceIndex);

LIntExport Herror add_scene_3d_camera(const HTuple& Scene3D, const HTuple& CameraParam, HTuple* CameraIndex);

LIntExport Herror clear_scene_3d(const HTuple& Scene3D);

LIntExport Herror create_scene_3d(HTuple* Scene3D);

LIntExport Herror get_window_param(const HTuple& WindowHandle, const HTuple& Param, HTuple* Value);

LIntExport Herror set_window_param(const HTuple& WindowHandle, const HTuple& Param, const HTuple& Value);

LIntExport Herror set_shape(const HTuple& WindowHandle, const HTuple& Shape);

LIntExport Herror set_rgb(const HTuple& WindowHandle, const HTuple& Red, const HTuple& Green, const HTuple& Blue);

LIntExport Herror set_pixel(const HTuple& WindowHandle, const HTuple& Pixel);

LIntExport Herror set_part_style(const HTuple& WindowHandle, const HTuple& Style);

LIntExport Herror set_part(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror set_paint(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror set_line_width(const HTuple& WindowHandle, const HTuple& Width);

LIntExport Herror set_line_style(const HTuple& WindowHandle, const HTuple& Style);

LIntExport Herror set_line_approx(const HTuple& WindowHandle, const HTuple& Approximation);

LIntExport Herror set_insert(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror set_hsi(const HTuple& WindowHandle, const HTuple& Hue, const HTuple& Saturation, const HTuple& Intensity);

LIntExport Herror set_gray(const HTuple& WindowHandle, const HTuple& GrayValues);

LIntExport Herror set_draw(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror set_comprise(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror set_colored(const HTuple& WindowHandle, const HTuple& NumberOfColors);

LIntExport Herror set_color(const HTuple& WindowHandle, const HTuple& Color);

LIntExport Herror get_shape(const HTuple& WindowHandle, HTuple* DisplayShape);

LIntExport Herror get_rgb(const HTuple& WindowHandle, HTuple* Red, HTuple* Green, HTuple* Blue);

LIntExport Herror get_pixel(const HTuple& WindowHandle, HTuple* Pixel);

LIntExport Herror get_part_style(const HTuple& WindowHandle, HTuple* Style);

LIntExport Herror get_part(const HTuple& WindowHandle, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror get_paint(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror get_line_width(const HTuple& WindowHandle, HTuple* Width);

LIntExport Herror get_line_style(const HTuple& WindowHandle, HTuple* Style);

LIntExport Herror get_line_approx(const HTuple& WindowHandle, HTuple* Approximation);

LIntExport Herror get_insert(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror get_hsi(const HTuple& WindowHandle, HTuple* Hue, HTuple* Saturation, HTuple* Intensity);

LIntExport Herror get_draw(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror get_comprise(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror query_shape(HTuple* DisplayShape);

LIntExport Herror query_paint(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror query_line_width(HTuple* Min, HTuple* Max);

LIntExport Herror query_insert(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror query_gray(const HTuple& WindowHandle, HTuple* Grayval);

LIntExport Herror query_colored(HTuple* PossibleNumberOfColors);

LIntExport Herror query_all_colors(const HTuple& WindowHandle, HTuple* Colors);

LIntExport Herror query_color(const HTuple& WindowHandle, HTuple* Colors);

LIntExport Herror get_icon(HObject* Icon, const HTuple& WindowHandle);

LIntExport Herror set_icon(const HObject& Icon, const HTuple& WindowHandle);

LIntExport Herror disp_region(const HObject& DispRegions, const HTuple& WindowHandle);

LIntExport Herror disp_rectangle2(const HTuple& WindowHandle, const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2);

LIntExport Herror disp_rectangle1(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror disp_polygon(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column);

LIntExport Herror disp_line(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2);

LIntExport Herror disp_cross(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, const HTuple& Size, const HTuple& Angle);

LIntExport Herror disp_image(const HObject& Image, const HTuple& WindowHandle);

LIntExport Herror disp_channel(const HObject& MultichannelImage, const HTuple& WindowHandle, const HTuple& Channel);

LIntExport Herror disp_color(const HObject& ColorImage, const HTuple& WindowHandle);

LIntExport Herror disp_ellipse(const HTuple& WindowHandle, const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2);

LIntExport Herror disp_distribution(const HTuple& WindowHandle, const HTuple& Distribution, const HTuple& Row, const HTuple& Column, const HTuple& Scale);

LIntExport Herror disp_circle(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, const HTuple& Radius);

LIntExport Herror disp_arrow(const HTuple& WindowHandle, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, const HTuple& Size);

LIntExport Herror disp_arc(const HTuple& WindowHandle, const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& Angle, const HTuple& BeginRow, const HTuple& BeginCol);

LIntExport Herror disp_obj(const HObject& Object, const HTuple& WindowHandle);

LIntExport Herror set_mshape(const HTuple& WindowHandle, const HTuple& Cursor);

LIntExport Herror get_mshape(const HTuple& WindowHandle, HTuple* Cursor);

LIntExport Herror query_mshape(const HTuple& WindowHandle, HTuple* ShapeNames);

LIntExport Herror get_mposition_sub_pix(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Button);

LIntExport Herror get_mposition(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Button);

LIntExport Herror get_mbutton_sub_pix(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Button);

LIntExport Herror get_mbutton(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Button);

LIntExport Herror write_lut(const HTuple& WindowHandle, const HTuple& FileName);

LIntExport Herror disp_lut(const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column, const HTuple& Scale);

LIntExport Herror query_lut(const HTuple& WindowHandle, HTuple* LookUpTable);

LIntExport Herror draw_lut(const HTuple& WindowHandle);

LIntExport Herror get_lut_style(const HTuple& WindowHandle, HTuple* Hue, HTuple* Saturation, HTuple* Intensity);

LIntExport Herror set_lut_style(const HTuple& WindowHandle, const HTuple& Hue, const HTuple& Saturation, const HTuple& Intensity);

LIntExport Herror get_lut(const HTuple& WindowHandle, HTuple* LookUpTable);

LIntExport Herror set_lut(const HTuple& WindowHandle, const HTuple& LookUpTable);

LIntExport Herror get_fix(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror set_fix(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror get_fixed_lut(const HTuple& WindowHandle, HTuple* Mode);

LIntExport Herror set_fixed_lut(const HTuple& WindowHandle, const HTuple& Mode);

LIntExport Herror gnuplot_plot_funct_1d(const HTuple& GnuplotFileID, const HTuple& Function);

LIntExport Herror gnuplot_plot_ctrl(const HTuple& GnuplotFileID, const HTuple& Values);

LIntExport Herror gnuplot_plot_image(const HObject& Image, const HTuple& GnuplotFileID, const HTuple& SamplesX, const HTuple& SamplesY, const HTuple& ViewRotX, const HTuple& ViewRotZ, const HTuple& Hidden3D);

LIntExport Herror gnuplot_close(const HTuple& GnuplotFileID);

LIntExport Herror gnuplot_open_file(const HTuple& FileName, HTuple* GnuplotFileID);

LIntExport Herror gnuplot_open_pipe(HTuple* GnuplotFileID);

LIntExport Herror create_drawing_object_text(const HTuple& Row, const HTuple& Column, const HTuple& String, HTuple* DrawID);

LIntExport Herror get_drawing_object_iconic(HObject* Object, const HTuple& DrawID);

LIntExport Herror clear_drawing_object(const HTuple& DrawID);

LIntExport Herror set_drawing_object_params(const HTuple& DrawID, const HTuple& ParamNames, const HTuple& ParamValues);

LIntExport Herror get_drawing_object_params(const HTuple& DrawID, const HTuple& ParamNames, HTuple* ParamValues);

LIntExport Herror set_drawing_object_xld(const HObject& Contour, const HTuple& DrawID);

LIntExport Herror create_drawing_object_xld(const HTuple& Row, const HTuple& Column, HTuple* DrawID);

LIntExport Herror create_drawing_object_circle_sector(const HTuple& Row, const HTuple& Column, const HTuple& Radius, const HTuple& StartAngle, const HTuple& EndAngle, HTuple* DrawID);

LIntExport Herror create_drawing_object_ellipse_sector(const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, const HTuple& StartAngle, const HTuple& EndAngle, HTuple* DrawID);

LIntExport Herror create_drawing_object_line(const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DrawID);

LIntExport Herror create_drawing_object_circle(const HTuple& Row, const HTuple& Column, const HTuple& Radius, HTuple* DrawID);

LIntExport Herror create_drawing_object_ellipse(const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, HTuple* DrawID);

LIntExport Herror create_drawing_object_rectangle2(const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2, HTuple* DrawID);

LIntExport Herror create_drawing_object_rectangle1(const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DrawID);

LIntExport Herror drag_region3(const HObject& SourceRegion, const HObject& MaskRegion, HObject* DestinationRegion, const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column);

LIntExport Herror drag_region2(const HObject& SourceRegion, HObject* DestinationRegion, const HTuple& WindowHandle, const HTuple& Row, const HTuple& Column);

LIntExport Herror drag_region1(const HObject& SourceRegion, HObject* DestinationRegion, const HTuple& WindowHandle);

LIntExport Herror draw_nurbs_interp_mod(HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio, const HTuple& Edit, const HTuple& Degree, const HTuple& RowsIn, const HTuple& ColsIn, const HTuple& TangentsIn, HTuple* ControlRows, HTuple* ControlCols, HTuple* Knots, HTuple* Rows, HTuple* Cols, HTuple* Tangents);

LIntExport Herror draw_nurbs_interp(HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio, const HTuple& Degree, HTuple* ControlRows, HTuple* ControlCols, HTuple* Knots, HTuple* Rows, HTuple* Cols, HTuple* Tangents);

LIntExport Herror draw_nurbs_mod(HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio, const HTuple& Edit, const HTuple& Degree, const HTuple& RowsIn, const HTuple& ColsIn, const HTuple& WeightsIn, HTuple* Rows, HTuple* Cols, HTuple* Weights);

LIntExport Herror draw_nurbs(HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio, const HTuple& Degree, HTuple* Rows, HTuple* Cols, HTuple* Weights);

LIntExport Herror draw_xld_mod(const HObject& ContIn, HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio, const HTuple& Edit);

LIntExport Herror draw_xld(HObject* ContOut, const HTuple& WindowHandle, const HTuple& Rotate, const HTuple& Move, const HTuple& Scale, const HTuple& KeepRatio);

LIntExport Herror draw_rectangle2_mod(const HTuple& WindowHandle, const HTuple& RowIn, const HTuple& ColumnIn, const HTuple& PhiIn, const HTuple& Length1In, const HTuple& Length2In, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2);

LIntExport Herror draw_rectangle2(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2);

LIntExport Herror draw_rectangle1_mod(const HTuple& WindowHandle, const HTuple& Row1In, const HTuple& Column1In, const HTuple& Row2In, const HTuple& Column2In, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror draw_rectangle1(const HTuple& WindowHandle, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror draw_point_mod(const HTuple& WindowHandle, const HTuple& RowIn, const HTuple& ColumnIn, HTuple* Row, HTuple* Column);

LIntExport Herror draw_point(const HTuple& WindowHandle, HTuple* Row, HTuple* Column);

LIntExport Herror draw_line_mod(const HTuple& WindowHandle, const HTuple& Row1In, const HTuple& Column1In, const HTuple& Row2In, const HTuple& Column2In, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror draw_line(const HTuple& WindowHandle, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror draw_ellipse_mod(const HTuple& WindowHandle, const HTuple& RowIn, const HTuple& ColumnIn, const HTuple& PhiIn, const HTuple& Radius1In, const HTuple& Radius2In, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Radius1, HTuple* Radius2);

LIntExport Herror draw_ellipse(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Radius1, HTuple* Radius2);

LIntExport Herror draw_circle_mod(const HTuple& WindowHandle, const HTuple& RowIn, const HTuple& ColumnIn, const HTuple& RadiusIn, HTuple* Row, HTuple* Column, HTuple* Radius);

LIntExport Herror draw_circle(const HTuple& WindowHandle, HTuple* Row, HTuple* Column, HTuple* Radius);

LIntExport Herror draw_region(HObject* Region, const HTuple& WindowHandle);

LIntExport Herror draw_polygon(HObject* PolygonRegion, const HTuple& WindowHandle);

LIntExport Herror projection_pl(const HTuple& Row, const HTuple& Column, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* RowProj, HTuple* ColProj);

LIntExport Herror get_points_ellipse(const HTuple& Angle, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Radius1, const HTuple& Radius2, HTuple* RowPoint, HTuple* ColPoint);

LIntExport Herror intersection_ll(const HTuple& RowA1, const HTuple& ColumnA1, const HTuple& RowA2, const HTuple& ColumnA2, const HTuple& RowB1, const HTuple& ColumnB1, const HTuple& RowB2, const HTuple& ColumnB2, HTuple* Row, HTuple* Column, HTuple* IsParallel);

LIntExport Herror intersection_contours_xld(const HObject& Contour1, const HObject& Contour2, const HTuple& IntersectionType, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_circle_contour_xld(const HObject& Contour, const HTuple& CircleRow, const HTuple& CircleColumn, const HTuple& CircleRadius, const HTuple& CircleStartPhi, const HTuple& CircleEndPhi, const HTuple& CirclePointOrder, HTuple* Row, HTuple* Column);

LIntExport Herror intersection_circles(const HTuple& Circle1Row, const HTuple& Circle1Column, const HTuple& Circle1Radius, const HTuple& Circle1StartPhi, const HTuple& Circle1EndPhi, const HTuple& Circle1PointOrder, const HTuple& Circle2Row, const HTuple& Circle2Column, const HTuple& Circle2Radius, const HTuple& Circle2StartPhi, const HTuple& Circle2EndPhi, const HTuple& Circle2PointOrder, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_line_contour_xld(const HObject& Contour, const HTuple& LineRow1, const HTuple& LineColumn1, const HTuple& LineRow2, const HTuple& LineColumn2, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_line_circle(const HTuple& LineRow1, const HTuple& LineColumn1, const HTuple& LineRow2, const HTuple& LineColumn2, const HTuple& CircleRow, const HTuple& CircleColumn, const HTuple& CircleRadius, const HTuple& CircleStartPhi, const HTuple& CircleEndPhi, const HTuple& CirclePointOrder, HTuple* Row, HTuple* Column);

LIntExport Herror intersection_lines(const HTuple& Line1Row1, const HTuple& Line1Column1, const HTuple& Line1Row2, const HTuple& Line1Column2, const HTuple& Line2Row1, const HTuple& Line2Column1, const HTuple& Line2Row2, const HTuple& Line2Column2, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_segment_contour_xld(const HObject& Contour, const HTuple& SegmentRow1, const HTuple& SegmentColumn1, const HTuple& SegmentRow2, const HTuple& SegmentColumn2, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_segment_circle(const HTuple& SegmentRow1, const HTuple& SegmentColumn1, const HTuple& SegmentRow2, const HTuple& SegmentColumn2, const HTuple& CircleRow, const HTuple& CircleColumn, const HTuple& CircleRadius, const HTuple& CircleStartPhi, const HTuple& CircleEndPhi, const HTuple& CirclePointOrder, HTuple* Row, HTuple* Column);

LIntExport Herror intersection_segment_line(const HTuple& SegmentRow1, const HTuple& SegmentColumn1, const HTuple& SegmentRow2, const HTuple& SegmentColumn2, const HTuple& LineRow1, const HTuple& LineColumn1, const HTuple& LineRow2, const HTuple& LineColumn2, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror intersection_segments(const HTuple& Segment1Row1, const HTuple& Segment1Column1, const HTuple& Segment1Row2, const HTuple& Segment1Column2, const HTuple& Segment2Row1, const HTuple& Segment2Column1, const HTuple& Segment2Row2, const HTuple& Segment2Column2, HTuple* Row, HTuple* Column, HTuple* IsOverlapping);

LIntExport Herror clear_distance_transform_xld(const HTuple& DistanceTransformID);

LIntExport Herror apply_distance_transform_xld(const HObject& Contour, HObject* ContourOut, const HTuple& DistanceTransformID);

LIntExport Herror read_distance_transform_xld(const HTuple& FileName, HTuple* DistanceTransformID);

LIntExport Herror deserialize_distance_transform_xld(const HTuple& SerializedItemHandle, HTuple* DistanceTransformID);

LIntExport Herror serialize_distance_transform_xld(const HTuple& DistanceTransformID, HTuple* SerializedItemHandle);

LIntExport Herror write_distance_transform_xld(const HTuple& DistanceTransformID, const HTuple& FileName);

LIntExport Herror set_distance_transform_xld_param(const HTuple& DistanceTransformID, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror get_distance_transform_xld_param(const HTuple& DistanceTransformID, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror get_distance_transform_xld_contour(HObject* Contour, const HTuple& DistanceTransformID);

LIntExport Herror create_distance_transform_xld(const HObject& Contour, const HTuple& Mode, const HTuple& MaxDistance, HTuple* DistanceTransformID);

LIntExport Herror distance_contours_xld(const HObject& ContourFrom, const HObject& ContourTo, HObject* ContourOut, const HTuple& Mode);

LIntExport Herror distance_cc_min(const HObject& Contour1, const HObject& Contour2, const HTuple& Mode, HTuple* DistanceMin);

LIntExport Herror distance_cc(const HObject& Contour1, const HObject& Contour2, const HTuple& Mode, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_sc(const HObject& Contour, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_lc(const HObject& Contour, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_pc(const HObject& Contour, const HTuple& Row, const HTuple& Column, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_sr(const HObject& Region, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_lr(const HObject& Region, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_pr(const HObject& Region, const HTuple& Row, const HTuple& Column, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror angle_lx(const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* Angle);

LIntExport Herror angle_ll(const HTuple& RowA1, const HTuple& ColumnA1, const HTuple& RowA2, const HTuple& ColumnA2, const HTuple& RowB1, const HTuple& ColumnB1, const HTuple& RowB2, const HTuple& ColumnB2, HTuple* Angle);

LIntExport Herror distance_sl(const HTuple& RowA1, const HTuple& ColumnA1, const HTuple& RowA2, const HTuple& ColumnA2, const HTuple& RowB1, const HTuple& ColumnB1, const HTuple& RowB2, const HTuple& ColumnB2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_ss(const HTuple& RowA1, const HTuple& ColumnA1, const HTuple& RowA2, const HTuple& ColumnA2, const HTuple& RowB1, const HTuple& ColumnB1, const HTuple& RowB2, const HTuple& ColumnB2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_ps(const HTuple& Row, const HTuple& Column, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* DistanceMin, HTuple* DistanceMax);

LIntExport Herror distance_pl(const HTuple& Row, const HTuple& Column, const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* Distance);

LIntExport Herror distance_pp(const HTuple& Row1, const HTuple& Column1, const HTuple& Row2, const HTuple& Column2, HTuple* Distance);

LIntExport Herror compose_funct_1d(const HTuple& Function1, const HTuple& Function2, const HTuple& Border, HTuple* ComposedFunction);

LIntExport Herror invert_funct_1d(const HTuple& Function, HTuple* InverseFunction);

LIntExport Herror derivate_funct_1d(const HTuple& Function, const HTuple& Mode, HTuple* Derivative);

LIntExport Herror local_min_max_funct_1d(const HTuple& Function, const HTuple& Mode, const HTuple& Interpolation, HTuple* Min, HTuple* Max);

LIntExport Herror zero_crossings_funct_1d(const HTuple& Function, HTuple* ZeroCrossings);

LIntExport Herror scale_y_funct_1d(const HTuple& Function, const HTuple& Mult, const HTuple& Add, HTuple* FunctionScaled);

LIntExport Herror negate_funct_1d(const HTuple& Function, HTuple* FunctionInverted);

LIntExport Herror abs_funct_1d(const HTuple& Function, HTuple* FunctionAbsolute);

LIntExport Herror get_y_value_funct_1d(const HTuple& Function, const HTuple& X, const HTuple& Border, HTuple* Y);

LIntExport Herror get_pair_funct_1d(const HTuple& Function, const HTuple& Index, HTuple* X, HTuple* Y);

LIntExport Herror num_points_funct_1d(const HTuple& Function, HTuple* Length);

LIntExport Herror y_range_funct_1d(const HTuple& Function, HTuple* YMin, HTuple* YMax);

LIntExport Herror x_range_funct_1d(const HTuple& Function, HTuple* XMin, HTuple* XMax);

LIntExport Herror funct_1d_to_pairs(const HTuple& Function, HTuple* XValues, HTuple* YValues);

LIntExport Herror sample_funct_1d(const HTuple& Function, const HTuple& XMin, const HTuple& XMax, const HTuple& XDist, const HTuple& Border, HTuple* SampledFunction);

LIntExport Herror transform_funct_1d(const HTuple& Function, const HTuple& Params, HTuple* TransformedFunction);

LIntExport Herror match_funct_1d_trans(const HTuple& Function1, const HTuple& Function2, const HTuple& Border, const HTuple& ParamsConst, const HTuple& UseParams, HTuple* Params, HTuple* ChiSquare, HTuple* Covar);

LIntExport Herror distance_funct_1d(const HTuple& Function1, const HTuple& Function2, const HTuple& Mode, const HTuple& Sigma, HTuple* Distance);

LIntExport Herror smooth_funct_1d_gauss(const HTuple& Function, const HTuple& Sigma, HTuple* SmoothedFunction);

LIntExport Herror integrate_funct_1d(const HTuple& Function, HTuple* Positive, HTuple* Negative);

LIntExport Herror read_funct_1d(const HTuple& FileName, HTuple* Function);

LIntExport Herror write_funct_1d(const HTuple& Function, const HTuple& FileName);

LIntExport Herror create_funct_1d_array(const HTuple& YValues, HTuple* Function);

LIntExport Herror create_funct_1d_pairs(const HTuple& XValues, const HTuple& YValues, HTuple* Function);

LIntExport Herror smooth_funct_1d_mean(const HTuple& Function, const HTuple& SmoothSize, const HTuple& Iterations, HTuple* SmoothedFunction);

LIntExport Herror match_fourier_coeff(const HTuple& RealCoef1, const HTuple& ImaginaryCoef1, const HTuple& RealCoef2, const HTuple& ImaginaryCoef2, const HTuple& MaxCoef, const HTuple& Damping, HTuple* Distance);

LIntExport Herror fourier_1dim_inv(const HTuple& RealCoef, const HTuple& ImaginaryCoef, const HTuple& MaxCoef, HTuple* Rows, HTuple* Columns);

LIntExport Herror abs_invar_fourier_coeff(const HTuple& RealInvar, const HTuple& ImaginaryInvar, const HTuple& CoefP, const HTuple& CoefQ, const HTuple& AZInvar, HTuple* RealAbsInvar, HTuple* ImaginaryAbsInvar);

LIntExport Herror invar_fourier_coeff(const HTuple& RealCoef, const HTuple& ImaginaryCoef, const HTuple& NormPar, const HTuple& InvarType, HTuple* RealInvar, HTuple* ImaginaryInvar);

LIntExport Herror fourier_1dim(const HTuple& Rows, const HTuple& Columns, const HTuple& ParContour, const HTuple& MaxCoef, HTuple* RealCoef, HTuple* ImaginaryCoef);

LIntExport Herror prep_contour_fourier(const HTuple& Rows, const HTuple& Columns, const HTuple& TransMode, HTuple* ParContour);

LIntExport Herror move_contour_orig(const HTuple& Rows, const HTuple& Columns, HTuple* RowsMoved, HTuple* ColumnsMoved);

LIntExport Herror texture_laws(const HObject& Image, HObject* ImageTexture, const HTuple& FilterTypes, const HTuple& Shift, const HTuple& FilterSize);

LIntExport Herror deviation_image(const HObject& Image, HObject* ImageDeviation, const HTuple& Width, const HTuple& Height);

LIntExport Herror entropy_image(const HObject& Image, HObject* ImageEntropy, const HTuple& Width, const HTuple& Height);

LIntExport Herror isotropic_diffusion(const HObject& Image, HObject* SmoothedImage, const HTuple& Sigma, const HTuple& Iterations);

LIntExport Herror anisotropic_diffusion(const HObject& Image, HObject* ImageAniso, const HTuple& Mode, const HTuple& Contrast, const HTuple& Theta, const HTuple& Iterations);

LIntExport Herror smooth_image(const HObject& Image, HObject* ImageSmooth, const HTuple& Filter, const HTuple& Alpha);

LIntExport Herror sigma_image(const HObject& Image, HObject* ImageSigma, const HTuple& MaskHeight, const HTuple& MaskWidth, const HTuple& Sigma);

LIntExport Herror midrange_image(const HObject& Image, const HObject& Mask, HObject* ImageMidrange, const HTuple& Margin);

LIntExport Herror trimmed_mean(const HObject& Image, const HObject& Mask, HObject* ImageTMean, const HTuple& Number, const HTuple& Margin);

LIntExport Herror median_separate(const HObject& Image, HObject* ImageSMedian, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& Margin);

LIntExport Herror median_rect(const HObject& Image, HObject* ImageMedian, const HTuple& MaskWidth, const HTuple& MaskHeight);

LIntExport Herror median_image(const HObject& Image, HObject* ImageMedian, const HTuple& MaskType, const HTuple& Radius, const HTuple& Margin);

LIntExport Herror median_weighted(const HObject& Image, HObject* ImageWMedian, const HTuple& MaskType, const HTuple& MaskSize);

LIntExport Herror rank_rect(const HObject& Image, HObject* ImageRank, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& Rank);

LIntExport Herror rank_image(const HObject& Image, const HObject& Mask, HObject* ImageRank, const HTuple& Rank, const HTuple& Margin);

LIntExport Herror dual_rank(const HObject& Image, HObject* ImageRank, const HTuple& MaskType, const HTuple& Radius, const HTuple& ModePercent, const HTuple& Margin);

LIntExport Herror mean_image(const HObject& Image, HObject* ImageMean, const HTuple& MaskWidth, const HTuple& MaskHeight);

LIntExport Herror info_smooth(const HTuple& Filter, const HTuple& Alpha, HTuple* Size, HTuple* Coeffs);

LIntExport Herror binomial_filter(const HObject& Image, HObject* ImageBinomial, const HTuple& MaskWidth, const HTuple& MaskHeight);

LIntExport Herror gauss_image(const HObject& Image, HObject* ImageGauss, const HTuple& Size);

LIntExport Herror gauss_filter(const HObject& Image, HObject* ImageGauss, const HTuple& Size);

LIntExport Herror eliminate_min_max(const HObject& Image, HObject* FilteredImage, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& Gap, const HTuple& Mode);

LIntExport Herror anisotrope_diff(const HObject& Image, HObject* ImageAniso, const HTuple& Percent, const HTuple& Mode, const HTuple& Iteration, const HTuple& NeighborhoodType);

LIntExport Herror fill_interlace(const HObject& ImageCamera, HObject* ImageFilled, const HTuple& Mode);

LIntExport Herror rank_n(const HObject& Image, HObject* RankImage, const HTuple& RankIndex);

LIntExport Herror mean_n(const HObject& Image, HObject* ImageMean);

LIntExport Herror eliminate_sp(const HObject& Image, HObject* ImageFillSP, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& MinThresh, const HTuple& MaxThresh);

LIntExport Herror mean_sp(const HObject& Image, HObject* ImageSPMean, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& MinThresh, const HTuple& MaxThresh);

LIntExport Herror points_sojka(const HObject& Image, const HTuple& MaskSize, const HTuple& SigmaW, const HTuple& SigmaD, const HTuple& MinGrad, const HTuple& MinApparentness, const HTuple& MinAngle, const HTuple& Subpix, HTuple* Row, HTuple* Column);

LIntExport Herror dots_image(const HObject& Image, HObject* DotImage, const HTuple& Diameter, const HTuple& FilterType, const HTuple& PixelShift);

LIntExport Herror local_min_sub_pix(const HObject& Image, const HTuple& Filter, const HTuple& Sigma, const HTuple& Threshold, HTuple* Row, HTuple* Column);

LIntExport Herror local_max_sub_pix(const HObject& Image, const HTuple& Filter, const HTuple& Sigma, const HTuple& Threshold, HTuple* Row, HTuple* Column);

LIntExport Herror saddle_points_sub_pix(const HObject& Image, const HTuple& Filter, const HTuple& Sigma, const HTuple& Threshold, HTuple* Row, HTuple* Column);

LIntExport Herror critical_points_sub_pix(const HObject& Image, const HTuple& Filter, const HTuple& Sigma, const HTuple& Threshold, HTuple* RowMin, HTuple* ColumnMin, HTuple* RowMax, HTuple* ColumnMax, HTuple* RowSaddle, HTuple* ColumnSaddle);

LIntExport Herror points_harris(const HObject& Image, const HTuple& SigmaGrad, const HTuple& SigmaSmooth, const HTuple& Alpha, const HTuple& Threshold, HTuple* Row, HTuple* Column);

LIntExport Herror points_harris_binomial(const HObject& Image, const HTuple& MaskSizeGrad, const HTuple& MaskSizeSmooth, const HTuple& Alpha, const HTuple& Threshold, const HTuple& Subpix, HTuple* Row, HTuple* Column);

LIntExport Herror points_lepetit(const HObject& Image, const HTuple& Radius, const HTuple& CheckNeighbor, const HTuple& MinCheckNeighborDiff, const HTuple& MinScore, const HTuple& Subpix, HTuple* Row, HTuple* Column);

LIntExport Herror points_foerstner(const HObject& Image, const HTuple& SigmaGrad, const HTuple& SigmaInt, const HTuple& SigmaPoints, const HTuple& ThreshInhom, const HTuple& ThreshShape, const HTuple& Smoothing, const HTuple& EliminateDoublets, HTuple* RowJunctions, HTuple* ColumnJunctions, HTuple* CoRRJunctions, HTuple* CoRCJunctions, HTuple* CoCCJunctions, HTuple* RowArea, HTuple* ColumnArea, HTuple* CoRRArea, HTuple* CoRCArea, HTuple* CoCCArea);

LIntExport Herror estimate_noise(const HObject& Image, const HTuple& Method, const HTuple& Percent, HTuple* Sigma);

LIntExport Herror noise_distribution_mean(const HObject& ConstRegion, const HObject& Image, const HTuple& FilterSize, HTuple* Distribution);

LIntExport Herror add_noise_white(const HObject& Image, HObject* ImageNoise, const HTuple& Amp);

LIntExport Herror add_noise_distribution(const HObject& Image, HObject* ImageNoise, const HTuple& Distribution);

LIntExport Herror gauss_distribution(const HTuple& Sigma, HTuple* Distribution);

LIntExport Herror sp_distribution(const HTuple& PercentSalt, const HTuple& PercentPepper, HTuple* Distribution);

LIntExport Herror deviation_n(const HObject& Image, HObject* ImageDeviation);

LIntExport Herror inpainting_texture(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& MaskSize, const HTuple& SearchSize, const HTuple& Anisotropy, const HTuple& PostIteration, const HTuple& Smoothness);

LIntExport Herror inpainting_ct(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& Epsilon, const HTuple& Kappa, const HTuple& Sigma, const HTuple& Rho, const HTuple& ChannelCoefficients);

LIntExport Herror inpainting_mcf(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& Sigma, const HTuple& Theta, const HTuple& Iterations);

LIntExport Herror inpainting_ced(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& Sigma, const HTuple& Rho, const HTuple& Theta, const HTuple& Iterations);

LIntExport Herror inpainting_aniso(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& Mode, const HTuple& Contrast, const HTuple& Theta, const HTuple& Iterations, const HTuple& Rho);

LIntExport Herror harmonic_interpolation(const HObject& Image, const HObject& Region, HObject* InpaintedImage, const HTuple& Precision);

LIntExport Herror expand_domain_gray(const HObject& InputImage, HObject* ExpandedImage, const HTuple& ExpansionRange);

LIntExport Herror topographic_sketch(const HObject& Image, HObject* Sketch);

LIntExport Herror linear_trans_color(const HObject& Image, HObject* ImageTrans, const HTuple& TransMat);

LIntExport Herror gen_principal_comp_trans(const HObject& MultichannelImage, HTuple* Trans, HTuple* TransInv, HTuple* Mean, HTuple* Cov, HTuple* InfoPerComp);

LIntExport Herror principal_comp(const HObject& MultichannelImage, HObject* PCAImage, HTuple* InfoPerComp);

LIntExport Herror fuzzy_entropy(const HObject& Regions, const HObject& Image, const HTuple& Apar, const HTuple& Cpar, HTuple* Entropy);

LIntExport Herror fuzzy_perimeter(const HObject& Regions, const HObject& Image, const HTuple& Apar, const HTuple& Cpar, HTuple* Perimeter);

LIntExport Herror gray_closing_shape(const HObject& Image, HObject* ImageClosing, const HTuple& MaskHeight, const HTuple& MaskWidth, const HTuple& MaskShape);

LIntExport Herror gray_opening_shape(const HObject& Image, HObject* ImageOpening, const HTuple& MaskHeight, const HTuple& MaskWidth, const HTuple& MaskShape);

LIntExport Herror gray_erosion_shape(const HObject& Image, HObject* ImageMin, const HTuple& MaskHeight, const HTuple& MaskWidth, const HTuple& MaskShape);

LIntExport Herror gray_dilation_shape(const HObject& Image, HObject* ImageMax, const HTuple& MaskHeight, const HTuple& MaskWidth, const HTuple& MaskShape);

LIntExport Herror gray_range_rect(const HObject& Image, HObject* ImageResult, const HTuple& MaskHeight, const HTuple& MaskWidth);

LIntExport Herror gray_closing_rect(const HObject& Image, HObject* ImageClosing, const HTuple& MaskHeight, const HTuple& MaskWidth);

LIntExport Herror gray_opening_rect(const HObject& Image, HObject* ImageOpening, const HTuple& MaskHeight, const HTuple& MaskWidth);

LIntExport Herror gray_erosion_rect(const HObject& Image, HObject* ImageMin, const HTuple& MaskHeight, const HTuple& MaskWidth);

LIntExport Herror gray_dilation_rect(const HObject& Image, HObject* ImageMax, const HTuple& MaskHeight, const HTuple& MaskWidth);

LIntExport Herror gray_skeleton(const HObject& Image, HObject* GraySkeleton);

LIntExport Herror lut_trans(const HObject& Image, HObject* ImageResult, const HTuple& Lut);

LIntExport Herror convol_image(const HObject& Image, HObject* ImageResult, const HTuple& FilterMask, const HTuple& Margin);

LIntExport Herror convert_image_type(const HObject& Image, HObject* ImageConverted, const HTuple& NewType);

LIntExport Herror real_to_vector_field(const HObject& Row, const HObject& Col, HObject* VectorField, const HTuple& Type);

LIntExport Herror vector_field_to_real(const HObject& VectorField, HObject* Row, HObject* Col);

LIntExport Herror real_to_complex(const HObject& ImageReal, const HObject& ImageImaginary, HObject* ImageComplex);

LIntExport Herror complex_to_real(const HObject& ImageComplex, HObject* ImageReal, HObject* ImageImaginary);

LIntExport Herror region_to_mean(const HObject& Regions, const HObject& Image, HObject* ImageMean);

LIntExport Herror gray_inside(const HObject& Image, HObject* ImageDist);

LIntExport Herror symmetry(const HObject& Image, HObject* ImageSymmetry, const HTuple& MaskSize, const HTuple& Direction, const HTuple& Exponent);

LIntExport Herror select_grayvalues_from_channels(const HObject& MultichannelImage, const HObject& IndexImage, HObject* Selected);

LIntExport Herror depth_from_focus(const HObject& MultiFocusImage, HObject* Depth, HObject* Confidence, const HTuple& Filter, const HTuple& Selection);

LIntExport Herror scene_flow_calib(const HObject& ImageRect1T1, const HObject& ImageRect2T1, const HObject& ImageRect1T2, const HObject& ImageRect2T2, const HObject& Disparity, const HTuple& SmoothingFlow, const HTuple& SmoothingDisparity, const HTuple& GenParamName, const HTuple& GenParamValue, const HTuple& CamParamRect1, const HTuple& CamParamRect2, const HTuple& RelPoseRect, HTuple* ObjectModel3D);

LIntExport Herror scene_flow_uncalib(const HObject& ImageRect1T1, const HObject& ImageRect2T1, const HObject& ImageRect1T2, const HObject& ImageRect2T2, const HObject& Disparity, HObject* OpticalFlow, HObject* DisparityChange, const HTuple& SmoothingFlow, const HTuple& SmoothingDisparity, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror unwarp_image_vector_field(const HObject& Image, const HObject& VectorField, HObject* ImageUnwarped);

LIntExport Herror derivate_vector_field(const HObject& VectorField, HObject* Result, const HTuple& Sigma, const HTuple& Component);

LIntExport Herror vector_field_length(const HObject& VectorField, HObject* Length, const HTuple& Mode);

LIntExport Herror optical_flow_mg(const HObject& ImageT1, const HObject& ImageT2, HObject* VectorField, const HTuple& Algorithm, const HTuple& SmoothingSigma, const HTuple& IntegrationSigma, const HTuple& FlowSmoothness, const HTuple& GradientConstancy, const HTuple& MGParamName, const HTuple& MGParamValue);

LIntExport Herror exhaustive_match_mg(const HObject& Image, const HObject& ImageTemplate, HObject* ImageMatch, const HTuple& Mode, const HTuple& Level, const HTuple& Threshold);

LIntExport Herror create_template_rot(const HObject& Template, const HTuple& NumLevel, const HTuple& AngleStart, const HTuple& AngleExtend, const HTuple& AngleStep, const HTuple& Optimize, const HTuple& GrayValues, HTuple* TemplateID);

LIntExport Herror create_template(const HObject& Template, const HTuple& FirstError, const HTuple& NumLevel, const HTuple& Optimize, const HTuple& GrayValues, HTuple* TemplateID);

LIntExport Herror serialize_template(const HTuple& TemplateID, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_template(const HTuple& SerializedItemHandle, HTuple* TemplateID);

LIntExport Herror write_template(const HTuple& TemplateID, const HTuple& FileName);

LIntExport Herror read_template(const HTuple& FileName, HTuple* TemplateID);

LIntExport Herror clear_all_templates();

LIntExport Herror clear_template(const HTuple& TemplateID);

LIntExport Herror set_offset_template(const HTuple& TemplateID, const HTuple& GrayOffset);

LIntExport Herror set_reference_template(const HTuple& TemplateID, const HTuple& Row, const HTuple& Column);

LIntExport Herror adapt_template(const HObject& Image, const HTuple& TemplateID);

LIntExport Herror fast_match_mg(const HObject& Image, HObject* Matches, const HTuple& TemplateID, const HTuple& MaxError, const HTuple& NumLevel);

LIntExport Herror best_match_pre_mg(const HObject& ImagePyramid, const HTuple& TemplateID, const HTuple& MaxError, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& WhichLevels, HTuple* Row, HTuple* Column, HTuple* Error);

LIntExport Herror best_match_mg(const HObject& Image, const HTuple& TemplateID, const HTuple& MaxError, const HTuple& SubPixel, const HTuple& NumLevels, const HTuple& WhichLevels, HTuple* Row, HTuple* Column, HTuple* Error);

LIntExport Herror fast_match(const HObject& Image, HObject* Matches, const HTuple& TemplateID, const HTuple& MaxError);

LIntExport Herror best_match_rot_mg(const HObject& Image, const HTuple& TemplateID, const HTuple& AngleStart, const HTuple& AngleExtend, const HTuple& MaxError, const HTuple& SubPixel, const HTuple& NumLevels, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Error);

LIntExport Herror best_match_rot(const HObject& Image, const HTuple& TemplateID, const HTuple& AngleStart, const HTuple& AngleExtend, const HTuple& MaxError, const HTuple& SubPixel, HTuple* Row, HTuple* Column, HTuple* Angle, HTuple* Error);

LIntExport Herror best_match(const HObject& Image, const HTuple& TemplateID, const HTuple& MaxError, const HTuple& SubPixel, HTuple* Row, HTuple* Column, HTuple* Error);

LIntExport Herror exhaustive_match(const HObject& Image, const HObject& RegionOfInterest, const HObject& ImageTemplate, HObject* ImageMatch, const HTuple& Mode);

LIntExport Herror corner_response(const HObject& Image, HObject* ImageCorner, const HTuple& Size, const HTuple& Weight);

LIntExport Herror gen_gauss_pyramid(const HObject& Image, HObject* ImagePyramid, const HTuple& Mode, const HTuple& Scale);

LIntExport Herror monotony(const HObject& Image, HObject* ImageMonotony);

LIntExport Herror bandpass_image(const HObject& Image, HObject* ImageBandpass, const HTuple& FilterType);

LIntExport Herror lines_color(const HObject& Image, HObject* Lines, const HTuple& Sigma, const HTuple& Low, const HTuple& High, const HTuple& ExtractWidth, const HTuple& CompleteJunctions);

LIntExport Herror lines_gauss(const HObject& Image, HObject* Lines, const HTuple& Sigma, const HTuple& Low, const HTuple& High, const HTuple& LightDark, const HTuple& ExtractWidth, const HTuple& LineModel, const HTuple& CompleteJunctions);

LIntExport Herror lines_facet(const HObject& Image, HObject* Lines, const HTuple& MaskSize, const HTuple& Low, const HTuple& High, const HTuple& LightDark);

LIntExport Herror gen_filter_mask(HObject* ImageFilter, const HTuple& FilterMask, const HTuple& Scale, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_mean_filter(HObject* ImageMean, const HTuple& MaskShape, const HTuple& Diameter1, const HTuple& Diameter2, const HTuple& Phi, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_gauss_filter(HObject* ImageGauss, const HTuple& Sigma1, const HTuple& Sigma2, const HTuple& Phi, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_derivative_filter(HObject* ImageDerivative, const HTuple& Derivative, const HTuple& Exponent, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_std_bandpass(HObject* ImageFilter, const HTuple& Frequency, const HTuple& Sigma, const HTuple& Type, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_sin_bandpass(HObject* ImageFilter, const HTuple& Frequency, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_bandfilter(HObject* ImageFilter, const HTuple& MinFrequency, const HTuple& MaxFrequency, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_bandpass(HObject* ImageBandpass, const HTuple& MinFrequency, const HTuple& MaxFrequency, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_lowpass(HObject* ImageLowpass, const HTuple& Frequency, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_highpass(HObject* ImageHighpass, const HTuple& Frequency, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror power_ln(const HObject& Image, HObject* ImageResult);

LIntExport Herror power_real(const HObject& Image, HObject* ImageResult);

LIntExport Herror power_byte(const HObject& Image, HObject* PowerByte);

LIntExport Herror phase_deg(const HObject& ImageComplex, HObject* ImagePhase);

LIntExport Herror phase_rad(const HObject& ImageComplex, HObject* ImagePhase);

LIntExport Herror energy_gabor(const HObject& ImageGabor, const HObject& ImageHilbert, HObject* Energy);

LIntExport Herror convol_gabor(const HObject& ImageFFT, const HObject& GaborFilter, HObject* ImageResultGabor, HObject* ImageResultHilbert);

LIntExport Herror gen_gabor(HObject* ImageFilter, const HTuple& Angle, const HTuple& Frequency, const HTuple& Bandwidth, const HTuple& Orientation, const HTuple& Norm, const HTuple& Mode, const HTuple& Width, const HTuple& Height);

LIntExport Herror phase_correlation_fft(const HObject& ImageFFT1, const HObject& ImageFFT2, HObject* ImagePhaseCorrelation);

LIntExport Herror correlation_fft(const HObject& ImageFFT1, const HObject& ImageFFT2, HObject* ImageCorrelation);

LIntExport Herror convol_fft(const HObject& ImageFFT, const HObject& ImageFilter, HObject* ImageConvol);

LIntExport Herror deserialize_fft_optimization_data(const HTuple& SerializedItemHandle);

LIntExport Herror serialize_fft_optimization_data(HTuple* SerializedItemHandle);

LIntExport Herror read_fft_optimization_data(const HTuple& FileName);

LIntExport Herror write_fft_optimization_data(const HTuple& FileName);

LIntExport Herror optimize_rft_speed(const HTuple& Width, const HTuple& Height, const HTuple& Mode);

LIntExport Herror optimize_fft_speed(const HTuple& Width, const HTuple& Height, const HTuple& Mode);

LIntExport Herror rft_generic(const HObject& Image, HObject* ImageFFT, const HTuple& Direction, const HTuple& Norm, const HTuple& ResultType, const HTuple& Width);

LIntExport Herror fft_image_inv(const HObject& Image, HObject* ImageFFTInv);

LIntExport Herror fft_image(const HObject& Image, HObject* ImageFFT);

LIntExport Herror fft_generic(const HObject& Image, HObject* ImageFFT, const HTuple& Direction, const HTuple& Exponent, const HTuple& Norm, const HTuple& Mode, const HTuple& ResultType);

LIntExport Herror shock_filter(const HObject& Image, HObject* SharpenedImage, const HTuple& Theta, const HTuple& Iterations, const HTuple& Mode, const HTuple& Sigma);

LIntExport Herror mean_curvature_flow(const HObject& Image, HObject* ImageMCF, const HTuple& Sigma, const HTuple& Theta, const HTuple& Iterations);

LIntExport Herror coherence_enhancing_diff(const HObject& Image, HObject* ImageCED, const HTuple& Sigma, const HTuple& Rho, const HTuple& Theta, const HTuple& Iterations);

LIntExport Herror equ_histo_image(const HObject& Image, HObject* ImageEquHisto);

LIntExport Herror illuminate(const HObject& Image, HObject* ImageIlluminate, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& Factor);

LIntExport Herror emphasize(const HObject& Image, HObject* ImageEmphasize, const HTuple& MaskWidth, const HTuple& MaskHeight, const HTuple& Factor);

LIntExport Herror scale_image_max(const HObject& Image, HObject* ImageScaleMax);

LIntExport Herror robinson_dir(const HObject& Image, HObject* ImageEdgeAmp, HObject* ImageEdgeDir);

LIntExport Herror robinson_amp(const HObject& Image, HObject* ImageEdgeAmp);

LIntExport Herror kirsch_dir(const HObject& Image, HObject* ImageEdgeAmp, HObject* ImageEdgeDir);

LIntExport Herror kirsch_amp(const HObject& Image, HObject* ImageEdgeAmp);

LIntExport Herror frei_dir(const HObject& Image, HObject* ImageEdgeAmp, HObject* ImageEdgeDir);

LIntExport Herror frei_amp(const HObject& Image, HObject* ImageEdgeAmp);

LIntExport Herror prewitt_dir(const HObject& Image, HObject* ImageEdgeAmp, HObject* ImageEdgeDir);

LIntExport Herror prewitt_amp(const HObject& Image, HObject* ImageEdgeAmp);

LIntExport Herror sobel_amp(const HObject& Image, HObject* EdgeAmplitude, const HTuple& FilterType, const HTuple& Size);

LIntExport Herror sobel_dir(const HObject& Image, HObject* EdgeAmplitude, HObject* EdgeDirection, const HTuple& FilterType, const HTuple& Size);

LIntExport Herror roberts(const HObject& Image, HObject* ImageRoberts, const HTuple& FilterType);

LIntExport Herror laplace(const HObject& Image, HObject* ImageLaplace, const HTuple& ResultType, const HTuple& MaskSize, const HTuple& FilterMask);

LIntExport Herror highpass_image(const HObject& Image, HObject* Highpass, const HTuple& Width, const HTuple& Height);

LIntExport Herror info_edges(const HTuple& Filter, const HTuple& Mode, const HTuple& Alpha, HTuple* Size, HTuple* Coeffs);

LIntExport Herror edges_color_sub_pix(const HObject& Image, HObject* Edges, const HTuple& Filter, const HTuple& Alpha, const HTuple& Low, const HTuple& High);

LIntExport Herror edges_color(const HObject& Image, HObject* ImaAmp, HObject* ImaDir, const HTuple& Filter, const HTuple& Alpha, const HTuple& NMS, const HTuple& Low, const HTuple& High);

LIntExport Herror edges_sub_pix(const HObject& Image, HObject* Edges, const HTuple& Filter, const HTuple& Alpha, const HTuple& Low, const HTuple& High);

LIntExport Herror edges_image(const HObject& Image, HObject* ImaAmp, HObject* ImaDir, const HTuple& Filter, const HTuple& Alpha, const HTuple& NMS, const HTuple& Low, const HTuple& High);

LIntExport Herror derivate_gauss(const HObject& Image, HObject* DerivGauss, const HTuple& Sigma, const HTuple& Component);

LIntExport Herror laplace_of_gauss(const HObject& Image, HObject* ImageLaplace, const HTuple& Sigma);

LIntExport Herror diff_of_gauss(const HObject& Image, HObject* DiffOfGauss, const HTuple& Sigma, const HTuple& SigFactor);

LIntExport Herror close_edges_length(const HObject& Edges, const HObject& Gradient, HObject* ClosedEdges, const HTuple& MinAmplitude, const HTuple& MaxGapLength);

LIntExport Herror close_edges(const HObject& Edges, const HObject& EdgeImage, HObject* RegionResult, const HTuple& MinAmplitude);

LIntExport Herror detect_edge_segments(const HObject& Image, const HTuple& SobelSize, const HTuple& MinAmplitude, const HTuple& MaxDistance, const HTuple& MinLength, HTuple* BeginRow, HTuple* BeginCol, HTuple* EndRow, HTuple* EndCol);

LIntExport Herror clear_all_color_trans_luts();

LIntExport Herror clear_color_trans_lut(const HTuple& ColorTransLUTHandle);

LIntExport Herror apply_color_trans_lut(const HObject& Image1, const HObject& Image2, const HObject& Image3, HObject* ImageResult1, HObject* ImageResult2, HObject* ImageResult3, const HTuple& ColorTransLUTHandle);

LIntExport Herror create_color_trans_lut(const HTuple& ColorSpace, const HTuple& TransDirection, const HTuple& NumBits, HTuple* ColorTransLUTHandle);

LIntExport Herror cfa_to_rgb(const HObject& CFAImage, HObject* RGBImage, const HTuple& CFAType, const HTuple& Interpolation);

LIntExport Herror rgb1_to_gray(const HObject& RGBImage, HObject* GrayImage);

LIntExport Herror rgb3_to_gray(const HObject& ImageRed, const HObject& ImageGreen, const HObject& ImageBlue, HObject* ImageGray);

LIntExport Herror trans_from_rgb(const HObject& ImageRed, const HObject& ImageGreen, const HObject& ImageBlue, HObject* ImageResult1, HObject* ImageResult2, HObject* ImageResult3, const HTuple& ColorSpace);

LIntExport Herror trans_to_rgb(const HObject& ImageInput1, const HObject& ImageInput2, const HObject& ImageInput3, HObject* ImageRed, HObject* ImageGreen, HObject* ImageBlue, const HTuple& ColorSpace);

LIntExport Herror bit_mask(const HObject& Image, HObject* ImageMask, const HTuple& BitMask);

LIntExport Herror bit_slice(const HObject& Image, HObject* ImageSlice, const HTuple& Bit);

LIntExport Herror bit_rshift(const HObject& Image, HObject* ImageRShift, const HTuple& Shift);

LIntExport Herror bit_lshift(const HObject& Image, HObject* ImageLShift, const HTuple& Shift);

LIntExport Herror bit_not(const HObject& Image, HObject* ImageNot);

LIntExport Herror bit_xor(const HObject& Image1, const HObject& Image2, HObject* ImageXor);

LIntExport Herror bit_or(const HObject& Image1, const HObject& Image2, HObject* ImageOr);

LIntExport Herror bit_and(const HObject& Image1, const HObject& Image2, HObject* ImageAnd);

LIntExport Herror gamma_image(const HObject& Image, HObject* GammaImage, const HTuple& Gamma, const HTuple& Offset, const HTuple& Threshold, const HTuple& MaxGray, const HTuple& Encode);

LIntExport Herror pow_image(const HObject& Image, HObject* PowImage, const HTuple& Exponent);

LIntExport Herror exp_image(const HObject& Image, HObject* ExpImage, const HTuple& Base);

LIntExport Herror log_image(const HObject& Image, HObject* LogImage, const HTuple& Base);

LIntExport Herror atan2_image(const HObject& ImageY, const HObject& ImageX, HObject* ArctanImage);

LIntExport Herror atan_image(const HObject& Image, HObject* ArctanImage);

LIntExport Herror acos_image(const HObject& Image, HObject* ArccosImage);

LIntExport Herror asin_image(const HObject& Image, HObject* ArcsinImage);

LIntExport Herror tan_image(const HObject& Image, HObject* TanImage);

LIntExport Herror cos_image(const HObject& Image, HObject* CosImage);

LIntExport Herror sin_image(const HObject& Image, HObject* SinImage);

LIntExport Herror abs_diff_image(const HObject& Image1, const HObject& Image2, HObject* ImageAbsDiff, const HTuple& Mult);

LIntExport Herror sqrt_image(const HObject& Image, HObject* SqrtImage);

LIntExport Herror sub_image(const HObject& ImageMinuend, const HObject& ImageSubtrahend, HObject* ImageSub, const HTuple& Mult, const HTuple& Add);

LIntExport Herror scale_image(const HObject& Image, HObject* ImageScaled, const HTuple& Mult, const HTuple& Add);

LIntExport Herror div_image(const HObject& Image1, const HObject& Image2, HObject* ImageResult, const HTuple& Mult, const HTuple& Add);

LIntExport Herror mult_image(const HObject& Image1, const HObject& Image2, HObject* ImageResult, const HTuple& Mult, const HTuple& Add);

LIntExport Herror add_image(const HObject& Image1, const HObject& Image2, HObject* ImageResult, const HTuple& Mult, const HTuple& Add);

LIntExport Herror abs_image(const HObject& Image, HObject* ImageAbs);

LIntExport Herror min_image(const HObject& Image1, const HObject& Image2, HObject* ImageMin);

LIntExport Herror max_image(const HObject& Image1, const HObject& Image2, HObject* ImageMax);

LIntExport Herror invert_image(const HObject& Image, HObject* ImageInvert);

LIntExport Herror adjust_mosaic_images(const HObject& Images, HObject* CorrectedImages, const HTuple& From, const HTuple& To, const HTuple& ReferenceImage, const HTuple& HomMatrices2D, const HTuple& EstimationMethod, const HTuple& EstimateParameters, const HTuple& OECFModel);

LIntExport Herror gen_cube_map_mosaic(const HObject& Images, HObject* Front, HObject* Rear, HObject* Left, HObject* Right, HObject* Top, HObject* Bottom, const HTuple& CameraMatrices, const HTuple& RotationMatrices, const HTuple& CubeMapDimension, const HTuple& StackingOrder, const HTuple& Interpolation);

LIntExport Herror gen_spherical_mosaic(const HObject& Images, HObject* MosaicImage, const HTuple& CameraMatrices, const HTuple& RotationMatrices, const HTuple& LatMin, const HTuple& LatMax, const HTuple& LongMin, const HTuple& LongMax, const HTuple& LatLongStep, const HTuple& StackingOrder, const HTuple& Interpolation);

LIntExport Herror gen_bundle_adjusted_mosaic(const HObject& Images, HObject* MosaicImage, const HTuple& HomMatrices2D, const HTuple& StackingOrder, const HTuple& TransformDomain, HTuple* TransMat2D);

LIntExport Herror gen_projective_mosaic(const HObject& Images, HObject* MosaicImage, const HTuple& StartImage, const HTuple& MappingSource, const HTuple& MappingDest, const HTuple& HomMatrices2D, const HTuple& StackingOrder, const HTuple& TransformDomain, HTuple* MosaicMatrices2D);

LIntExport Herror projective_trans_image_size(const HObject& Image, HObject* TransImage, const HTuple& HomMat2D, const HTuple& Interpolation, const HTuple& Width, const HTuple& Height, const HTuple& TransformDomain);

LIntExport Herror projective_trans_image(const HObject& Image, HObject* TransImage, const HTuple& HomMat2D, const HTuple& Interpolation, const HTuple& AdaptImageSize, const HTuple& TransformDomain);

LIntExport Herror affine_trans_image_size(const HObject& Image, HObject* ImageAffinTrans, const HTuple& HomMat2D, const HTuple& Interpolation, const HTuple& Width, const HTuple& Height);

LIntExport Herror affine_trans_image(const HObject& Image, HObject* ImageAffinTrans, const HTuple& HomMat2D, const HTuple& Interpolation, const HTuple& AdaptImageSize);

LIntExport Herror zoom_image_factor(const HObject& Image, HObject* ImageZoomed, const HTuple& ScaleWidth, const HTuple& ScaleHeight, const HTuple& Interpolation);

LIntExport Herror zoom_image_size(const HObject& Image, HObject* ImageZoom, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation);

LIntExport Herror mirror_image(const HObject& Image, HObject* ImageMirror, const HTuple& Mode);

LIntExport Herror rotate_image(const HObject& Image, HObject* ImageRotate, const HTuple& Phi, const HTuple& Interpolation);

LIntExport Herror polar_trans_image_inv(const HObject& PolarImage, HObject* XYTransImage, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation);

LIntExport Herror polar_trans_image_ext(const HObject& Image, HObject* PolarTransImage, const HTuple& Row, const HTuple& Column, const HTuple& AngleStart, const HTuple& AngleEnd, const HTuple& RadiusStart, const HTuple& RadiusEnd, const HTuple& Width, const HTuple& Height, const HTuple& Interpolation);

LIntExport Herror polar_trans_image(const HObject& ImageXY, HObject* ImagePolar, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror vector_field_to_hom_mat2d(const HObject& VectorField, HTuple* HomMat2D);

LIntExport Herror deserialize_xld(HObject* XLD, const HTuple& SerializedItemHandle);

LIntExport Herror serialize_xld(const HObject& XLD, HTuple* SerializedItemHandle);

LIntExport Herror read_polygon_xld_dxf(HObject* Polygons, const HTuple& FileName, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* DxfStatus);

LIntExport Herror write_polygon_xld_dxf(const HObject& Polygons, const HTuple& FileName);

LIntExport Herror read_contour_xld_dxf(HObject* Contours, const HTuple& FileName, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* DxfStatus);

LIntExport Herror write_contour_xld_dxf(const HObject& Contours, const HTuple& FileName);

LIntExport Herror copy_file(const HTuple& SourceFile, const HTuple& DestinationFile);

LIntExport Herror set_current_dir(const HTuple& DirName);

LIntExport Herror get_current_dir(HTuple* DirName);

LIntExport Herror remove_dir(const HTuple& DirName);

LIntExport Herror make_dir(const HTuple& DirName);

LIntExport Herror list_files(const HTuple& Directory, const HTuple& Options, HTuple* Files);

LIntExport Herror delete_file(const HTuple& FileName);

LIntExport Herror file_exists(const HTuple& FileName, HTuple* FileExists);

LIntExport Herror read_object(HObject* Object, const HTuple& FileName);

LIntExport Herror write_object(const HObject& Object, const HTuple& FileName);

LIntExport Herror deserialize_object(HObject* Object, const HTuple& SerializedItemHandle);

LIntExport Herror serialize_object(const HObject& Object, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_image(HObject* Image, const HTuple& SerializedItemHandle);

LIntExport Herror serialize_image(const HObject& Image, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_region(HObject* Region, const HTuple& SerializedItemHandle);

LIntExport Herror serialize_region(const HObject& Region, HTuple* SerializedItemHandle);

LIntExport Herror write_region(const HObject& Region, const HTuple& FileName);

LIntExport Herror write_image(const HObject& Image, const HTuple& Format, const HTuple& FillColor, const HTuple& FileName);

LIntExport Herror read_sequence(HObject* Image, const HTuple& HeaderSize, const HTuple& SourceWidth, const HTuple& SourceHeight, const HTuple& StartRow, const HTuple& StartColumn, const HTuple& DestWidth, const HTuple& DestHeight, const HTuple& PixelType, const HTuple& BitOrder, const HTuple& ByteOrder, const HTuple& Pad, const HTuple& Index, const HTuple& FileName);

LIntExport Herror read_region(HObject* Region, const HTuple& FileName);

LIntExport Herror read_image(HObject* Image, const HTuple& FileName);

LIntExport Herror open_file(const HTuple& FileName, const HTuple& FileType, HTuple* FileHandle);

LIntExport Herror fwrite_string(const HTuple& FileHandle, const HTuple& String);

LIntExport Herror fread_line(const HTuple& FileHandle, HTuple* OutLine, HTuple* IsEOF);

LIntExport Herror fread_string(const HTuple& FileHandle, HTuple* OutString, HTuple* IsEOF);

LIntExport Herror fread_char(const HTuple& FileHandle, HTuple* Char);

LIntExport Herror fnew_line(const HTuple& FileHandle);

LIntExport Herror close_file(const HTuple& FileHandle);

LIntExport Herror close_all_files();

LIntExport Herror test_closed_xld(const HObject& XLD, HTuple* IsClosed);

LIntExport Herror get_grayval_contour_xld(const HObject& Image, const HObject& Contour, const HTuple& Interpolation, HTuple* Grayval);

LIntExport Herror moments_any_points_xld(const HObject& XLD, const HTuple& Mode, const HTuple& Area, const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& P, const HTuple& Q, HTuple* M);

LIntExport Herror eccentricity_points_xld(const HObject& XLD, HTuple* Anisometry);

LIntExport Herror elliptic_axis_points_xld(const HObject& XLD, HTuple* Ra, HTuple* Rb, HTuple* Phi);

LIntExport Herror orientation_points_xld(const HObject& XLD, HTuple* Phi);

LIntExport Herror moments_points_xld(const HObject& XLD, HTuple* M11, HTuple* M20, HTuple* M02);

LIntExport Herror area_center_points_xld(const HObject& XLD, HTuple* Area, HTuple* Row, HTuple* Column);

LIntExport Herror test_self_intersection_xld(const HObject& XLD, const HTuple& CloseXLD, HTuple* DoesIntersect);

LIntExport Herror select_xld_point(const HObject& XLDs, HObject* DestXLDs, const HTuple& Row, const HTuple& Column);

LIntExport Herror test_xld_point(const HObject& XLD, const HTuple& Row, const HTuple& Column, HTuple* IsInside);

LIntExport Herror select_shape_xld(const HObject& XLD, HObject* SelectedXLD, const HTuple& Features, const HTuple& Operation, const HTuple& Min, const HTuple& Max);

LIntExport Herror orientation_xld(const HObject& XLD, HTuple* Phi);

LIntExport Herror eccentricity_xld(const HObject& XLD, HTuple* Anisometry, HTuple* Bulkiness, HTuple* StructureFactor);

LIntExport Herror compactness_xld(const HObject& XLD, HTuple* Compactness);

LIntExport Herror diameter_xld(const HObject& XLD, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2, HTuple* Diameter);

LIntExport Herror convexity_xld(const HObject& XLD, HTuple* Convexity);

LIntExport Herror circularity_xld(const HObject& XLD, HTuple* Circularity);

LIntExport Herror elliptic_axis_xld(const HObject& XLD, HTuple* Ra, HTuple* Rb, HTuple* Phi);

LIntExport Herror smallest_rectangle2_xld(const HObject& XLD, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2);

LIntExport Herror smallest_rectangle1_xld(const HObject& XLD, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror smallest_circle_xld(const HObject& XLD, HTuple* Row, HTuple* Column, HTuple* Radius);

LIntExport Herror shape_trans_xld(const HObject& XLD, HObject* XLDTrans, const HTuple& Type);

LIntExport Herror length_xld(const HObject& XLD, HTuple* Length);

LIntExport Herror moments_any_xld(const HObject& XLD, const HTuple& Mode, const HTuple& PointOrder, const HTuple& Area, const HTuple& CenterRow, const HTuple& CenterCol, const HTuple& P, const HTuple& Q, HTuple* M);

LIntExport Herror moments_xld(const HObject& XLD, HTuple* M11, HTuple* M20, HTuple* M02);

LIntExport Herror area_center_xld(const HObject& XLD, HTuple* Area, HTuple* Row, HTuple* Column, HTuple* PointOrder);

LIntExport Herror moments_region_central_invar(const HObject& Regions, HTuple* PSI1, HTuple* PSI2, HTuple* PSI3, HTuple* PSI4);

LIntExport Herror moments_region_central(const HObject& Regions, HTuple* I1, HTuple* I2, HTuple* I3, HTuple* I4);

LIntExport Herror moments_region_3rd_invar(const HObject& Regions, HTuple* M21, HTuple* M12, HTuple* M03, HTuple* M30);

LIntExport Herror moments_region_3rd(const HObject& Regions, HTuple* M21, HTuple* M12, HTuple* M03, HTuple* M30);

LIntExport Herror smallest_rectangle2(const HObject& Regions, HTuple* Row, HTuple* Column, HTuple* Phi, HTuple* Length1, HTuple* Length2);

LIntExport Herror smallest_rectangle1(const HObject& Regions, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror smallest_circle(const HObject& Regions, HTuple* Row, HTuple* Column, HTuple* Radius);

LIntExport Herror select_shape_proto(const HObject& Regions, const HObject& Pattern, HObject* SelectedRegions, const HTuple& Feature, const HTuple& Min, const HTuple& Max);

LIntExport Herror region_features(const HObject& Regions, const HTuple& Features, HTuple* Value);

LIntExport Herror select_shape(const HObject& Regions, HObject* SelectedRegions, const HTuple& Features, const HTuple& Operation, const HTuple& Min, const HTuple& Max);

LIntExport Herror runlength_features(const HObject& Regions, HTuple* NumRuns, HTuple* KFactor, HTuple* LFactor, HTuple* MeanLength, HTuple* Bytes);

LIntExport Herror find_neighbors(const HObject& Regions1, const HObject& Regions2, const HTuple& MaxDistance, HTuple* RegionIndex1, HTuple* RegionIndex2);

LIntExport Herror moments_region_2nd_rel_invar(const HObject& Regions, HTuple* PHI1, HTuple* PHI2);

LIntExport Herror moments_region_2nd_invar(const HObject& Regions, HTuple* M11, HTuple* M20, HTuple* M02);

LIntExport Herror moments_region_2nd(const HObject& Regions, HTuple* M11, HTuple* M20, HTuple* M02, HTuple* Ia, HTuple* Ib);

LIntExport Herror distance_rr_min(const HObject& Regions1, const HObject& Regions2, HTuple* MinDistance, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror distance_rr_min_dil(const HObject& Regions1, const HObject& Regions2, HTuple* MinDistance);

LIntExport Herror diameter_region(const HObject& Regions, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2, HTuple* Diameter);

LIntExport Herror test_region_point(const HObject& Regions, const HTuple& Row, const HTuple& Column, HTuple* IsInside);

LIntExport Herror get_region_index(const HObject& Regions, const HTuple& Row, const HTuple& Column, HTuple* Index);

LIntExport Herror select_region_point(const HObject& Regions, HObject* DestRegions, const HTuple& Row, const HTuple& Column);

LIntExport Herror select_shape_std(const HObject& Regions, HObject* SelectedRegions, const HTuple& Shape, const HTuple& Percent);

LIntExport Herror hamming_distance_norm(const HObject& Regions1, const HObject& Regions2, const HTuple& Norm, HTuple* Distance, HTuple* Similarity);

LIntExport Herror hamming_distance(const HObject& Regions1, const HObject& Regions2, HTuple* Distance, HTuple* Similarity);

LIntExport Herror eccentricity(const HObject& Regions, HTuple* Anisometry, HTuple* Bulkiness, HTuple* StructureFactor);

LIntExport Herror euler_number(const HObject& Regions, HTuple* EulerNumber);

LIntExport Herror orientation_region(const HObject& Regions, HTuple* Phi);

LIntExport Herror elliptic_axis(const HObject& Regions, HTuple* Ra, HTuple* Rb, HTuple* Phi);

LIntExport Herror select_region_spatial(const HObject& Regions1, const HObject& Regions2, const HTuple& Direction, HTuple* RegionIndex1, HTuple* RegionIndex2);

LIntExport Herror spatial_relation(const HObject& Regions1, const HObject& Regions2, const HTuple& Percent, HTuple* RegionIndex1, HTuple* RegionIndex2, HTuple* Relation1, HTuple* Relation2);

LIntExport Herror convexity(const HObject& Regions, HTuple* Convexity);

LIntExport Herror contlength(const HObject& Regions, HTuple* ContLength);

LIntExport Herror connect_and_holes(const HObject& Regions, HTuple* NumConnected, HTuple* NumHoles);

LIntExport Herror rectangularity(const HObject& Regions, HTuple* Rectangularity);

LIntExport Herror compactness(const HObject& Regions, HTuple* Compactness);

LIntExport Herror circularity(const HObject& Regions, HTuple* Circularity);

LIntExport Herror area_holes(const HObject& Regions, HTuple* Area);

LIntExport Herror area_center(const HObject& Regions, HTuple* Area, HTuple* Row, HTuple* Column);

LIntExport Herror runlength_distribution(const HObject& Region, HTuple* Foreground, HTuple* Background);

LIntExport Herror roundness(const HObject& Regions, HTuple* Distance, HTuple* Sigma, HTuple* Roundness, HTuple* Sides);

LIntExport Herror inner_rectangle1(const HObject& Regions, HTuple* Row1, HTuple* Column1, HTuple* Row2, HTuple* Column2);

LIntExport Herror inner_circle(const HObject& Regions, HTuple* Row, HTuple* Column, HTuple* Radius);

LIntExport Herror select_lines_longest(const HTuple& RowBeginIn, const HTuple& ColBeginIn, const HTuple& RowEndIn, const HTuple& ColEndIn, const HTuple& Num, HTuple* RowBeginOut, HTuple* ColBeginOut, HTuple* RowEndOut, HTuple* ColEndOut);

LIntExport Herror partition_lines(const HTuple& RowBeginIn, const HTuple& ColBeginIn, const HTuple& RowEndIn, const HTuple& ColEndIn, const HTuple& Feature, const HTuple& Operation, const HTuple& Min, const HTuple& Max, HTuple* RowBeginOut, HTuple* ColBeginOut, HTuple* RowEndOut, HTuple* ColEndOut, HTuple* FailRowBOut, HTuple* FailColBOut, HTuple* FailRowEOut, HTuple* FailColEOut);

LIntExport Herror select_lines(const HTuple& RowBeginIn, const HTuple& ColBeginIn, const HTuple& RowEndIn, const HTuple& ColEndIn, const HTuple& Feature, const HTuple& Operation, const HTuple& Min, const HTuple& Max, HTuple* RowBeginOut, HTuple* ColBeginOut, HTuple* RowEndOut, HTuple* ColEndOut);

LIntExport Herror line_position(const HTuple& RowBegin, const HTuple& ColBegin, const HTuple& RowEnd, const HTuple& ColEnd, HTuple* RowCenter, HTuple* ColCenter, HTuple* Length, HTuple* Phi);

LIntExport Herror line_orientation(const HTuple& RowBegin, const HTuple& ColBegin, const HTuple& RowEnd, const HTuple& ColEnd, HTuple* Phi);

LIntExport Herror approx_chain_simple(const HTuple& Row, const HTuple& Column, HTuple* ArcCenterRow, HTuple* ArcCenterCol, HTuple* ArcAngle, HTuple* ArcBeginRow, HTuple* ArcBeginCol, HTuple* LineBeginRow, HTuple* LineBeginCol, HTuple* LineEndRow, HTuple* LineEndCol, HTuple* Order);

LIntExport Herror approx_chain(const HTuple& Row, const HTuple& Column, const HTuple& MinWidthCoord, const HTuple& MaxWidthCoord, const HTuple& ThreshStart, const HTuple& ThreshEnd, const HTuple& ThreshStep, const HTuple& MinWidthSmooth, const HTuple& MaxWidthSmooth, const HTuple& MinWidthCurve, const HTuple& MaxWidthCurve, const HTuple& Weight1, const HTuple& Weight2, const HTuple& Weight3, HTuple* ArcCenterRow, HTuple* ArcCenterCol, HTuple* ArcAngle, HTuple* ArcBeginRow, HTuple* ArcBeginCol, HTuple* LineBeginRow, HTuple* LineBeginCol, HTuple* LineEndRow, HTuple* LineEndCol, HTuple* Order);

LIntExport Herror fit_surface_first_order(const HObject& Regions, const HObject& Image, const HTuple& Algorithm, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* Alpha, HTuple* Beta, HTuple* Gamma);

LIntExport Herror fit_surface_second_order(const HObject& Regions, const HObject& Image, const HTuple& Algorithm, const HTuple& Iterations, const HTuple& ClippingFactor, HTuple* Alpha, HTuple* Beta, HTuple* Gamma, HTuple* Delta, HTuple* Epsilon, HTuple* Zeta);

LIntExport Herror gen_image_surface_second_order(HObject* ImageSurface, const HTuple& Type, const HTuple& Alpha, const HTuple& Beta, const HTuple& Gamma, const HTuple& Delta, const HTuple& Epsilon, const HTuple& Zeta, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror gen_image_surface_first_order(HObject* ImageSurface, const HTuple& Type, const HTuple& Alpha, const HTuple& Beta, const HTuple& Gamma, const HTuple& Row, const HTuple& Column, const HTuple& Width, const HTuple& Height);

LIntExport Herror shape_histo_point(const HObject& Region, const HObject& Image, const HTuple& Feature, const HTuple& Row, const HTuple& Column, HTuple* AbsoluteHisto, HTuple* RelativeHisto);

LIntExport Herror shape_histo_all(const HObject& Region, const HObject& Image, const HTuple& Feature, HTuple* AbsoluteHisto, HTuple* RelativeHisto);

LIntExport Herror gray_features(const HObject& Regions, const HObject& Image, const HTuple& Features, HTuple* Value);

LIntExport Herror select_gray(const HObject& Regions, const HObject& Image, HObject* SelectedRegions, const HTuple& Features, const HTuple& Operation, const HTuple& Min, const HTuple& Max);

LIntExport Herror min_max_gray(const HObject& Regions, const HObject& Image, const HTuple& Percent, HTuple* Min, HTuple* Max, HTuple* Range);

LIntExport Herror intensity(const HObject& Regions, const HObject& Image, HTuple* Mean, HTuple* Deviation);

LIntExport Herror gray_histo_range(const HObject& Regions, const HObject& Image, const HTuple& Min, const HTuple& Max, const HTuple& NumBins, HTuple* Histo, HTuple* BinSize);

LIntExport Herror histo_2dim(const HObject& Regions, const HObject& ImageCol, const HObject& ImageRow, HObject* Histo2Dim);

LIntExport Herror gray_histo_abs(const HObject& Regions, const HObject& Image, const HTuple& Quantization, HTuple* AbsoluteHisto);

LIntExport Herror gray_histo(const HObject& Regions, const HObject& Image, HTuple* AbsoluteHisto, HTuple* RelativeHisto);

LIntExport Herror entropy_gray(const HObject& Regions, const HObject& Image, HTuple* Entropy, HTuple* Anisotropy);

LIntExport Herror cooc_feature_matrix(const HObject& CoocMatrix, HTuple* Energy, HTuple* Correlation, HTuple* Homogeneity, HTuple* Contrast);

LIntExport Herror cooc_feature_image(const HObject& Regions, const HObject& Image, const HTuple& LdGray, const HTuple& Direction, HTuple* Energy, HTuple* Correlation, HTuple* Homogeneity, HTuple* Contrast);

LIntExport Herror gen_cooc_matrix(const HObject& Regions, const HObject& Image, HObject* Matrix, const HTuple& LdGray, const HTuple& Direction);

LIntExport Herror moments_gray_plane(const HObject& Regions, const HObject& Image, HTuple* MRow, HTuple* MCol, HTuple* Alpha, HTuple* Beta, HTuple* Mean);

LIntExport Herror plane_deviation(const HObject& Regions, const HObject& Image, HTuple* Deviation);

LIntExport Herror elliptic_axis_gray(const HObject& Regions, const HObject& Image, HTuple* Ra, HTuple* Rb, HTuple* Phi);

LIntExport Herror area_center_gray(const HObject& Regions, const HObject& Image, HTuple* Area, HTuple* Row, HTuple* Column);

LIntExport Herror gray_projections(const HObject& Region, const HObject& Image, const HTuple& Mode, HTuple* HorProjection, HTuple* VertProjection);

LIntExport Herror get_data_code_2d_objects(HObject* DataCodeObjects, const HTuple& DataCodeHandle, const HTuple& CandidateHandle, const HTuple& ObjectName);

LIntExport Herror get_data_code_2d_results(const HTuple& DataCodeHandle, const HTuple& CandidateHandle, const HTuple& ResultNames, HTuple* ResultValues);

LIntExport Herror find_data_code_2d(const HObject& Image, HObject* SymbolXLDs, const HTuple& DataCodeHandle, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ResultHandles, HTuple* DecodedDataStrings);

LIntExport Herror set_data_code_2d_param(const HTuple& DataCodeHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror get_data_code_2d_param(const HTuple& DataCodeHandle, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror query_data_code_2d_params(const HTuple& DataCodeHandle, const HTuple& QueryName, HTuple* GenParamNames);

LIntExport Herror deserialize_data_code_2d_model(const HTuple& SerializedItemHandle, HTuple* DataCodeHandle);

LIntExport Herror serialize_data_code_2d_model(const HTuple& DataCodeHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_data_code_2d_model(const HTuple& FileName, HTuple* DataCodeHandle);

LIntExport Herror write_data_code_2d_model(const HTuple& DataCodeHandle, const HTuple& FileName);

LIntExport Herror clear_all_data_code_2d_models();

LIntExport Herror clear_data_code_2d_model(const HTuple& DataCodeHandle);

LIntExport Herror create_data_code_2d_model(const HTuple& SymbolType, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* DataCodeHandle);

LIntExport Herror deserialize_class_train_data(const HTuple& SerializedItemHandle, HTuple* ClassTrainDataHandle);

LIntExport Herror serialize_class_train_data(const HTuple& ClassTrainDataHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_class_train_data(const HTuple& FileName, HTuple* ClassTrainDataHandle);

LIntExport Herror write_class_train_data(const HTuple& ClassTrainDataHandle, const HTuple& FileName);

LIntExport Herror select_sub_feature_class_train_data(const HTuple& ClassTrainDataHandle, const HTuple& SubFeatureIndices, HTuple* SelectedClassTrainDataHandle);

LIntExport Herror set_feature_lengths_class_train_data(const HTuple& ClassTrainDataHandle, const HTuple& SubFeatureLength, const HTuple& Names);

LIntExport Herror get_class_train_data_gmm(const HTuple& GMMHandle, HTuple* ClassTrainDataHandle);

LIntExport Herror add_class_train_data_gmm(const HTuple& GMMHandle, const HTuple& ClassTrainDataHandle);

LIntExport Herror get_class_train_data_mlp(const HTuple& MLPHandle, HTuple* ClassTrainDataHandle);

LIntExport Herror add_class_train_data_mlp(const HTuple& MLPHandle, const HTuple& ClassTrainDataHandle);

LIntExport Herror get_class_train_data_knn(const HTuple& KNNHandle, HTuple* ClassTrainDataHandle);

LIntExport Herror add_class_train_data_knn(const HTuple& KNNHandle, const HTuple& ClassTrainDataHandle);

LIntExport Herror get_class_train_data_svm(const HTuple& SVMHandle, HTuple* ClassTrainDataHandle);

LIntExport Herror add_class_train_data_svm(const HTuple& SVMHandle, const HTuple& ClassTrainDataHandle);

LIntExport Herror get_sample_num_class_train_data(const HTuple& ClassTrainDataHandle, HTuple* NumSamples);

LIntExport Herror get_sample_class_train_data(const HTuple& ClassTrainDataHandle, const HTuple& IndexSample, HTuple* Features, HTuple* ClassID);

LIntExport Herror clear_all_class_train_data();

LIntExport Herror clear_class_train_data(const HTuple& ClassTrainDataHandle);

LIntExport Herror add_sample_class_train_data(const HTuple& ClassTrainDataHandle, const HTuple& Order, const HTuple& Features, const HTuple& ClassID);

LIntExport Herror create_class_train_data(const HTuple& NumDim, HTuple* ClassTrainDataHandle);

LIntExport Herror select_feature_set_mlp(const HTuple& ClassTrainDataHandle, const HTuple& SelectionMethod, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* MLPHandle, HTuple* SelectedFeatureIndices, HTuple* Score);

LIntExport Herror select_feature_set_svm(const HTuple& ClassTrainDataHandle, const HTuple& SelectionMethod, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* SVMHandle, HTuple* SelectedFeatureIndices, HTuple* Score);

LIntExport Herror select_feature_set_gmm(const HTuple& ClassTrainDataHandle, const HTuple& SelectionMethod, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* GMMHandle, HTuple* SelectedFeatureIndices, HTuple* Score);

LIntExport Herror select_feature_set_knn(const HTuple& ClassTrainDataHandle, const HTuple& SelectionMethod, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* KNNHandle, HTuple* SelectedFeatureIndices, HTuple* Score);

LIntExport Herror clear_all_class_knn();

LIntExport Herror clear_class_knn(const HTuple& KNNHandle);

LIntExport Herror get_sample_num_class_knn(const HTuple& KNNHandle, HTuple* NumSamples);

LIntExport Herror get_sample_class_knn(const HTuple& KNNHandle, const HTuple& IndexSample, HTuple* Features, HTuple* ClassID);

LIntExport Herror deserialize_class_knn(const HTuple& SerializedItemHandle, HTuple* KNNHandle);

LIntExport Herror serialize_class_knn(const HTuple& KNNHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_class_knn(const HTuple& FileName, HTuple* KNNHandle);

LIntExport Herror write_class_knn(const HTuple& KNNHandle, const HTuple& FileName);

LIntExport Herror get_params_class_knn(const HTuple& KNNHandle, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror set_params_class_knn(const HTuple& KNNHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror classify_class_knn(const HTuple& KNNHandle, const HTuple& Features, HTuple* Result, HTuple* Rating);

LIntExport Herror train_class_knn(const HTuple& KNNHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror add_sample_class_knn(const HTuple& KNNHandle, const HTuple& Features, const HTuple& ClassID);

LIntExport Herror create_class_knn(const HTuple& NumDim, HTuple* KNNHandle);

LIntExport Herror clear_all_class_lut();

LIntExport Herror clear_class_lut(const HTuple& ClassLUTHandle);

LIntExport Herror create_class_lut_knn(const HTuple& KNNHandle, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ClassLUTHandle);

LIntExport Herror create_class_lut_gmm(const HTuple& GMMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ClassLUTHandle);

LIntExport Herror create_class_lut_svm(const HTuple& SVMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ClassLUTHandle);

LIntExport Herror create_class_lut_mlp(const HTuple& MLPHandle, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* ClassLUTHandle);

LIntExport Herror clear_all_class_gmm();

LIntExport Herror clear_class_gmm(const HTuple& GMMHandle);

LIntExport Herror clear_samples_class_gmm(const HTuple& GMMHandle);

LIntExport Herror deserialize_class_gmm(const HTuple& SerializedItemHandle, HTuple* GMMHandle);

LIntExport Herror serialize_class_gmm(const HTuple& GMMHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_class_gmm(const HTuple& FileName, HTuple* GMMHandle);

LIntExport Herror write_class_gmm(const HTuple& GMMHandle, const HTuple& FileName);

LIntExport Herror read_samples_class_gmm(const HTuple& GMMHandle, const HTuple& FileName);

LIntExport Herror write_samples_class_gmm(const HTuple& GMMHandle, const HTuple& FileName);

LIntExport Herror classify_class_gmm(const HTuple& GMMHandle, const HTuple& Features, const HTuple& Num, HTuple* ClassID, HTuple* ClassProb, HTuple* Density, HTuple* KSigmaProb);

LIntExport Herror evaluate_class_gmm(const HTuple& GMMHandle, const HTuple& Features, HTuple* ClassProb, HTuple* Density, HTuple* KSigmaProb);

LIntExport Herror train_class_gmm(const HTuple& GMMHandle, const HTuple& MaxIter, const HTuple& Threshold, const HTuple& ClassPriors, const HTuple& Regularize, HTuple* Centers, HTuple* Iter);

LIntExport Herror get_prep_info_class_gmm(const HTuple& GMMHandle, const HTuple& Preprocessing, HTuple* InformationCont, HTuple* CumInformationCont);

LIntExport Herror get_sample_num_class_gmm(const HTuple& GMMHandle, HTuple* NumSamples);

LIntExport Herror get_sample_class_gmm(const HTuple& GMMHandle, const HTuple& NumSample, HTuple* Features, HTuple* ClassID);

LIntExport Herror add_sample_class_gmm(const HTuple& GMMHandle, const HTuple& Features, const HTuple& ClassID, const HTuple& Randomize);

LIntExport Herror get_params_class_gmm(const HTuple& GMMHandle, HTuple* NumDim, HTuple* NumClasses, HTuple* MinCenters, HTuple* MaxCenters, HTuple* CovarType);

LIntExport Herror create_class_gmm(const HTuple& NumDim, const HTuple& NumClasses, const HTuple& NumCenters, const HTuple& CovarType, const HTuple& Preprocessing, const HTuple& NumComponents, const HTuple& RandSeed, HTuple* GMMHandle);

LIntExport Herror clear_all_class_svm();

LIntExport Herror clear_class_svm(const HTuple& SVMHandle);

LIntExport Herror clear_samples_class_svm(const HTuple& SVMHandle);

LIntExport Herror deserialize_class_svm(const HTuple& SerializedItemHandle, HTuple* SVMHandle);

LIntExport Herror serialize_class_svm(const HTuple& SVMHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_class_svm(const HTuple& FileName, HTuple* SVMHandle);

LIntExport Herror write_class_svm(const HTuple& SVMHandle, const HTuple& FileName);

LIntExport Herror read_samples_class_svm(const HTuple& SVMHandle, const HTuple& FileName);

LIntExport Herror write_samples_class_svm(const HTuple& SVMHandle, const HTuple& FileName);

LIntExport Herror evaluate_class_svm(const HTuple& SVMHandle, const HTuple& Features, HTuple* Result);

LIntExport Herror classify_class_svm(const HTuple& SVMHandle, const HTuple& Features, const HTuple& Num, HTuple* Class);

LIntExport Herror reduce_class_svm(const HTuple& SVMHandle, const HTuple& Method, const HTuple& MinRemainingSV, const HTuple& MaxError, HTuple* SVMHandleReduced);

LIntExport Herror train_class_svm(const HTuple& SVMHandle, const HTuple& Epsilon, const HTuple& TrainMode);

LIntExport Herror get_prep_info_class_svm(const HTuple& SVMHandle, const HTuple& Preprocessing, HTuple* InformationCont, HTuple* CumInformationCont);

LIntExport Herror get_support_vector_num_class_svm(const HTuple& SVMHandle, HTuple* NumSupportVectors, HTuple* NumSVPerSVM);

LIntExport Herror get_support_vector_class_svm(const HTuple& SVMHandle, const HTuple& IndexSupportVector, HTuple* Index);

LIntExport Herror get_sample_num_class_svm(const HTuple& SVMHandle, HTuple* NumSamples);

LIntExport Herror get_sample_class_svm(const HTuple& SVMHandle, const HTuple& IndexSample, HTuple* Features, HTuple* Target);

LIntExport Herror add_sample_class_svm(const HTuple& SVMHandle, const HTuple& Features, const HTuple& Class);

LIntExport Herror get_params_class_svm(const HTuple& SVMHandle, HTuple* NumFeatures, HTuple* KernelType, HTuple* KernelParam, HTuple* Nu, HTuple* NumClasses, HTuple* Mode, HTuple* Preprocessing, HTuple* NumComponents);

LIntExport Herror create_class_svm(const HTuple& NumFeatures, const HTuple& KernelType, const HTuple& KernelParam, const HTuple& Nu, const HTuple& NumClasses, const HTuple& Mode, const HTuple& Preprocessing, const HTuple& NumComponents, HTuple* SVMHandle);

LIntExport Herror clear_all_class_mlp();

LIntExport Herror clear_class_mlp(const HTuple& MLPHandle);

LIntExport Herror clear_samples_class_mlp(const HTuple& MLPHandle);

LIntExport Herror deserialize_class_mlp(const HTuple& SerializedItemHandle, HTuple* MLPHandle);

LIntExport Herror serialize_class_mlp(const HTuple& MLPHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_class_mlp(const HTuple& FileName, HTuple* MLPHandle);

LIntExport Herror write_class_mlp(const HTuple& MLPHandle, const HTuple& FileName);

LIntExport Herror read_samples_class_mlp(const HTuple& MLPHandle, const HTuple& FileName);

LIntExport Herror write_samples_class_mlp(const HTuple& MLPHandle, const HTuple& FileName);

LIntExport Herror classify_class_mlp(const HTuple& MLPHandle, const HTuple& Features, const HTuple& Num, HTuple* Class, HTuple* Confidence);

LIntExport Herror evaluate_class_mlp(const HTuple& MLPHandle, const HTuple& Features, HTuple* Result);

LIntExport Herror train_class_mlp(const HTuple& MLPHandle, const HTuple& MaxIterations, const HTuple& WeightTolerance, const HTuple& ErrorTolerance, HTuple* Error, HTuple* ErrorLog);

LIntExport Herror get_prep_info_class_mlp(const HTuple& MLPHandle, const HTuple& Preprocessing, HTuple* InformationCont, HTuple* CumInformationCont);

LIntExport Herror get_sample_num_class_mlp(const HTuple& MLPHandle, HTuple* NumSamples);

LIntExport Herror get_sample_class_mlp(const HTuple& MLPHandle, const HTuple& IndexSample, HTuple* Features, HTuple* Target);

LIntExport Herror get_rejection_params_class_mlp(const HTuple& MLPHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_rejection_params_class_mlp(const HTuple& MLPHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror add_sample_class_mlp(const HTuple& MLPHandle, const HTuple& Features, const HTuple& Target);

LIntExport Herror get_regularization_params_class_mlp(const HTuple& MLPHandle, const HTuple& GenParamName, HTuple* GenParamValue);

LIntExport Herror set_regularization_params_class_mlp(const HTuple& MLPHandle, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror get_params_class_mlp(const HTuple& MLPHandle, HTuple* NumInput, HTuple* NumHidden, HTuple* NumOutput, HTuple* OutputFunction, HTuple* Preprocessing, HTuple* NumComponents);

LIntExport Herror create_class_mlp(const HTuple& NumInput, const HTuple& NumHidden, const HTuple& NumOutput, const HTuple& OutputFunction, const HTuple& Preprocessing, const HTuple& NumComponents, const HTuple& RandSeed, HTuple* MLPHandle);

LIntExport Herror deserialize_class_box(const HTuple& ClassifHandle, const HTuple& SerializedItemHandle);

LIntExport Herror serialize_class_box(const HTuple& ClassifHandle, HTuple* SerializedItemHandle);

LIntExport Herror write_class_box(const HTuple& ClassifHandle, const HTuple& FileName);

LIntExport Herror set_class_box_param(const HTuple& ClassifHandle, const HTuple& Flag, const HTuple& Value);

LIntExport Herror read_sampset(const HTuple& FileName, HTuple* SampKey);

LIntExport Herror read_class_box(const HTuple& ClassifHandle, const HTuple& FileName);

LIntExport Herror learn_sampset_box(const HTuple& ClassifHandle, const HTuple& SampKey, const HTuple& Outfile, const HTuple& NSamples, const HTuple& StopError, const HTuple& ErrorN);

LIntExport Herror learn_class_box(const HTuple& ClassifHandle, const HTuple& Features, const HTuple& Class);

LIntExport Herror get_class_box_param(const HTuple& ClassifHandle, const HTuple& Flag, HTuple* Value);

LIntExport Herror clear_sampset(const HTuple& SampKey);

LIntExport Herror close_class_box(const HTuple& ClassifHandle);

LIntExport Herror create_class_box(HTuple* ClassifHandle);

LIntExport Herror descript_class_box(const HTuple& ClassifHandle, const HTuple& Dimensions, HTuple* ClassIdx, HTuple* BoxIdx, HTuple* BoxLowerBound, HTuple* BoxHigherBound, HTuple* BoxNumSamplesTrain, HTuple* BoxNumSamplesWrong);

LIntExport Herror test_sampset_box(const HTuple& ClassifHandle, const HTuple& SampKey, HTuple* Error);

LIntExport Herror enquire_reject_class_box(const HTuple& ClassifHandle, const HTuple& FeatureList, HTuple* Class);

LIntExport Herror enquire_class_box(const HTuple& ClassifHandle, const HTuple& FeatureList, HTuple* Class);

LIntExport Herror close_all_class_box();

LIntExport Herror convert_map_type(const HObject& Map, HObject* MapConverted, const HTuple& NewType, const HTuple& ImageWidth);

LIntExport Herror vector_to_pose(const HTuple& WorldX, const HTuple& WorldY, const HTuple& WorldZ, const HTuple& ImageRow, const HTuple& ImageColumn, const HTuple& CameraParam, const HTuple& Method, const HTuple& QualityType, HTuple* Pose, HTuple* Quality);

LIntExport Herror proj_hom_mat2d_to_pose(const HTuple& Homography, const HTuple& CameraMatrix, const HTuple& Method, HTuple* Pose);

LIntExport Herror radial_distortion_self_calibration(const HObject& Contours, HObject* SelectedContours, const HTuple& Width, const HTuple& Height, const HTuple& InlierThreshold, const HTuple& RandSeed, const HTuple& DistortionModel, const HTuple& DistortionCenter, const HTuple& PrincipalPointVar, HTuple* CameraParam);

LIntExport Herror cam_par_to_cam_mat(const HTuple& CameraParam, HTuple* CameraMatrix, HTuple* ImageWidth, HTuple* ImageHeight);

LIntExport Herror cam_mat_to_cam_par(const HTuple& CameraMatrix, const HTuple& Kappa, const HTuple& ImageWidth, const HTuple& ImageHeight, HTuple* CameraParam);

LIntExport Herror stationary_camera_self_calibration(const HTuple& NumImages, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& ReferenceImage, const HTuple& MappingSource, const HTuple& MappingDest, const HTuple& HomMatrices2D, const HTuple& Rows1, const HTuple& Cols1, const HTuple& Rows2, const HTuple& Cols2, const HTuple& NumCorrespondences, const HTuple& EstimationMethod, const HTuple& CameraModel, const HTuple& FixedCameraParams, HTuple* CameraMatrices, HTuple* Kappa, HTuple* RotationMatrices, HTuple* X, HTuple* Y, HTuple* Z, HTuple* Error);

LIntExport Herror get_rectangle_pose(const HObject& Contour, const HTuple& CameraParam, const HTuple& Width, const HTuple& Height, const HTuple& WeightingMode, const HTuple& ClippingFactor, HTuple* Pose, HTuple* CovPose, HTuple* Error);

LIntExport Herror get_circle_pose(const HObject& Contour, const HTuple& CameraParam, const HTuple& Radius, const HTuple& OutputType, HTuple* Pose1, HTuple* Pose2);

LIntExport Herror radiometric_self_calibration(const HObject& Images, const HTuple& ExposureRatios, const HTuple& Features, const HTuple& FunctionType, const HTuple& Smoothness, const HTuple& PolynomialDegree, HTuple* InverseResponse);

LIntExport Herror map_image(const HObject& Image, const HObject& Map, HObject* ImageMapped);

LIntExport Herror gen_radial_distortion_map(HObject* Map, const HTuple& CamParamIn, const HTuple& CamParamOut, const HTuple& MapType);

LIntExport Herror gen_image_to_world_plane_map(HObject* Map, const HTuple& CameraParam, const HTuple& WorldPose, const HTuple& WidthIn, const HTuple& HeightIn, const HTuple& WidthMapped, const HTuple& HeightMapped, const HTuple& Scale, const HTuple& MapType);

LIntExport Herror image_to_world_plane(const HObject& Image, HObject* ImageWorld, const HTuple& CameraParam, const HTuple& WorldPose, const HTuple& Width, const HTuple& Height, const HTuple& Scale, const HTuple& Interpolation);

LIntExport Herror contour_to_world_plane_xld(const HObject& Contours, HObject* ContoursTrans, const HTuple& CameraParam, const HTuple& WorldPose, const HTuple& Scale);

LIntExport Herror image_points_to_world_plane(const HTuple& CameraParam, const HTuple& WorldPose, const HTuple& Rows, const HTuple& Cols, const HTuple& Scale, HTuple* X, HTuple* Y);

LIntExport Herror set_origin_pose(const HTuple& PoseIn, const HTuple& DX, const HTuple& DY, const HTuple& DZ, HTuple* PoseNewOrigin);

LIntExport Herror hand_eye_calibration(const HTuple& X, const HTuple& Y, const HTuple& Z, const HTuple& Row, const HTuple& Col, const HTuple& NumPoints, const HTuple& RobotPoses, const HTuple& CameraParam, const HTuple& Method, const HTuple& QualityType, HTuple* CameraPose, HTuple* CalibrationPose, HTuple* Quality);

LIntExport Herror get_pose_type(const HTuple& Pose, HTuple* OrderOfTransform, HTuple* OrderOfRotation, HTuple* ViewOfTransform);

LIntExport Herror convert_pose_type(const HTuple& PoseIn, const HTuple& OrderOfTransform, const HTuple& OrderOfRotation, const HTuple& ViewOfTransform, HTuple* PoseOut);

LIntExport Herror create_pose(const HTuple& TransX, const HTuple& TransY, const HTuple& TransZ, const HTuple& RotX, const HTuple& RotY, const HTuple& RotZ, const HTuple& OrderOfTransform, const HTuple& OrderOfRotation, const HTuple& ViewOfTransform, HTuple* Pose);

LIntExport Herror change_radial_distortion_contours_xld(const HObject& Contours, HObject* ContoursRectified, const HTuple& CamParamIn, const HTuple& CamParamOut);

LIntExport Herror change_radial_distortion_points(const HTuple& Row, const HTuple& Col, const HTuple& CamParamIn, const HTuple& CamParamOut, HTuple* RowChanged, HTuple* ColChanged);

LIntExport Herror change_radial_distortion_image(const HObject& Image, const HObject& Region, HObject* ImageRectified, const HTuple& CamParamIn, const HTuple& CamParamOut);

LIntExport Herror change_radial_distortion_cam_par(const HTuple& Mode, const HTuple& CamParamIn, const HTuple& DistortionCoeffs, HTuple* CamParamOut);

LIntExport Herror gen_caltab(const HTuple& XNum, const HTuple& YNum, const HTuple& MarkDist, const HTuple& DiameterRatio, const HTuple& CalPlateDescr, const HTuple& CalPlatePSFile);

LIntExport Herror create_caltab(const HTuple& NumRows, const HTuple& MarksPerRow, const HTuple& Diameter, const HTuple& FinderRow, const HTuple& FinderColumn, const HTuple& Polarity, const HTuple& CalPlateDescr, const HTuple& CalPlatePSFile);

LIntExport Herror caltab_points(const HTuple& CalPlateDescr, HTuple* X, HTuple* Y, HTuple* Z);

LIntExport Herror get_line_of_sight(const HTuple& Row, const HTuple& Column, const HTuple& CameraParam, HTuple* PX, HTuple* PY, HTuple* PZ, HTuple* QX, HTuple* QY, HTuple* QZ);

LIntExport Herror project_hom_point_hom_mat3d(const HTuple& HomMat3D, const HTuple& Px, const HTuple& Py, const HTuple& Pz, const HTuple& Pw, HTuple* Qx, HTuple* Qy, HTuple* Qw);

LIntExport Herror project_point_hom_mat3d(const HTuple& HomMat3D, const HTuple& Px, const HTuple& Py, const HTuple& Pz, HTuple* Qx, HTuple* Qy);

LIntExport Herror project_3d_point(const HTuple& X, const HTuple& Y, const HTuple& Z, const HTuple& CameraParam, HTuple* Row, HTuple* Column);

LIntExport Herror cam_par_pose_to_hom_mat3d(const HTuple& CameraParam, const HTuple& Pose, HTuple* HomMat3D);

LIntExport Herror hom_mat3d_to_pose(const HTuple& HomMat3D, HTuple* Pose);

LIntExport Herror pose_to_hom_mat3d(const HTuple& Pose, HTuple* HomMat3D);

LIntExport Herror deserialize_cam_par(const HTuple& SerializedItemHandle, HTuple* CameraParam);

LIntExport Herror serialize_cam_par(const HTuple& CameraParam, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_pose(const HTuple& SerializedItemHandle, HTuple* Pose);

LIntExport Herror serialize_pose(const HTuple& Pose, HTuple* SerializedItemHandle);

LIntExport Herror read_pose(const HTuple& PoseFile, HTuple* Pose);

LIntExport Herror write_pose(const HTuple& Pose, const HTuple& PoseFile);

LIntExport Herror read_cam_par(const HTuple& CamParFile, HTuple* CameraParam);

LIntExport Herror write_cam_par(const HTuple& CameraParam, const HTuple& CamParFile);

LIntExport Herror sim_caltab(HObject* SimImage, const HTuple& CalPlateDescr, const HTuple& CameraParam, const HTuple& CalPlatePose, const HTuple& GrayBackground, const HTuple& GrayPlate, const HTuple& GrayMarks, const HTuple& ScaleFac);

LIntExport Herror disp_caltab(const HTuple& WindowHandle, const HTuple& CalPlateDescr, const HTuple& CameraParam, const HTuple& CalPlatePose, const HTuple& ScaleFac);

LIntExport Herror camera_calibration(const HTuple& NX, const HTuple& NY, const HTuple& NZ, const HTuple& NRow, const HTuple& NCol, const HTuple& StartCamParam, const HTuple& NStartPose, const HTuple& EstimateParams, HTuple* CameraParam, HTuple* NFinalPose, HTuple* Errors);

LIntExport Herror find_marks_and_pose(const HObject& Image, const HObject& CalPlateRegion, const HTuple& CalPlateDescr, const HTuple& StartCamParam, const HTuple& StartThresh, const HTuple& DeltaThresh, const HTuple& MinThresh, const HTuple& Alpha, const HTuple& MinContLength, const HTuple& MaxDiamMarks, HTuple* RCoord, HTuple* CCoord, HTuple* StartPose);

LIntExport Herror find_caltab(const HObject& Image, HObject* CalPlate, const HTuple& CalPlateDescr, const HTuple& SizeGauss, const HTuple& MarkThresh, const HTuple& MinDiamMarks);

LIntExport Herror clear_all_camera_setup_models();

LIntExport Herror clear_camera_setup_model(const HTuple& CameraSetupModelID);

LIntExport Herror serialize_camera_setup_model(const HTuple& CameraSetupModelID, HTuple* SerializedItemHandle);

LIntExport Herror deserialize_camera_setup_model(const HTuple& SerializedItemHandle, HTuple* CameraSetupModelID);

LIntExport Herror write_camera_setup_model(const HTuple& CameraSetupModelID, const HTuple& FileName);

LIntExport Herror read_camera_setup_model(const HTuple& FileName, HTuple* CameraSetupModelID);

LIntExport Herror get_camera_setup_param(const HTuple& CameraSetupModelID, const HTuple& CameraIdx, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_camera_setup_param(const HTuple& CameraSetupModelID, const HTuple& CameraIdx, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror set_camera_setup_cam_param(const HTuple& CameraSetupModelID, const HTuple& CameraIdx, const HTuple& CameraType, const HTuple& CameraParam, const HTuple& CameraPose);

LIntExport Herror create_camera_setup_model(const HTuple& NumCameras, HTuple* CameraSetupModelID);

LIntExport Herror clear_all_calib_data();

LIntExport Herror clear_calib_data(const HTuple& CalibDataID);

LIntExport Herror deserialize_calib_data(const HTuple& SerializedItemHandle, HTuple* CalibDataID);

LIntExport Herror serialize_calib_data(const HTuple& CalibDataID, HTuple* SerializedItemHandle);

LIntExport Herror read_calib_data(const HTuple& FileName, HTuple* CalibDataID);

LIntExport Herror write_calib_data(const HTuple& CalibDataID, const HTuple& FileName);

LIntExport Herror calibrate_hand_eye(const HTuple& CalibDataID, HTuple* Errors);

LIntExport Herror calibrate_cameras(const HTuple& CalibDataID, HTuple* Error);

LIntExport Herror remove_calib_data(const HTuple& CalibDataID, const HTuple& ItemType, const HTuple& ItemIdx);

LIntExport Herror set_calib_data(const HTuple& CalibDataID, const HTuple& ItemType, const HTuple& ItemIdx, const HTuple& DataName, const HTuple& DataValue);

LIntExport Herror find_calib_object(const HObject& Image, const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx, const HTuple& GenParamName, const HTuple& GenParamValue);

LIntExport Herror remove_calib_data_observ(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx);

LIntExport Herror get_calib_data_observ_contours(HObject* Contours, const HTuple& CalibDataID, const HTuple& ContourName, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx);

LIntExport Herror get_calib_data_observ_pose(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx, HTuple* ObjInCameraPose);

LIntExport Herror set_calib_data_observ_pose(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx, const HTuple& ObjInCameraPose);

LIntExport Herror get_calib_data_observ_points(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx, HTuple* Row, HTuple* Column, HTuple* Index, HTuple* Pose);

LIntExport Herror set_calib_data_observ_points(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CalibObjIdx, const HTuple& CalibObjPoseIdx, const HTuple& Row, const HTuple& Column, const HTuple& Index, const HTuple& Pose);

LIntExport Herror query_calib_data_observ_indices(const HTuple& CalibDataID, const HTuple& ItemType, const HTuple& ItemIdx, HTuple* Index1, HTuple* Index2);

LIntExport Herror get_calib_data(const HTuple& CalibDataID, const HTuple& ItemType, const HTuple& ItemIdx, const HTuple& DataName, HTuple* DataValue);

LIntExport Herror set_calib_data_calib_object(const HTuple& CalibDataID, const HTuple& CalibObjIdx, const HTuple& CalibObjDescr);

LIntExport Herror set_calib_data_cam_param(const HTuple& CalibDataID, const HTuple& CameraIdx, const HTuple& CameraType, const HTuple& CameraParam);

LIntExport Herror create_calib_data(const HTuple& CalibSetup, const HTuple& NumCameras, const HTuple& NumCalibObjects, HTuple* CalibDataID);

LIntExport Herror get_bead_inspection_param(const HTuple& BeadInspectionModel, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror set_bead_inspection_param(const HTuple& BeadInspectionModel, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror apply_bead_inspection_model(const HObject& Image, HObject* LeftContour, HObject* RightContour, HObject* ErrorSegment, const HTuple& BeadInspectionModel, HTuple* ErrorType);

LIntExport Herror clear_bead_inspection_model(const HTuple& BeadInspectionModel);

LIntExport Herror create_bead_inspection_model(const HObject& BeadContour, const HTuple& TargetThickness, const HTuple& ThicknessTolerance, const HTuple& PositionTolerance, const HTuple& Polarity, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* BeadInspectionModel);

LIntExport Herror deserialize_bar_code_model(const HTuple& SerializedItemHandle, HTuple* BarCodeHandle);

LIntExport Herror serialize_bar_code_model(const HTuple& BarCodeHandle, HTuple* SerializedItemHandle);

LIntExport Herror read_bar_code_model(const HTuple& FileName, HTuple* BarCodeHandle);

LIntExport Herror write_bar_code_model(const HTuple& BarCodeHandle, const HTuple& FileName);

LIntExport Herror get_bar_code_object(HObject* BarCodeObjects, const HTuple& BarCodeHandle, const HTuple& CandidateHandle, const HTuple& ObjectName);

LIntExport Herror get_bar_code_result(const HTuple& BarCodeHandle, const HTuple& CandidateHandle, const HTuple& ResultName, HTuple* BarCodeResults);

LIntExport Herror decode_bar_code_rectangle2(const HObject& Image, const HTuple& BarCodeHandle, const HTuple& CodeType, const HTuple& Row, const HTuple& Column, const HTuple& Phi, const HTuple& Length1, const HTuple& Length2, HTuple* DecodedDataStrings);

LIntExport Herror find_bar_code(const HObject& Image, HObject* SymbolRegions, const HTuple& BarCodeHandle, const HTuple& CodeType, HTuple* DecodedDataStrings);

LIntExport Herror query_bar_code_params(const HTuple& BarCodeHandle, const HTuple& Properties, HTuple* GenParamNames);

LIntExport Herror get_bar_code_param_specific(const HTuple& BarCodeHandle, const HTuple& CodeTypes, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror get_bar_code_param(const HTuple& BarCodeHandle, const HTuple& GenParamNames, HTuple* GenParamValues);

LIntExport Herror set_bar_code_param_specific(const HTuple& BarCodeHandle, const HTuple& CodeTypes, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror set_bar_code_param(const HTuple& BarCodeHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

LIntExport Herror clear_all_bar_code_models();

LIntExport Herror clear_bar_code_model(const HTuple& BarCodeHandle);

LIntExport Herror create_bar_code_model(const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* BarCodeHandle);

LIntExport Herror decode_2d_bar_code(const HTuple& BarCodeDescr, const HTuple& BarCodeDimension, const HTuple& BarCodeData, HTuple* SymbolCharacters, HTuple* CorrSymbolData, HTuple* DecodedData, HTuple* DecodingError, HTuple* StructuredAppend);

LIntExport Herror get_2d_bar_code_pos(const HObject& BarCodeRegion, const HObject& Image, const HTuple& BarCodeDescr, const HTuple& CodeRegDescr, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* BarCodeDimension, HTuple* BarCodeData, HTuple* DataElementRow, HTuple* DataElementCol);

LIntExport Herror get_2d_bar_code(const HObject& BarCodeRegion, const HObject& Image, const HTuple& BarCodeDescr, const HTuple& CodeRegDescr, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* BarCodeDimension, HTuple* BarCodeData);

LIntExport Herror find_2d_bar_code(const HObject& Image, HObject* CodeRegion, const HTuple& BarCodeDescr, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* CodeRegDescr);

LIntExport Herror gen_2d_bar_code_descr(const HTuple& CodeType, const HTuple& GenParamNames, const HTuple& GenParamValues, HTuple* BarCodeDescr);

LIntExport Herror discrete_1d_bar_code(const HTuple& Elements, const HTuple& BarCodeDescr, HTuple* DiscreteBarCode);

LIntExport Herror decode_1d_bar_code(const HTuple& BarCodeElements, const HTuple& BarCodeDescr, HTuple* Characters, HTuple* Reference, HTuple* IsCorrect);

LIntExport Herror get_1d_bar_code_scanline(const HObject& BarCodeRegion, const HTuple& BarCodeDescr, const HTuple& GenericName, const HTuple& GenericValue, const HTuple& Orientation, const HTuple& StopIfFound, HTuple* BarCodeElements, HTuple* ScanlineNumPoints, HTuple* ScanlineDecoded, HTuple* ScanlinePointsRow, HTuple* ScanlinePointsColumn);

LIntExport Herror get_1d_bar_code(const HObject& BarCodeRegion, const HTuple& BarCodeDescr, const HTuple& GenericName, const HTuple& GenericValue, const HTuple& Orientation, HTuple* BarCodeElements);

LIntExport Herror find_1d_bar_code_region(const HObject& Image, HObject* CodeRegion, const HTuple& BarCodeDescr, const HTuple& GenericName, const HTuple& GenericValue, HTuple* Orientation);

LIntExport Herror find_1d_bar_code_scanline(const HObject& Image, HObject* CodeRegion, const HTuple& BarCodeDescr, const HTuple& GenericName, const HTuple& GenericValue, const HTuple& StopIfFound, HTuple* BarcodeFound, HTuple* BarCodeElements, HTuple* Orientation, HTuple* ScanlineNumPoints, HTuple* ScanlineDecoded, HTuple* ScanlinePointsRow, HTuple* ScanlinePointsColumn);

LIntExport Herror find_1d_bar_code(const HObject& Image, HObject* CodeRegion, const HTuple& BarCodeDescr, const HTuple& GenericName, const HTuple& GenericValue, HTuple* BarcodeFound, HTuple* BarCodeElements, HTuple* Orientation);

LIntExport Herror gen_1d_bar_code_descr(const HTuple& CodeName, const HTuple& MinCharacters, const HTuple& MaxCharacters, HTuple* BarCodeDescr);

LIntExport Herror gen_1d_bar_code_descr_gen(const HTuple& MinCodeLength, const HTuple& MaxCodeLength, const HTuple& ElementSizes, const HTuple& StartElement, const HTuple& StopElement, const HTuple& MaxSizeRatio, const HTuple& DiscreteCode, HTuple* BarCodeDescr);

LIntExport Herror close_bg_esti(const HTuple& BgEstiHandle);

LIntExport Herror give_bg_esti(HObject* BackgroundImage, const HTuple& BgEstiHandle);

LIntExport Herror update_bg_esti(const HObject& PresentImage, const HObject& UpDateRegion, const HTuple& BgEstiHandle);

LIntExport Herror run_bg_esti(const HObject& PresentImage, HObject* ForegroundRegion, const HTuple& BgEstiHandle);

LIntExport Herror get_bg_esti_params(const HTuple& BgEstiHandle, HTuple* Syspar1, HTuple* Syspar2, HTuple* GainMode, HTuple* Gain1, HTuple* Gain2, HTuple* AdaptMode, HTuple* MinDiff, HTuple* StatNum, HTuple* ConfidenceC, HTuple* TimeC);

LIntExport Herror set_bg_esti_params(const HTuple& BgEstiHandle, const HTuple& Syspar1, const HTuple& Syspar2, const HTuple& GainMode, const HTuple& Gain1, const HTuple& Gain2, const HTuple& AdaptMode, const HTuple& MinDiff, const HTuple& StatNum, const HTuple& ConfidenceC, const HTuple& TimeC);

LIntExport Herror create_bg_esti(const HObject& InitializeImage, const HTuple& Syspar1, const HTuple& Syspar2, const HTuple& GainMode, const HTuple& Gain1, const HTuple& Gain2, const HTuple& AdaptMode, const HTuple& MinDiff, const HTuple& StatNum, const HTuple& ConfidenceC, const HTuple& TimeC, HTuple* BgEstiHandle);

LIntExport Herror close_all_bg_esti();

LIntExport Herror control_io_channel(const HTuple& IOChannelHandle, const HTuple& ParamAction, const HTuple& ParamArgument, HTuple* ParamValue);

LIntExport Herror write_io_channel(const HTuple& IOChannelHandle, const HTuple& Value, HTuple* Status);

LIntExport Herror read_io_channel(const HTuple& IOChannelHandle, HTuple* Value, HTuple* Status);

LIntExport Herror set_io_channel_param(const HTuple& IOChannelHandle, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror get_io_channel_param(const HTuple& IOChannelHandle, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror close_io_channel(const HTuple& IOChannelHandle);

LIntExport Herror open_io_channel(const HTuple& IODeviceHandle, const HTuple& IOChannelName, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* IOChannelHandle);

LIntExport Herror query_io_device(const HTuple& IODeviceHandle, const HTuple& IOChannelName, const HTuple& Query, HTuple* Result);

LIntExport Herror control_io_device(const HTuple& IODeviceHandle, const HTuple& Action, const HTuple& Argument, HTuple* Result);

LIntExport Herror set_io_device_param(const HTuple& IODeviceHandle, const HTuple& ParamName, const HTuple& ParamValue);

LIntExport Herror get_io_device_param(const HTuple& IODeviceHandle, const HTuple& ParamName, HTuple* ParamValue);

LIntExport Herror close_io_device(const HTuple& IODeviceHandle);

LIntExport Herror open_io_device(const HTuple& IOInterfaceName, const HTuple& IODeviceName, const HTuple& GenParamName, const HTuple& GenParamValue, HTuple* IODeviceHandle);

LIntExport Herror control_io_interface(const HTuple& IOInterfaceName, const HTuple& Action, const HTuple& Argument, HTuple* Result);

LIntExport Herror query_io_interface(const HTuple& IOInterfaceName, const HTuple& Query, HTuple* Result);

LIntExport Herror get_framegrabber_param(const HTuple& AcqHandle, const HTuple& Param, HTuple* Value);

LIntExport Herror set_framegrabber_param(const HTuple& AcqHandle, const HTuple& Param, const HTuple& Value);

LIntExport Herror get_framegrabber_callback(const HTuple& AcqHandle, const HTuple& CallbackType, HTuple* CallbackFunction, HTuple* UserContext);

LIntExport Herror set_framegrabber_callback(const HTuple& AcqHandle, const HTuple& CallbackType, const HTuple& CallbackFunction, const HTuple& UserContext);

LIntExport Herror grab_data_async(HObject* Image, HObject* Region, HObject* Contours, const HTuple& AcqHandle, const HTuple& MaxDelay, HTuple* Data);

LIntExport Herror grab_data(HObject* Image, HObject* Region, HObject* Contours, const HTuple& AcqHandle, HTuple* Data);

LIntExport Herror grab_image_async(HObject* Image, const HTuple& AcqHandle, const HTuple& MaxDelay);

LIntExport Herror grab_image_start(const HTuple& AcqHandle, const HTuple& MaxDelay);

LIntExport Herror grab_image(HObject* Image, const HTuple& AcqHandle);

LIntExport Herror info_framegrabber(const HTuple& Name, const HTuple& Query, HTuple* Information, HTuple* ValueList);

LIntExport Herror close_all_framegrabbers();

LIntExport Herror close_framegrabber(const HTuple& AcqHandle);

LIntExport Herror open_framegrabber(const HTuple& Name, const HTuple& HorizontalResolution, const HTuple& VerticalResolution, const HTuple& ImageWidth, const HTuple& ImageHeight, const HTuple& StartRow, const HTuple& StartColumn, const HTuple& Field, const HTuple& BitsPerChannel, const HTuple& ColorSpace, const HTuple& Generic, const HTuple& ExternalTrigger, const HTuple& CameraType, const HTuple& Device, const HTuple& Port, const HTuple& LineIn, HTuple* AcqHandle);

LIntExport Herror get_framegrabber_lut(const HTuple& AcqHandle, HTuple* ImageRed, HTuple* ImageGreen, HTuple* ImageBlue);

LIntExport Herror set_framegrabber_lut(const HTuple& AcqHandle, const HTuple& ImageRed, const HTuple& ImageGreen, const HTuple& ImageBlue);

}

#endif
